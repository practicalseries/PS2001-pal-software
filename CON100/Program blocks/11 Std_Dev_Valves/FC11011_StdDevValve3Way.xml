<?xml version="1.0" encoding="utf-8"?>
<Document>
  <Engineering version="V16" />
  <DocumentInfo>
    <Created>2022-06-11T10:52:23.8097839Z</Created>
    <ExportSetting>WithDefaults</ExportSetting>
    <InstalledProducts>
      <Product>
        <DisplayName>Totally Integrated Automation Portal</DisplayName>
        <DisplayVersion>V16 Update 3</DisplayVersion>
      </Product>
      <OptionPackage>
        <DisplayName>TIA Portal Version Control Interface</DisplayName>
        <DisplayVersion>V16 Update 2</DisplayVersion>
      </OptionPackage>
      <OptionPackage>
        <DisplayName>TIA Portal Openness</DisplayName>
        <DisplayVersion>V16 Update 3</DisplayVersion>
      </OptionPackage>
      <Product>
        <DisplayName>STEP 7 Professional</DisplayName>
        <DisplayVersion>V16 Update 3</DisplayVersion>
      </Product>
      <OptionPackage>
        <DisplayName>STEP 7 Safety</DisplayName>
        <DisplayVersion>V16</DisplayVersion>
      </OptionPackage>
      <Product>
        <DisplayName>WinCC Professional</DisplayName>
        <DisplayVersion>V16 Update 3</DisplayVersion>
      </Product>
    </InstalledProducts>
  </DocumentInfo>
  <SW.Blocks.FC ID="0">
    <AttributeList>
      <AutoNumber>false</AutoNumber>
      <HeaderAuthor>M_Gledhill</HeaderAuthor>
      <HeaderFamily>DeviceDriver</HeaderFamily>
      <HeaderName>StdDevValve3Way</HeaderName>
      <HeaderVersion>1.0</HeaderVersion>
      <Interface><Sections xmlns="http://www.siemens.com/automation/Openness/SW/Interface/v4">
  <Section Name="Input">
    <Member Name="SYS_SIGNALS" Datatype="&quot;UT21000_Dy_SysSignals&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Common system signals — logic and timing signals</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Bool" />
          <Member Name="___________0010_1" Datatype="Bool" />
          <Member Name="_False" Datatype="Bool" />
          <Member Name="_True" Datatype="Bool" />
          <Member Name="_50ms" Datatype="Bool" />
          <Member Name="_100ms" Datatype="Bool" />
          <Member Name="_200ms" Datatype="Bool" />
          <Member Name="_500ms" Datatype="Bool" />
          <Member Name="_1s" Datatype="Bool" />
          <Member Name="_2s" Datatype="Bool" />
          <Member Name="_CycleTick" Datatype="Bool" />
          <Member Name="_CycleTock" Datatype="Bool" />
          <Member Name="_CycleFirst" Datatype="Bool" />
          <Member Name="_100msSqW" Datatype="Bool" />
          <Member Name="_200msSqW" Datatype="Bool" />
          <Member Name="_500msSqW" Datatype="Bool" />
          <Member Name="_1sSqW" Datatype="Bool" />
          <Member Name="_2sSqW" Datatype="Bool" />
        </Section>
      </Sections>
    </Member>
    <Member Name="FBK_ENG" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Positive energised position feedback (1 = valve energised0 = valve not energised)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="FBK_DENG" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Positive deenergised position feedback (1 = valve deenergised 0 = valve not deenergised</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="EXT_FAULT" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Device external fault signal (1 = fault, 0 = healthy)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="E_STOP" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Safety (E-STOP) signal (1 = ESTOP active, 0 = healthy)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="TRIP" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Interlock (TRIP) signal (1 = TRIP active, 0 = healthy)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="INTERLOCK" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Interlock (INTERLOCK) signal (1 = INTERLOCK active, 0 = healthy)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="PERMISSIVE" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Interlock (PERMISSIVE) signal (1 = PERMISSIVE active, 0 = healthy)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="STATIC_DATA" Datatype="&quot;UT11011_St_DevValve3Way&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Static data storage (UDT)</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Int" />
          <Member Name="___________0010_1" Datatype="Int" />
          <Member Name="CONFIG_FBK_ENG_EN" Datatype="Bool" />
          <Member Name="CONFIG_FBK_DENG_EN" Datatype="Bool" />
          <Member Name="CONFIG_ESTOP_DIS" Datatype="Bool" />
          <Member Name="CONFIG_TRIP_DIS" Datatype="Bool" />
          <Member Name="CONFIG_ILOCK_DIS" Datatype="Bool" />
          <Member Name="CONFIG_PERM_DIS" Datatype="Bool" />
          <Member Name="CONFIG_TRIP_ENG_DENG" Datatype="Bool" />
          <Member Name="CONFIG_ILOCK_ENG_DENG" Datatype="Bool" />
          <Member Name="CONFIG_PERM_ENG_DENG" Datatype="Bool" />
          <Member Name="CONFIG_FP_DIS" Datatype="Bool" />
          <Member Name="CONFIG_MAN_DIS" Datatype="Bool" />
          <Member Name="CONFIG_BYPASS_DIS" Datatype="Bool" />
          <Member Name="CONFIG_SIM_DIS" Datatype="Bool" />
          <Member Name="CONFIG_RL_EN" Datatype="Bool" />
          <Member Name="___________0020_0" Datatype="Int" />
          <Member Name="___________0020_1" Datatype="Int" />
          <Member Name="INFO_TAG" Datatype="String[20]" />
          <Member Name="___________0030_0" Datatype="Int" />
          <Member Name="___________0030_1" Datatype="Int" />
          <Member Name="TIME_ENG_MAX" Datatype="Real" />
          <Member Name="TIME_DENG_MAX" Datatype="Real" />
          <Member Name="TIME_DER_ENG" Datatype="Real" />
          <Member Name="TIME_DER_DENG" Datatype="Real" />
        </Section>
      </Sections>
    </Member>
  </Section>
  <Section Name="Output">
    <Member Name="OPERATE" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Valve operate signal (1 = energise the valve, 0 = deenergise the valve)</MultiLanguageText>
      </Comment>
    </Member>
  </Section>
  <Section Name="InOut">
    <Member Name="DYNAMIC_DATA" Datatype="&quot;UT31011_Dy_DevValve3Way&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Dynamic data storage (UDT)</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Int" />
          <Member Name="___________0010_1" Datatype="Int" />
          <Member Name="status_Deenergised" Datatype="Bool" />
          <Member Name="status_Energised" Datatype="Bool" />
          <Member Name="status_Deenergising" Datatype="Bool" />
          <Member Name="status_Energising" Datatype="Bool" />
          <Member Name="status_Operating" Datatype="Bool" />
          <Member Name="status_Fault" Datatype="Bool" />
          <Member Name="status_OperateOn" Datatype="Bool" />
          <Member Name="status_Aut" Datatype="Bool" />
          <Member Name="status_Man" Datatype="Bool" />
          <Member Name="status_EStop" Datatype="Bool" />
          <Member Name="status_Trip" Datatype="Bool" />
          <Member Name="status_Ilock" Datatype="Bool" />
          <Member Name="status_Perm" Datatype="Bool" />
          <Member Name="status_BypassOn" Datatype="Bool" />
          <Member Name="status_SimOn" Datatype="Bool" />
          <Member Name="status_RemoteOn" Datatype="Bool" />
          <Member Name="status_LocalOn" Datatype="Bool" />
          <Member Name="status_RLOff" Datatype="Bool" />
          <Member Name="___________0020_0" Datatype="Int" />
          <Member Name="___________0020_1" Datatype="Int" />
          <Member Name="msg_FailToEnergise" Datatype="Bool" />
          <Member Name="msg_FailToDeenergise" Datatype="Bool" />
          <Member Name="msg_FailWhileEnergised" Datatype="Bool" />
          <Member Name="msg_FailWhileDeenergised" Datatype="Bool" />
          <Member Name="msg_Flt_External" Datatype="Bool" />
          <Member Name="___________0030_0" Datatype="Int" />
          <Member Name="___________0030_1" Datatype="Int" />
          <Member Name="mode_AutMan" Datatype="Bool" />
          <Member Name="mode_BypassOn" Datatype="Bool" />
          <Member Name="mode_SimOn" Datatype="Bool" />
          <Member Name="mode_SimValue" Datatype="Int" />
          <Member Name="mode_RemoteOn" Datatype="Bool" />
          <Member Name="mode_LocalOn" Datatype="Bool" />
          <Member Name="mode_Reset" Datatype="Bool" />
          <Member Name="___________0040_0" Datatype="Int" />
          <Member Name="___________0040_1" Datatype="Int" />
          <Member Name="ctrl_Aut_EngDeng" Datatype="Bool" />
          <Member Name="ctrl_Man_EngDeng" Datatype="Bool" />
          <Member Name="___________0050_0" Datatype="Int" />
          <Member Name="___________0050_1" Datatype="Int" />
          <Member Name="batch_ID" Datatype="UInt" />
          <Member Name="___________0060_0" Datatype="Int" />
          <Member Name="___________0060_1" Datatype="Int" />
          <Member Name="actual_Operating_Timer" Datatype="Real" />
          <Member Name="actual_Last_Op_Time" Datatype="Real" />
          <Member Name="___________0090_0" Datatype="Int" />
          <Member Name="___________0090_1" Datatype="Int" />
          <Member Name="$derived_fbk_eng" Datatype="Bool" />
          <Member Name="$derived_fbk_deng" Datatype="Bool" />
          <Member Name="$sim_fbk_eng" Datatype="Bool" />
          <Member Name="$sim_fbk_deng" Datatype="Bool" />
          <Member Name="$ctrl_EngDeng" Datatype="Bool" />
          <Member Name="$pret_eng" Datatype="Bool" />
          <Member Name="$nret_deng" Datatype="Bool" />
        </Section>
      </Sections>
    </Member>
  </Section>
  <Section Name="Temp">
    <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
      <Comment>
        <MultiLanguageText Lang="en-US">Revision information for this block</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="REV_BLOCK" Datatype="String[7]" />
          <Member Name="REV_NUMBER" Datatype="String[20]" />
          <Member Name="REV_DATE" Datatype="String[10]" />
          <Member Name="REV_AUTHOR" Datatype="String[20]" />
        </Section>
      </Sections>
    </Member>
    <Member Name="licInfo" Datatype="&quot;UT01001_St_SysLicence&quot;">
      <Comment>
        <MultiLanguageText Lang="en-US">Licensing information for this block</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="LICENCE_TYPE" Datatype="String[20]" />
          <Member Name="COPYRIGHT" Datatype="String[30]" />
        </Section>
      </Sections>
    </Member>
    <Member Name="calDengElapsedTime" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Calculation - Derived deenergised signal elapsed time limit</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="calEngElapsedTime" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Calculation - Derived energised signal elapsed time limit</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkEng" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - energised position feedback signal (actual or derived)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkDeng" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - deenergised position feedback signal (actual or derived)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkCtrlPriority40" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - priority 40 condition controls the valve</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkCtrlPriority30" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - priority 30 condition controls the valve</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkCtrlPriority20" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - priority 20 condition controls the valve</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkCtrlPriority10" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - priority 10 condition controls the valve</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkCtrlPriority00" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - priority 00 condition controls the valve</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkCtrlAutManEngDeng" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - consolidated auto/manual energise or deenergise request</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkTimeFbkEngSim" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - value of energising timer before derived energised feedback</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkTimeFbkDengSim" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - value of deenergising timer before derived deenergised feedback</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkInt" Datatype="Int">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - storage area (integer)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkReal" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - storage area (Real)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkDInt" Datatype="DInt">
      <Comment>
        <MultiLanguageText Lang="en-US">Working - storage area (double integer)</MultiLanguageText>
      </Comment>
    </Member>
  </Section>
  <Section Name="Constant">
    <Member Name="k_TIME_OP_MIN" Datatype="Real" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Minimum value for the valve operation timer</MultiLanguageText>
      </Comment>
      <StartValue>0.21</StartValue>
    </Member>
  </Section>
  <Section Name="Return">
    <Member Name="Ret_Val" Datatype="Void" Accessibility="Public" />
  </Section>
</Sections></Interface>
      <IsIECCheckEnabled>true</IsIECCheckEnabled>
      <MemoryLayout>Optimized</MemoryLayout>
      <Name>FC11011_StdDevValve3Way</Name>
      <Number>11011</Number>
      <ProgrammingLanguage>LAD</ProgrammingLanguage>
      <SetENOAutomatically>false</SetENOAutomatically>
      <UDABlockProperties />
      <UDAEnableTagReadback>false</UDAEnableTagReadback>
    </AttributeList>
    <ObjectList>
      <MultilingualText ID="1" CompositionName="Comment">
        <ObjectList>
          <MultilingualTextItem ID="2" CompositionName="Items">
            <AttributeList>
              <Culture>en-US</Culture>
              <Text>
PRACTICAL SERIES AUTOMATION LIBRARY (PAL)   —   COPYRIGHT 2020 – M. GLEDHILL (MIT LICENCE)
                  ———— ◆ ————
FULL ONLINE DOCUMENTATION IS AVAILABLE AT: https://practicalseries.com/2001-pal/index.html</Text>
            </AttributeList>
          </MultilingualTextItem>
        </ObjectList>
      </MultilingualText>
      <SW.Blocks.CompileUnit ID="3" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="4" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="5" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄  ＳＴＡＮＤＡＲＤ  ▄▄ 


TITLE:    DEVICE DRIVER — THREE-WAY VALVE


▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 

┌──────────────────────────────────────────┐
│                                          │
│          FC11011 — SOFTWARE MODULE DESIGN SPECIFICATION (SMDS)            │
│                                          │
│      The PDF version of the SMDS for this module is available online here:        │
│              https://psop.uk/pal-smds-fc11011-p               │
│                                          │
│      It is also available as part of the Project User Defined Documentation,      │
│      it can be accessed by selecting this module in the Project Tree          │
│      (on the left) and pressing SHIFT+F1                        │
│                                          │
└─────────────────────────────────────── ʷᴵᴰ⁻ᵇᶠᵏ  ┘

FC11011_StdDevValve3Way controls the operation of 3-way valve with a common energised port 
(the action of the valve switches the common port to one of the other two ports) configured with 
either position feedback or no position feedback.

The module supports automatic and manual control and can be configured with simulation mode 
to allow the valve limit switch signals to be overwritten and set to follow the demand output. 

The module generates fault logic for the valve that will trigger specific alarms depending on the 
fault in question. The alarms within this block are: 

   •   Failed to Energise 

   •   Failed to Deenergise 

   •   Failed while Energised

   •   Failed while Deenergised

   •   External Fault 

Separate operation times for energising and deenergising can be defined. 

The valve module supports all forms of interlock, permissive and trip signals, and emergency stop 
signals. The module has the conditional facility to allow the operator to bypass interlocks, 
permissive and trip conditions.

Various status signals are generated for supervisory systems:

   •   Deenergised

   •   Energising

   •   Energised

   •   Deenergising

   •   Fault

The module also generates status signals for the selected operating modes and conditions.


▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
1.     BLOCK TECHNICAL SUMMARY


 ――――――――――――――――――――――――――――――――――――――――――
 NOMENCLATURE &amp; ADDRESSING
 ――――――――――――――――――――――――――――――――――――――――――
 BLOCK TITLE         Three-way Valve
 BLOCK FUNCTION GROUP    Device Driver 
 BLOCK ADDRESS       FC11011
 BLOCK SYMBOL        FC11011_StdDevValve3Way
 BLOCK USER ID         StdDevValve3Way

 ――――――――――――――――――――――――――――――――――――――――――
 BLOCK TYPE &amp; USAGE
 ――――――――――――――――――――――――――――――――――――――――――
 BLOCK TYPE         Function (FC)
 BLOCK NUMBER        11011
 LANGUAGE           LAD
 OPTIMISED ACCESS     Yes
 PAL USAGE TYPE       Standard block

 ――――――――――――――――――――――――――――――――――――――――――
 METRICS
 ――――――――――――――――――――――――――――――――――――――――――
 EXECUTION TIME       66.5 μs¹
 LOAD MEMORY       99.5 kB
 WORK MEMORY           2.2 kB  
 ――――――――――――――――――――――――――――――――――――――――――
               ¹ Measured on: CPU-1515-2PN (order no. 6ES7512-2AM02-0AB0) 
                            https://psop.uk/pal-ds-cpu1515



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
1.1      Additional document references


Only those documents specified in OB1 (section DOCUMENT REFERENCES) are listed within this 
block. There are no additional document references.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
2.     FUNCTIONAL DESCRIPTION


FC11011 is the Three Way Valve block, it is a comprehensive block designed to operate and 
monitor a standard three-way valve.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.1     Defining a three-way valve


A three-way (or diverting) valve is any valve that can connect a common port to one of two other 
ports, depending on its energised state:


       DEENERGISED STATE              ENERGISED STATE
                            ⣀⣴⠶⠛⠛⠛⠷⢦⣄                                                         ⣠⡴⠶⠛⠛⠛⠶⣦⣄                            
                        ⢀⡾⠋              ⠙⢷⡄                                                 ⢠⡾⠋              ⠙⢷⡀                        
                        ⣾⠁                    ⢿⡀                                               ⣿⠁                  ⠈⣷                        
⣼⣿⣿⣿⣿⣷⣤⡀        ⣿⠛⠛⠛⠛⠛⣿          ⣸⠇        ⣠⡾⠛⠛⠛⠛⣷ ⣾⣿⣿⣿⣿⣷⣄⡀      ⠸⣿⠛⠛⠛⠛⠛⣿          ⣿        ⢀⣠⣾⣿⣿⣿⣿⣷
⣿⣿⣿⣿⣿⣿⣿⣿⣶⣄    ⢹⣆        ⣿        ⢠⡿    ⣀⣴⠟⠁          ⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄    ⢻⡄        ⣿        ⣰⡟    ⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣀⠙⢷⣄⡀  ⣿    ⣀⣴⠟⢀⣤⠞⠋                ⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠻⢦⣄    ⣿  ⢀⣠⡾⠋⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⡿⠛⣉⣠⣤⣉⠙⠻⣿⣿⣷⣤⡉⠙⠛⣿⠛⠛⠉⣠⡾⠋⠁                    ⣿ ⣿⣿⣿⡿⠋⣉⣤⣤⣉⠙⢿⣿⣿⣷⣄⡉⠛⠛⣿⠛⠛⢉⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⡏⢠⣾⣿⣿⣿⣿⣿⣆⠘⣿⣿⣿⣿⣶⣄⣿⣠⡴⠟⠁                          ⣿ ⣿⣿⠏⢠⣿⣿⣿⣿⣿⣿⡄⠹⣿⣿⣿⣿⣦⣄⣿⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿  ⣿⣿⣿⣿⣿⣿⣿⣿  ⣿⣿⣿⣿⣿⣿⣿⡋                                ⣿ ⣿⣿  ⣿⣿⣿⣿⣿⣿⣿⣿  ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣇⠘⢿⣿⣿⣿⣿⣿⠏⢠⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⡀                          ⣿ ⣿⣿⣆⠹⣿⣿⣿⣿⣿⣿⠏⣰⣿⣿⣿⣿⣿⡟⠉⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣷⣄⣉⠛⠛⢋⣡⣴⣿⣿⣿⢟⣽⣿⣿⣿⣿⣿⣿⡛⢶⣄                      ⣿ ⣿⣿⣿⣷⣄⣉⠛⠛⣉⣠⣾⣿⣿⡿⢟⡿⠋      ⠙⣯⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠉⠻⣦⣀                ⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠉⣰⠟⠁          ⠈⢻⣄⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠁⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄  ⠙⠷⣤⡀          ⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋  ⢠⡾⠃                  ⠙⢷⡀⠈⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿
⢻⣿⣿⣿⣿⡿⠟⠁    ⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀  ⠈⠙⢶⣤⣤⣤⣤⡿ ⢿⣿⣿⣿⣿⡿⠋⠁    ⣴⠟                        ⠈⠻⣦    ⠈⠛⢿⣿⣿⣿⣿⡿
                ⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄                                 ⣠⡾⠁                              ⠘⢷⡄                
              ⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧                             ⣴⠏                                      ⠹⣦              
              ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿                             ⣿                                          ⣿              
              ⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿                             ⢿⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⡟              

  Common port (left) connected to bottom port     Common port (left) connected to right port


The left-hand image above shows a three-way valve in a deenergised state, the common port 
(on the left, signified by the circle on a dark background) is connected to port 1 (the bottom port, 
or the deenergised port). If the valve is energised (voltage is applied to its solenoid), the 
common port now becomes connected to port 2 (on the right, or the energised port), right-hand 
image.

Like the isolating valve (controlled by FC11001), the three-way valve has only two states, it is 
either deenergised to port 1 or energised to port 2 and cannot sustain any intermediate position. 
Three-way valves are generally spring-return type valves that adopt a particular state when 
energised, and return to the other state when deenergised. Such valves are generally operated 
directly via an electronic solenoid. Some are pneumatically operated, again by activating a 
solenoid that when energised applies air to one side to the valve, driving it to the energised 
state, the solenoid then vents the air when deenergised allowing the valve to return to its 
deenergised state via the spring-return mechanism within the valve. 

Three-way valves have a single flow-path through the valve, and this path either connects the 
common port to the deenergised port or to the energised port. Unlike the isolating valve (that is 
either energised or deenergised), the three-way valve is never deenergised, the common port 
will always be connected to one of the other ports and there will always be a flow path through 
the valve.

Three-way valves have many different orientations and left/right, top/bottom configurations, these 
can be seen in Appendix A of the SMDS, available here:

     https://psop.uk/pal-smds-fc11011-p

In the above symbols, the lines in the actuator circle at the top of the symbol show, 
schematically, the flow path when the valve is deenergised, i.e. it shows which two ports are 
open when the valve is deenergised.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.1.1     Comparison with an isolating valve


From a software perspective, the thee-way valve and the isolating valve are very similar, both 
change state when an output signal is energised and both may be equipped with limit switches 
to positively identify the state of the valve.

Both the isolating valve and the three-way valve have operation timers that activate whenever 
the valve changes state and both generate faults in much the same way.

The main difference between a three-way valve and an isolating valve, is that the three-way 
valve does not have normally open and normally closed¹ types. Three-way valves are always 
open — the common port will always be connected to one of the other ports, hence the normally 
open/closed operation is simply determined by how the valve is physically connected to the 
pipework and how the deenergised state of the valve is orientated. Symbolically, each 
configuration of the valve is supported and an appropriate symbol is available for all 
orientations, see Appendix A of the SMDS, available here:

     https://psop.uk/pal-smds-fc11011-p

Where an isolating valve uses the terms OPEN and CLOSED &amp;c. the three-way valve uses the 
terms ENERGISED and DEENERGISED; the direct comparisons are as follows:


 ――――――――――――――――――――――――――――――――――――――――――
 ISOLATING VALVE TERMINOLOGY       THREE-WAY VALVE TERMINOLOGY
 ――――――――――――――――――――――――――――――――――――――――――
 Closed                    Deenergised
 Opening                   Energising
 Open                   Energised
 Closing                   Deenergising
 ――――――――――――――――――――――――――――――――――――――――――


――――――――――
¹         For an isolating valve, normally closed refers to a valve that is deenergised in the 
     closed state and will open when an energising signal is applied. A normally open 
     valve operates in the reverse arrangement, the valve is open in the deenergised 
     state and will only close when the energising signal is present. Normally open valves 
     are used in fail-safe applications where a power failure causes the valve to open by 
     default, usually to vent pressure or release some other motive force from the vessel 
     to which it is connected.
――――――――――


                     
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.1.2     Valve operating times


A three-way valve, will move from its deenergised state to its energised state when the operating 
signal is applied; this transition will occur in a specified time (the time taken will depend on the 
size and operating mechanism within the valve itself), this is referred to as the energising 
operation time.

Similarly, the transition from energised to deenergised will again occur in a specified time. This 
is referred to as the deenergising operation time. 

The energising and deenergising times can be different for a given valve. 

Collectively, the energising and deenergising times are referred to as the operating times 
(sometimes operation times) of the valve.

The maximum energising and deenergising times for a valve are generally given as part of the 
specification for the valve itself.

If a valve does not reach the required state within the specified maximum operating times, the 
valve is generally considered to be in a fault condition (either failed to energise or failed to 
deenergise depending on the action being undertaken).



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.1.3     Valve position feedback arrangements


Three-way valves can be equipped with limit switch signals that positively identify the current 
position of the valve. There are four combinations of limit switches:

   1.  No limit switches         There is no positive indication of the current state 
                     of the valve, it is assumed to be in the expected 
                     state.

   2.  Deenergised limit switch only     Positive indication is given for the deenergised 
                     state only. The valve is assumed to be in the 
                     energised state if the deenergised signal is 
                     inactive.


   3.  Energised limit switch only       Positive indication is given for the energised 
                     state only. The valve is assumed to be 
                     deenergised if the energised signal is inactive.


   4.  Energised and deenergised        Positive indication is given for both states. 
     limit switches            This allows the true state of the valve to be 
                     determined under all circumstances.


Note:    Positive indication of a valve state need not be determined by a limit switch (though this 
     is by far the most common arrangement), it could for example, be determined by some 
     process value: if a flow is detected after the energising of a valve, for example.

     In practice, limit switches are the preferred mechanism for the positive indication 
     of a given valve state.

Where a limit switch is absent, the valve is assumed to have reached the correct position when 
the relevant operation time has counted for an adjustable percentage of its maximum operating 
time.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.2     Module operation


FC11011 is used to control (operate) a three-way valve, the module also monitors the various 
configurations of valve position feedback signals to determine if the valve is in a fault condition.

The module will drive the valve to the requested state by energising or deenergising a digital 
signal (usually a digital output signal).

If the requested state of the valve requires the output to be energised, the output will remain 
energised until the requested state changes.

If the requested state signal changes (either from deenergised to energised, or from energised 
to deenergised), the module will start either an energising operation timer (request has changed 
from deenergised to energised) or a deenergising operation timer (request has changed from 
energised to deenergised); these timers can have different values.

The valve will be expected to reach the requested state before the relevant operation timer 
expires; if it does not, the valve will enter a fault state and an appropriate alarm will be generated 
when the operation timer expires.

Once the valve has reached its requested state, the operation time will reset and the module 
will continue to monitor the state of the valve. 

If the request signal changes whilst the valve is in the process of changing state (e.g. the valve is 
requested to change from deenergised to energised and whilst the energising operation timer is 
running, the request is changed back to deenergised), the running operation timer will be reset 
and the operation timer for the second request will start from its specified value. I.e. no 
allowance is made for how far the valve may have moved following the first request change.

If the valve is stable, in a given state (i.e. is not in the process of changing state) and the valve 
position signals no longer match the required state (e.g. the valve had correctly energised, but 
at some time after this, the energised position feedback is lost), the valve will instantly generate 
an alarm condition.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.3     Safety and interlocks


The module, optionally, accommodates a single safety signal (emergency stop), and the 
standard arrangement of up to three interlock signals (interlock, permissive and trip) as follows:



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.3.1     Safety (emergency stop) signal


Safety or emergency stop signals are hardwired signals that remove power from a device forcing 
it to a safe state. Such signals act independently of the software (the pressing of an emergency 
stop button will physically remove power from the affected devices).

The emergency stop signal passed to the module is used to allow the state of the valve to be 
correctly interpreted within the software under emergency stop conditions.

When the emergency stop signal is removed, the valve will resume the requested state (with 
the appropriate operation timer).

The presence of an emergency stop signal is indicated via the block icon status signals 
generated by the module (see §§ 2.7 and 4).

Emergency stop signals cannot be bypassed under any circumstances (cf. interlock signals, 
below).



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.3.2     Interlock signals


There are three types of interlock signal:

   1.  Interlock
     A simple interlock that is active whenever a set of conditions is true; if active, it will 
     force the devices to a specified state.


   2.  Permissive
     Designates a specified “permitted” state for the device. A permissive interlock takes 
     no action if the device is in the non-permitted state, but once the device changes to 
     the permitted state, it will be prevented from changing back to the non-permitted state 
     (e.g. if the permitted state was deenergised and the valve was currently energised 
     when the permissive signal activated, it would not force the valve to deenergised, 
     but once it was deenergised, it would prevent it from re-energising).

   3.  Trip
     A latching interlock, it activates whenever a set of events are true (like an interlock), 
     but will not deactivate until the triggering conditions are removed and a reset signal 
     has been given (effectively a latching interlock); if active, it will force the device to a 
     specified state.

Note:    The trip reset signal is handled by the trip logic, the valve module will simply respond 
     to the presence or absence of a trip signal.

Each type of interlock has its own individual signal passed to the module (three signals in total).

Interlock signals can be optionally bypassed (effectively disabled) under specific, manually 
selected operations.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.3.3     Priority of safety and interlock signals


The presence of any interlock stop signal is indicated via the block icon status signals generated 
by the module (see § 4). The priority order of the various types of interlock (if more than one is 
active at the same time) is as follows:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL TYPE        PRIORITY        CAN BE BYPASSED
 ――――――――――――――――――――――――――――――――――――――――――
 Emergency Stop         High               NO
 Trip             ↑              YES
 Interlock             ↑              YES
 Permissive          Low               YES
 ――――――――――――――――――――――――――――――――――――――――――
 High priority signal take precedence over lower priority signals.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.4     Alarms and warnings


The module can generate up to five distinct alarms:


   1.  FAILED TO ENERGISE
     Indicates that the valve did not energise when requested to do so. The alarm is 
     generated when the energising operation timer expires without the corresponding 
     position feedback activating.


   2.  FAILED TO DEENERGISE
     Indicates that the valve did not deenergise when requested to do so. The alarm is 
     generated when the deenergising operation timer expires without the corresponding 
     position feedback activating.


   3.  FAILED WHILE ENERGISED
     Indicates that the valve energised correctly, but then at some later point, the position 
     feedback signals, indicating the energised state of the valve, were lost.

     
   4.  FAILED WHILE DEENERGISED
     Indicates that the valve deenergised correctly, but then at some later point, the position 
     feedback signals, indicating the deenergised state of the valve, were lost


   5.  EXTERNAL FAULT
     External fault is a separate (and optional) hardwired signal from the valve that 
     indicates the valve itself has detected a problem (e.g. a trip signal from a 
     motorised valve)

The module does not generate any warnings.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.4.1     Alarm — Failed to energise/deenergise


Failed to energised and failed to deenergised alarms are generated if the valve is required to 
change state and fails to do so within the time set by the relevant operation timer.

For example, if the valve were in a deenergised state and was requested to energised, the failed 
to energised alarm would be generated if the valve had not received positive indication that the 
valve was correctly energised (from the valve limit switches) by the time the energising 
operation timer expired.

If the valve is not equipped with any limit switches, then there are no circumstances under 
which the failed to energised and failed to deenergised alarms can be generated (the valve is 
always assumed to operate correctly and be in the required position).



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.4.2     Alarm — Failed while energised/deenergised

Failed while  energised and failed while deenergised are generated if the valve is in a steady 
state (not in the process of changing from energised to deenergised or vice versa) and the 
positive indication of the valve position changes to indicate the steady state position has 
changed.

An example would be for valve with both energised and deenergised limit switches, to be in the 
energised state, where the energised limit is active and deenergised limit is inactive (positively 
indicating the valve is energised). If the power to the valve failed (a blown fuse or broken wire, 
for example), the valve would deenergise and return to the deenergised state and this would be 
reflected in the state of the limit switches. The module, knowing nothing of the power failure, 
would expect the valve to still be energised and would instantly generate a failed while energised 
alarm.

If the valve is not equipped with any limit switches, then there are no circumstances under which 
the failed while energised and failed while deenergised alarms can be generated (the valve is 
always assumed to operate correctly and be in the required position).




▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.4.3     Alarm — External fault


The external fault alarm is activated whenever the external fault signal provided to the module 
is active. The external fault signal is an optional signal that indicates that the valve itself is 
experiencing a problem. The signal is more commonly associated with motorised valves where 
thermal overload signals are used to indicate that the valve motor has experienced a fault, 
it could also be used to indicate the loss of pneumatic pressure for pneumatic solenoid valves.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.4.4     Resetting alarm conditions


The four alarms derived from valve position feedback signals:

   1.  FAILED TO ENERGISE

   2.  FAILED TO DEENERGISE

   3.  FAILED WHILE ENERGISED

   4.  FAILED WHILE DEENERGISED

Are latching alarms, if the alarm conditions occur, the valve will be placed in a fault condition 
(see § 2.5) and will no longer be operable, the valve will remain in a deenergised condition until 
the fault is corrected.

The alarm conditions are only reset when the module receives a RESET command (usually 
from the operator).

The fifth alarm:

   5.  EXTERNAL FAULT

Is a non-latching alarm that is reset automatically whenever the external fault signal is 
deactivated. It should be noted however, that the cause of the external fault (say a thermal 
overload) may itself, require some form of manual or physical reset, before the fault condition 
is removed.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.5     Fault conditions


The valve is in a fault condition if any alarm conditions is active:

   1.  FAILED TO ENERGISE

   2.  FAILED TO DEENERGISE

   3.  FAILED WHILE ENERGISED

   4.  FAILED WHILE DEENERGISED

   5.  EXTERNAL FAULT

A valve cannot operate if any fault condition is active and it will return to its deenergised state.

A valve that is in a fault state will ignore any request that would move it to an energised state, 
irrespective of the source of the command: automatic operation, manual operation or even an 
interlock condition.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.6     Operating modes


The module supports the following optional modes of operation:

   •   Automatic/manual mode (allows the operator to take manual control of the valve 
     and energise or deenergise it irrespective of the control system requirements)

   •   Interlock bypass mode (allows the operator to override permissive, interlock and 
     trip signals

   •   Simulation mode (allows the operator to override the current instrument position 
     feedback signals with simulated values)

   •   Remote/local/all selection (allows control of the instrument to be restricted to a 
     specific SCADA/HMI device) 

   •   Faceplate disabled (informs the supervisory system not to display any faceplates 
     for the device, preventing graphical operator selections)



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.6.1     Automatic and manual control modes


By default, the module will be in automatic mode; this means that any energise or deenergise 
instruction received by the module from the control software (continuous or sequential control) 
will cause the valve to adopt the requested state (if the valve is not in fault and is free of 
interlock and safety conditions).

If the module is switched to manual mode, the automatic control signals will be ignored and the 
module will adopt the state required by the manual request signals set by the operator 
(again, the valve must not be in fault and must be free of interlock and safety conditions).

Selecting automatic or manual mode is an operator action and can be implemented at any time. 
Changing from automatic mode to manual mode is a bumpless operation, in which the initial 
manual state of the valve is set to match the current automatic state. For example, if a valve 
were energised under automatic control, switching the valve to manual would cause the initial 
manual state to be set to energised (matching the automatic state), ensuring that the valve does 
not initially change state when changing to manual mode.

Once manual mode is established, the operator is free to energise and deenergise the valve 
as required.

There is no bumpless transfer back to automatic mode, the valve will simply adopt the state 
required by the control software.

Interlocks and safety signals operate in exactly the same way for a valve in manual mode 
as they do for a valve in automatic mode and will take priority over any command issued in either 
automatic or manual mode.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.6.2     Interlock bypass mode


Interlock bypass mode allows the three interlock types (trip, interlock and permissive) to be 
overridden (bypassed) by the operator.

If bypass mode is activated, any interlock signal will be ignored by the module.

Bypass mode is an entirely manual operation that can only be initiated by an operator, usually 
via a supervisory system (SCADA or HMI).



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.6.3     Simulation mode


The module can be switched to a simulation mode, under which any positive position feedback 
signals from valve limit switches are replaced by simulated signals selected by the operator. 
Simulation mode can be used during testing and can also be applied in a process environment 
if a fault condition is detected within the valve.

The operator can select any one of the following possible simulation arrangements (only one 
can be active at any given time):


   •   Follow demand    The simulation will generate energised and deenergised 
                feedback signals that match the requested state of the valve

   •   Energised        The simulation will generate signals to give a permanently 
                energised state for the valve, irrespective of any valve state 
                request (allows failed to energised conditions to be 
                simulated)

   •   Deenergised         The simulation will generate signals to give a permanently 
                deenergised state for the valve, irrespective of any valve 
                state request (allows failed to deenergised conditions to be 
                simulated)

   •   No limits       No position feedback signals will be simulated

Simulation mode is a manual operation that can only be initiated by an operator.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
2.6.4     Remote/local/all mode

Remote and local operating modes refer to the device that has control of the module; where 
a plant has more than one SCADA/HMI, say a SCADA in a remote control room and a field 
mounted HMI local to the device, it is possible to restrict the operator control of the module to 
one, or the other, or both supervisor systems as follows

   •   Remote Only the remote system in the control room can control the device

   •   Local     A local system has taken control of the device and the remote system can 
           no longer issue commands to it

   •    All    Any system can control the device

The default arrangement if for all systems to have access to the device.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
2.6.5     Faceplate disabled mode

Prevents the supervisory system from displaying the faceplate from which the above options are 
selected. If the faceplate is disabled, the operator will not be able to select or change any of the 
various operating modes.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
2.7      Supervisory system interface

See the online documentation for this block — select the block in the project tree and press:
     SHIFT + F1 or follow the link: https://psop.uk/pal-smds-fc11011-p 

The supervisory system interface is available in sections 2.5 and 4 of the online SMDS 
document.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━


</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="6" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="7" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Sections 1 to 2</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="8" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="9" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
3.     DETAILED BLOCK DESCRIPTION


This module, FC11011_StdDevValve3Way uses user data types to provide the primary interface 
to the module, it also uses direct digital signals to provide an interface for the position feedback 
signals and for the fault, safety and interlock signals. It also has a single output signal used to 
operate the valve. 

These are the formal module parameters: 

 ――――――――――――――――――――――――――――――――――――――――――
 PARAM         FUNCTION                    TYPE      IN-OUT 
 ――――――――――――――――――――――――――――――――――――――――――
 SYS_SIGNALS      Common system signals              UT21000    In
          logic and timing signals for parametric access

 FBK_ENG        Optional energised state positive feedback     Bool      In
          (1 = energised, 0 = not energised) If not 
          required, set permanently to _False

 FBK_DENG     Optional deenergised state positive feedback   Bool      In
          (1 = deenergised, 0 = not deenergised) If not  
          required, set permanently to _False

 EXT_FAULT     Optional external fault signal for the device     Bool      In
          (1 = fault, 0 = healthy). If not required, set 
          permanently to _False

 E_STOP        Optional emergency stop (safety) signal        Bool      In
          (1 = emergency stop active, 0 = healthy) If not 
          required, set permanently to _False

 TRIP        Optional trip signal                  Bool      In
          (1 = trip condition active, 0 = healthy) If not 
          required, set permanently to _False

 INTERLOCK     Optional interlock signal               Bool      In
          (1 = interlock condition active, 0 = healthy) If 
          not required, set permanently to _False

 PERMISSIVE      Optional permissive signal             Bool      In
          (1 = permissive condition active, 0 = healthy) 
          If not required, set permanently to _False

 STATIC_DATA     Data structure that holds the configuration data     UT11011    In
          for the device (limit switch and interlock 
          configuration &amp;c.)

 DYNAMIC_DATA      Data structure that holds the live data for the       UT31011    InOut
          device (its mode, status and messages and 
          any other dynamic information required by the 
          module)

 OPERATE        Output to drive the valve to a particular state    Bool      Out
          (1 = energised state, 0 = deenergised state)
 ――――――――――――――――――――――――――――――――――――――――――

FBK_ENG, FBK_DENG and EXT_FAULT parameters are input signals provided directly from the 
device itself (via digital input cards). The OPERATE signal is an output signal (via a digital output 
card) that causes the valve to energised and deenergised.

The E-STOP parameter is the interface to any safety signal that might apply to the valve; 
similarly, the PERMISSIVE, INTERLOCK and TRIP parameters are the links to any such interlock 
signals that may be applied to the device.

The STATIC_DATA and DYNAMIC_DATA parameters are UDTs that hold (respectively) the 
configuration information and the live data for the device.

 ――――――――――――――――――――――――――――――――――――――――――
 PARAM         ASSOCIATED UDT          ASSOCIATED DATA BLOCK
 ――――――――――――――――――――――――――――――――――――――――――
 STATIC_DATA     UT11011_St_DevValve3Way        DB11011_St_DevValve3Way
 DYNAMIC_DATA   UT31011_Dy_DevValve3Way        DB31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――


Section 6 contains a full list of all variables within these UDTs.

This arrangement conforms with the PAL philosophy where IO card connections, safety 
signals and interlocks have unique formal parameters; all remaining signals are passed as 
variables within UDTs, see the Software Design Specification [Ref. 008].



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.1      Typical wiring arrangement


The typical wiring arrangements for a valve with all signals is as follows:

    24VDC  
     ─┬─                                ┌───────┐
      │                                 │       │  
      ├────┬────┐                 │      ─┴─
      │       │       │                 │        GND
      │       │       │             ┌┻┐ ▁▁
   ▁│ ○   ▁│○   ▁│○             │ │▁＼／ 
   ▔│ ○   ▔│○   ▔│○             │ │ ／＼   
    FAULT│     DENG│   ENG  │             └┬┘ ▔▔ 
      │   LIMIT │   LIMIT │                 │     
      │       │       │              │  
    ┌─┻─┐┌─┻─┐┌─┻─┐          ┌─┻─┐
    │  I1.0  ││  I1.1  ││  I1.2  │DI CARD        │  Q1.0 │DO CARD
    └─┬─┘└─┬─┘└─┬─┘          └─┬─┘
      │       │       │ ┌────────    │
      │       │       │ │ FC11011          │
      │       │       │ ├──────────┤ │
      │       │       │ │          │ │
      │       │       │ │           OPERATE ├─┘
      │       │       │ │          │
      │       │       └─┤ FBK_ENG          │
      │       │         │          │
      │       └──────┤ FBK_DENG           │
      │                 │          │
      └───────────┤ EXT_FAULT        │
                        │           
                        │



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.2      Normal operation


Normal operation can generally be considered the operation of the valve under automatic or 
manual control (see § 3.6.1 for a full explanation of how automatic and manual modes are 
selected). And the mechanisms used to determine the state of the valve.


▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.1     Energising and deenergising the valve


Under automatic mode, the valve is controlled by separate software within the Controller (this 
is usually derived from either continuous control logic or sequential control logic and 
implemented by the command handling application module).

The result of this software will be to either energised the valve or deenergised the valve.

Under manual mode, the valve is controlled directly by the operator via some form of 
supervisory system (SCADA or HMI). Again, the result of the manual operator action will be to 
either energised or deenergised the valve.

There are two signals that, under normal operation, can cause the valve to move to a particular 
state, one for automatic mode and one for manual mode, both are passed to the module as 
part of the DYNAMIC_DATA parameter (UT31011_Dy_DevValve3Way):


 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 ctrl_Aut_EngDeng    Causes the valve to energise and         Bool  1 = energise valve
           deenergise if automatic mode is        0 = deenergise valve
           active (mode_AutMan = 1). If auto
           mode is not active, signal is 
           ignored

 ctrl_Man_EngDeng   Causes the valve to energise and         Bool  1 = energise valve
           deenergise if manual mode is             0 = deenergise valve
           active (mode_AutMan = 0). If man
           mode is not active, signal is 
           ignored
 ――――――――――――――――――――――――――――――――――――――――――

The operating mode (either automatic or manual) is specified within the DYNAMIC_DATA 
parameter UDT (UT31011_Dy_DevValve3Way) mode_AutMan as follows:


 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 Mode_AutMan     Identifies the operating mode of     Bool  1 = automatic mode
           the valve.                   0 = manual mode
 ――――――――――――――――――――――――――――――――――――――――――

It is possible to configure the module such that manual mode is permanently disabled; this uses 
the following STATIC_DATA parameter:

 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_MAN_DIS     Prevents manual mode being       Bool  1 = no manual mode
           activated under all circumstances            0 = manual permitted
           device is in auto, Mode_AutMan is 
           set permanently to 1
 ――――――――――――――――――――――――――――――――――――――――――

If manual mode is disabled (configuration signal CONFIG_MAN_DIS is set to 1), then manual 
mode cannot be turned on under any circumstances, the option will be greyed out on the 
supervisory system faceplate and the module will constantly set the mode_AutMan signal to 1.

By default the device will be in automatic mode.

The state of the OPERATE parameter is determined by either the ctrl_Aut_EngDeng or 
ctrl_Man_EngDeng, depending on whether automatic mode or manual mode is active. 

The various states of the valve for both automatic and manual operations are given 
in the following table:


 ――――――――――――――――――――――――――――――――――――――――――
 MODE:   AUTOMATIC MODE (mode_AutMan = 1)
 ctrl_Aut_EngDeng ctrl_Man_EngDeng      OPERATE     VALVE STATE
 ――――――――――――――――――――――――――――――――――――――――――
     0         N/A          0       Deenergised
     1         N/A          1       Energised
 ――――――――――――――――――――――――――――――――――――――――――
 MODE:   MANUAL MODE (mode_AutMan = 0)
 ctrl_Aut_EngDeng ctrl_Man_EngDeng      OPERATE     VALVE STATE
 ――――――――――――――――――――――――――――――――――――――――――
      N/A          0           0       Deenergised
      N/A          1           1       Energised
 ――――――――――――――――――――――――――――――――――――――――――


If the valve is in a fault state (see § 3.4), the OPERATE parameter will be set to 0 (deenergised), 
irrespective of any other signals.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.2     Operation timers


The module has an operation timer that is used for both energising and deenergising the valve.

The timer is loaded with either the energising operation time or deenergising operation time 
whenever the valve is requested to change state. The timer counts down from the loaded value 
to zero (the valve can have different times for energising and deenergising).

The specific operating times are given within the STATIC_DATA parameter 
UDT (UT11011_St_DevValve3Way) as follows:


 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 TIME_ENG_MAX    The maximum time required for the     Real     Time in seconds
           valve to travel from a deenergised 
           state to an energised state

 TIME_DENG_MAX    The maximum time required for the     Real     Time in seconds
           valve to travel from an energised 
           state to a deenergised state
 ――――――――――――――――――――――――――――――――――――――――――

If the timer is running, the elapsed (counting down) time is stored within the DYNAMIC_DATA 
parameter UDT (UT31011_Dy_DevValve3Way) as follows:


 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 actual_Operating_Timer    The actual elapsed operation time       Real     Time in seconds
 ――――――――――――――――――――――――――――――――――――――――――

There is a single operating timer for both energising and deenergising (energising and 
deenergising are mutually exclusive operations, hence only one timer is needed. The timer is 
preloaded with either the energising time preset or the deenergising time preset prior to the 
timer starting).

The preset signals TIME_ENG_MAX and TIME_DENG_MAX are the maximum possible times it can 
take for the valve to reach the expected position. This should be set to between 110% and 
120% of the normal energising and deenergising times specified for the valve. For example, if a 
valve has a normal energising time of 5 seconds and a normal deenergising time of 3 seconds, 
sensible values for TIME_ENG_MAX and TIME_DENG_MAX would be between 5.5-6.0 s and 
3.3-4.0 s respectively.

A valve will enter a fault state (see § 3.4) if the operation timer counts down to a value of zero 
without confirmation that the valve has reached the required state. Such confirmation is 
provided by positive feedback from the valve limit switches (or other indicating devices) or 
by simulated signal within the module itself (see § 3.2.3).

The operation timer always counts down from a preset value to zero, this is in accordance 
with the general requirements and practices of the PAL software.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.3     Position feedback signals


The module can accommodate either none, one or two positive position indication signals:

   1.  No limit switches         There is no positive indication of the current state 
                     of the valve, it is assumed to be in the expected 
                     state.

   2.  Deenergised limit switch only     Positive indication is given for the deenergised 
                     state only. The valve is assumed to be in the 
                     energised state if the deenergised signal is 
                     inactive.

   3.  Energised limit switch only       Positive indication is given for the energised 
                     state only. The valve is assumed to be 
                     deenergised if the energised signal is inactive.


   4.  Energised and deenergised        Positive indication is given for both states. 
     limit switches            This allows the true state of the valve to be 
                     determined under all circumstances.

There are two configuration signals that determine the position feedback arrangements, these 
are stored within the STATIC_DATA parameter UDT as follows:


 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION              TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_FBK_ENG_EN   Indicates that positive feedback for    Bool  1 = eng feedback
             the energised state is present        0 = no feedback

 CONFIG_FBK_DENG_EN   Indicates that positive feedback for    Bool  1 = deng feedback
             the deenergised state is present       0 = no feedback
 ――――――――――――――――――――――――――――――――――――――――――

If the CONFIG_FBK_ENG_EN signal is activated (set to 1), the module will use the state of the 
signal connected to the FBK_ENG parameter to determine the energised position of the valve. 

If the CONFIG_FBK_ENG_EN signal is deactivated (set to 0), the module will derive the 
energised position of the valve such that it matches the requested state of the valve.

Similarly, if the CONFIG_FBK_DENG_EN signal is activated (set to 1), the module will use the 
state of the signal connected to the FBK_DENG parameter to determine the deenergised 
position of the valve. 

If the CONFIG_FBK_DENG_EN signal is deactivated (set to 0), the module will derive the 
deenergised position of the valve such that it matches the requested state of the valve.

Where a CONFIG_FBK_ENG/DENG_EN signal is activated (set to 1), a true state on the associated 
parameter FBK_ENG/DEENERGISED indicates that the valve is in that position, a false state 
indicates that the valve is not in that position as follows:


 ENERGISED SIGNALS   ――――――――――――――――――――――――――――――――
 CONFIG_FBK_ENG_EN       FBK_ENG     MEANING
 ――――――――――――――――――――――――――――――――――――――――――
      1            0       Not in the energised position

      1            1       Confirmed in the energised position

      0          N/A     Internally derived energised signal matches
                       requested valve state, FBK_ENG is ignored
 ――――――――――――――――――――――――――――――――――――――――――
 DEENERGISED SIGNALS  ―――――――――――――――――――――――――――――――
 CONFIG_FBK_DENG_EN       FBK_DENG     MEANING
 ――――――――――――――――――――――――――――――――――――――――――
      1            0       Not in the deenergised position

      1            1       Confirmed in the deenergised position

      0          N/A     Internally derived deenergised signal matches
                       requested valve state, FBK_DENG is ignored
 ――――――――――――――――――――――――――――――――――――――――――   




▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Position status signals


The true position of the valve is given as status signals:

 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL          FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 status_Denergised    Valve is confirmed deenergised      Bool     1 = deenergised
                                  0 = not deenergised

 status_Energising     Valve is energising           Bool     1 = energising
                                  0 = not energising

 status_Energised      Valve is confirmed energised        Bool     1 = energised
                                  0 = not energised

 status_Deenergising   Valve is deenergising         Bool     1 = deenergising
                                  0 = not deenergising

 status_Operating      Valve is changing state         Bool     1 = changing state
            (either energising                 0 = fixed state
             or deenergising)

 status_Fault       Valve is in a fault condition         Bool     1 = fault
                                  0 = healthy
 ――――――――――――――――――――――――――――――――――――――――――   


▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Understanding derived position signals


Where ether the CONFIG_FBK_ENG_EN or CONFIG_FBK_DENG_EN signal is deactivated (set to 0), 
the associated position feedback is internally determined by the module according to the actual 
state of the valve (determined by the OPERATE parameter)..

These internally derived signals are themselves configurable and can be set such that the 
position feedback signal occurs after a particular percentage of the associated operation timer 
has expired.

For the derived FBK_ENG signal, the configurable percentage signal is TIME_DER_ENG stored 
within the STATIC_DATA parameter. Similarly, for the derived FBK_DENG signal, the configurable 
percentage signal is TIME_DER_DENG, again, stored within the STATIC_DATA parameter.

The operation of these parameters can be seen below:

    ①                ③
│   ┌────────────────┐
│   │                │
│   │                │      ctrl_Aut_EngDeng
│   │                │
┼───┘┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈└───────────────


                      TIME_ENG_MAX              TIME_DENG_MAX
     ←         →       ←                →
│   ┌──────┐┄┄┐      ┌───────┐┄┄┐
│   │      │  ┆      │       │  ┆
│   │←    Ａ  →│  ┆      │←      Ｂ    →│  ┆actual_Operating_Timer
│   │      │  ┆      │       │  ┆
┼───┘┈┈┈┈┈┈└──┴──────┘┈┈┈┈┈┈┈└──┴────
    ╎      ②         ╎       ④
    ╎      ╎         ╎       ╎
    ↓      ╎         ╎       ↓
│───┐      ╎         ╎       ┌───────
│   │      ╎         ╎       │
│   │      ╎         ╎       │                FBK_DENG (derived)
│   │      ╎         ╎       │
┼┈┈┈└────────────────────────┘┈┈┈┈┈┈┈
    Ｃ      ╎         ╎       Ｆ
           ╎         ╎
           ╎         ╎
           ↓         ↓
│          ┌─────────┐
│          │         │
│          │         │               FBK_ENG (derived)
│          │         │
┼──────────┘┈┈┈┈┈┈┈┈┈└────────────────
           Ｄ         Ｅ

  Ａ TIME_DER_ENG  (90%)
  Ｂ TIME_DER_DENG  (80%)
  Ｃ Deenergised signal deactivates instantly when the valve is asked to energise
  Ｄ Energised signal activates when actual_Operating_Timer reaches TIME_DER_ENG 
    as a percentage of TIME_ENG_MAX
  Ｅ Energise signal deactivates instantly when the valve is asked to deenergise
  Ｆ Deenergised signal activates when actual_Operating_Timer reaches TIME_DER_DENG 
    as a percentage of TIME_DENG_MAX

The figure above assumes valve with no position feedback signals (both CONFIG_FBK_ENG_EN 
and CONFIG_FBK_DENG_EN are set to 0) operating in automatic mode. It also assumes that the 
valve is free to operate without restriction (there are no active interlock or safety signals).

The valve is initially deenergised with the derived FBK_DENG signal active (1) and the derived 
FBK_ENG signal deactivated (0). At some point 1, the module receives a request to energised 
the valve.

At this point two things happen, firstly the operation timer starts, with a countdown from the value 
TIME_ENG_MAX, which in this case is 3 seconds. Secondly, the derived FBK_DENG signal is 
deenergised (indicating the valve is no longer deenergised).

The simulated energising time (TIME_DER_ENG) is set to 90%, this means that the derived 
FBK_ENG signal will activate when the actual_Operating_Timer value has counted down for 90% 
of the TIME_ENG_MAX value (i.e. when the timer has counted down to 0.30s or less). 

The exact formula used is:


┌──────────────────────────────────────┐
│Derived FBK_ENG = 1 when:                           │
│                              TIME_DER_ENG     │
│actual_Operating_Timer ≤ TIME_ENG_MAX ─ TIME_ENG_MAX ╳ --------------------------------     │
│                                  100      │
└──────────────────────────────────────┘

This can be seen at point ②, where the derived FBK_ENG signal activates. The valve now 
remains in the energised state (FBK_ENG = 1. FBK_DENG = 0) until there is a request to 
deenergise the valve, point ③.

Again, at point ③, the module receives a request to deenergise the valve.

▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
At this point two things happen, firstly the operation timer starts, with a countdown from the 
value TIME_DENG_MAX, which in this case is 4 seconds. Secondly, the derived FBK_ENG signal is 
deenergised (indicating the valve is no longer energised).

The simulated deenergising time (TIME_DER_DENG) is set to 80%, this means that the derived 
FBK_DENG signal will activate when the actual_Operating_Timer value has counted down for 
80% of the TIME_DENG_MAX value (i.e. when the timer has counted down to 0.80s or less).  

The exact formula used is:

┌────────────────────────────────────────┐
│Derived FBK_DENG = 1 when:                             │
│                               TIME_DER_DENG       │
│actual_Operating_Timer ≤ TIME_DENG_MAX ─ TIME_DENG_MAX ╳ ------------------------------------    │
│                                  100        │
└────────────────────────────────────────┘

This can be seen at point ④, where the derived FBK_DENG signal activates. The valve now 
remains in the deenergised state (FBK_ENG = 0. FBK_DENG = 1) until there is a  
subsequent request to reenergise the valve.

If only one position feedback is derived (the other being an actual signal), then the derived signal 
will be generated in exactly the same way as above, the non-derived signal will simply use the 
true status of the signal passed as a parameter to the module.

The simulated time signals are passed to the module within the STATIC_DATA parameter 
UDT (UT11011_St_DevValve3Way) as follows:

 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL        FUNCTION              TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 TIME_DER_DENG            Specifies the percentage of the     Real     Percentage
             TIME_DENG_MAX value that 
             must expire before the derived 
             FBK_DENG signal activates.


 TIME_DER_ENG            Specifies the percentage of the     Real     Percentage
             TIME_ENG_MAX value that 
             must expire before the derived 
             FBK_ENG signal activates.
 ――――――――――――――――――――――――――――――――――――――――――

Both configuration signals are restricted to the range 0.00-100.00, the default value is 90% for 
both energised and deenergised.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.4    Recording the last operation time


The module records the last complete operation time value, it records the actual time taken for 
the valve to reach the correct designated position.

For example if the valve received a request to energise, and it required 4.8 seconds for the 
position feedback to report the correct (energised) state, the module would record a value of 
4.8 seconds in the actual_Last_Op_time value (passed as part of the DYNAMIC_DATA parameter).

Similarly, if the valve were requested to deenergise, and required 6.2 seconds for the position 
feedback to report the correct (deenergised) state, the module would record a value of 
6.2 seconds in the actual_Last_Op_time value..

The actual_Last_Op_time value forms part of the DYNAMIC_DATA parameter UDT as follows:


 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL        FUNCTION              TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 actual_Last_Op_Time     Stores the actual time taken for     Real     Time in seconds
            the valve to achieve the correct 
            energised or deenergised state.

            Receives a value of -1.0 if the 
            valve did not achieve the correct 
            position in the specified 
            operation time
 ――――――――――――――――――――――――――――――――――――――――――

If the valve does not achieve the requested position (within either the TIME_ENG_MAX or 
TIME_DENG_MAX limits), a value of -1.0 is returned as the actual_Last_Op_time value, indicating 
a fault occurred.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.5    Detecting position faults


There are two types of position faults: dynamic and static. 

Dynamic faults occur when the valve is changing state (from energised to deenergised or 
deenergised to energised) and fails to achieve the requested position within the relevant 
operation time.

The dynamic faults are:

   •   Failed to energise

   •   Failed to deenergise

Static faults occur when a valve is stable in the requested state (either energised or 
deenergised) and is not in the process of moving between states, and some fault occurs such 
that the position feedback no longer matches the requested state (e.g. the valve was correctly 
in the energised state, and then at some point, the energised feedback signal was lost without 
any change being made to the state of the valve by the module. Such a fault could be a power 
failure at the valve).

The static faults are:

   •   Failed while energised

   •   Failed while deenergised

If the valve is not equipped with any limit switches (both CONFIG_FBK_ENG_EN and 
CONFIG_FBK_DENG_EN are set to 0), then there are no circumstances under which any position 
fault can be generated (the valve is always assumed to operate correctly and be in the 
required position). 

The following table indicates the conditions under which the various alarms can be generated 
for the various position feedback combinations:

 ――――――――――――――――――――――――――――――――――――――――――
                  FAILED TO ENERGISE         FAILED TO DEENERGISE
       LIMIT SWITCH      Energising operation timer     Deenergising operation timer 
     ARRANGEMENT        expired and:                 expired and:
 ――――――――――――――――――――――――――――――――――――――――――
       No feedback
     CONFIG_FBK_ENG_EN = 0     Not applicable         Not applicable
   CONFIG_FBK_DENG_EN = 0

     Energised feedback only
     CONFIG_FBK_ENG_EN = 1   Energised feedback      Energised feedback
   CONFIG_FBK_DENG_EN = 0       is INACTIVE            is ACTIVE

  Deenergised feedback only
     CONFIG_FBK_ENG_EN = 0    Deenergised feedback       Deenergised feedback
   CONFIG_FBK_DENG_EN = 1         is ACTIVE             is INACTIVE

     Both feedback     Deenergised feedback ACTIVE  Deenergised feedback INACTIVE
     CONFIG_FBK_ENG_EN = 1         OR                   OR
   CONFIG_FBK_DENG_EN = 1   Energised feedback INACTIVE  Energised feedback is ACTIVE
 ――――――――――――――――――――――――――――――――――――――――――

 ――――――――――――――――――――――――――――――――――――――――――
                FAILED WHILE ENERGISED     FAILED WHILE ENERGISED
       LIMIT SWITCH      Energising operation timer     Deenergising operation timer 
     ARRANGEMENT        not running and:        not running and:
 ――――――――――――――――――――――――――――――――――――――――――
       No feedback
     CONFIG_FBK_ENG_EN = 0     Not applicable         Not applicable
   CONFIG_FBK_DENG_EN = 0

     Energised feedback only
     CONFIG_FBK_ENG_EN = 1   Energised feedback      Energised feedback
   CONFIG_FBK_DENG_EN = 0       is INACTIVE            is ACTIVE

  Deenergised feedback only
     CONFIG_FBK_ENG_EN = 0    Deenergised feedback       Deenergised feedback
   CONFIG_FBK_DENG_EN = 1         is ACTIVE             is INACTIVE

     Both feedback     Deenergised feedback ACTIVE  Deenergised feedback INACTIVE
     CONFIG_FBK_ENG_EN = 1         OR                   OR
   CONFIG_FBK_DENG_EN = 1   Energised feedback INACTIVE  Energised feedback is ACTIVE
 ――――――――――――――――――――――――――――――――――――――――――

The OR in the alarm conditions is a logical or, it covers the conditions in which both or neither 
limit switches are active; consider the failed to energised alarm, if both limits were active, the 
alarm would be generated because the deenergised limit switch is active (irrespective of the 
state of the energised limit). Similarly, if neither switch were active, the alarm would be 
generated because the energised limit is inactive (irrespective of the state of the deenergised 
limit).

All alarms are reported as message signals, these form part of the DYNAMIC_DATA parameter 
UDT as follows:

 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL          FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 msg_FailToEnergise       Valve failed to energise in the     Bool     1 = alarm active
              specified energising time             0 = no alarm

 msg_FailToDeenergise     Valve failed to deenergise in the   Bool     1 = alarm active
              specified deenergising time            0 = no alarm

 msg_FailWhileEnergised     Valve suffered position failure     Bool     1 = alarm active
              while in a static ENERGISED state         0 = no alarm

 msg_FailWhileDeenergised   Valve suffered position failure     Bool     1 = alarm active
              while in a static DEENERGISED state       0 = no alarm
 ――――――――――――――――――――――――――――――――――――――――――</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="B" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Section 3 to 3.2</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="D" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="E" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.3     Fault handling


There are five fault conditions, four are derived from position faults and one from an external 
fault signal:

 ――――――――――――――――――――――――――――――――――――――――――
 FAULT           DESCRIPTION                  LATCHING
 ―――――――――――――――――――――――――――――――――――――――――― 
 Failed to energise       Valve failed to reach the energise state in       YES
              the specified energising operation time

 Failed to deenergise      Valve failed to deenergise state in            YES
              the specified deenergising operation time

 Failed while energised     Valve suffered position failure while          YES
              in a static ENERGISED state

 Failed while deenergised   Valve suffered positions failure while        YES
              in a static DEENERGISED state

 External fault          The EXT_FAULT signal is active           NO
  ――――――――――――――――――――――――――――――――――――――――――

If any of the above faults are active, the valve will be deenergised (the OPERATE parameter will be 
set to 0) and the module will ignore all commands either automatic or manual and will ignore all 
interlock conditions.


▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.3.1    Position faults


All position faults (derived from position feedback signals) are latching fault conditions that  
require the operator to issue a reset command, this is usually via a faceplate available at the 
supervisory system (SCADA/HMI), but could also be via a hardwired 
(pushbutton) signal. 

The reset signal is specified within the DYNAMIC_DATA parameter UDT as follows:        

 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 mode_Reset        A reset pulse                Bool     1 = reset latched faults
           (active for one Controller cycle)            0 = no action
 ――――――――――――――――――――――――――――――――――――――――――



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.3.2    Resetting position faults


If a position fault has occurred, and the fault is then reset, the appropriate energising or 
deenergising operation timer will be retriggered, allowing the valve time to achieve the required 
position.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.3.3    External fault


The external fault is an optional hardwired signal from the valve, it indicates that the device 
itself is registering that there is some problem. Such external fault signals are more commonly 
associated with motorised valves (equipped with thermal overload detectors), but may also be 
associated with pneumatic or hydraulic operated valves to indicate that the is a 
pneumatic/hydraulic system failure.

Such fault signals are generally indicated via a hardwired digital input to the Controller.

The external fault signal (if used) is passed to the module as the parameter: EXT_FAULT .

Any signal connected to the EXT_FAULT parameter must be active high (i.e. the signal must be 
set to 1 to indicate the fault condition is present). 

Where a failsafe response signal is used (active when set to 0) is used, it must be inverted at the 
EXT_FAULT parameter:

                        ┌─────────────
     ───────────────────┤ FC11011 
                        ├───────────────┤
          "V001_FAULT"                  │               │
       ────┤╱├──────────┤ EXT_FAULT             │
                        │               
                        │               

If the EXT_FAULT signal is not required, the input should be set to _False  (again, similar to the
E_STOP signal).

The EXT_FAULT signal is non-latching; it does not require a mode_Reset signal to clear the fault. 
The external fault will automatically reset whenever the EXT_FAULT signal is set to 0.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.4     Safety and interlocks


Safety and interlock signals are optional signals, passed as individual parameters to the module 
(in the same a manner as IO signals), all such signals are optional, a valve can have all, none or 
any combination of the signals.

Safety and interlock signals all act to override the normal operation of the valve (whether in 
automatic or manual mode) and force the valve to a particular state.

There is one safety signal and three interlock signals, each having its own formal module 
parameter:


 SAFETY SIGNAL
 ――――――――――――――――――――――――――――――――――――――――――
 PARAM        FUNCTION                   TYPE     DETAILS 
 ――――――――――――――――――――――――――――――――――――――――――
 E_STOP       Optional emergency stop (safety) signal       Bool     1 = E-stop active
         (1 = emergency stop active, 0 = healthy) If not         0 = healthy
         required, set permanently to _False
 ――――――――――――――――――――――――――――――――――――――――――


 INTERLOCK SIGNALS
 ――――――――――――――――――――――――――――――――――――――――――
 PARAM        FUNCTION                   TYPE     DETAILS  
 ――――――――――――――――――――――――――――――――――――――――――
 TRIP       Optional trip signal                 Bool     1 = Trip active
         (1 = trip condition active, 0 = healthy) If not            0 = healthy
         required, set permanently to _False

 INTERLOCK    Optional interlock signal              Bool     1 = Interlock active
         (1 = interlock condition active, 0 = healthy) If         0 = healthy
         not required, set permanently to _False

 PERMISSIVE     Optional permissive signal            Bool     1 = Permissive active
         (1 = permissive condition active, 0 = healthy)           0 = healthy
         If not required, set permanently to _False
 ――――――――――――――――――――――――――――――――――――――――――


Each safety and interlock signal has its own configuration signal that must be used to formally 
disable the parameter if the signal is not required, these are all within the STATIC_DATA parameter 
UDT (UT11011_St_DevValve3Way) as follows:


 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL        FUNCTION              TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_ESTOP_DIS    Disables the safety signal.        Bool     1 = E_STOP disabled
             If set to 1, any signal on the          0 = E_STOP enabled
             E_STOP parameter will be 
             ignored.

 CONFIG_TRIP_DIS      Disables the trip interlock signal.   Bool     1 = TRIP disabled
             If set to 1, any signal on the          0 = TRIP enabled
             TRIP parameter will be 
             ignored.

 CONFIG_ILOCK_DIS     Disables the interlock signal.    Bool     1 = INTERLOCK disabled
             If set to 1, any signal on the          0 = INTERLOCK enabled
             INTERLOCK parameter will be 
             ignored.

 CONFIG_PERM_DIS   Disables the permissive interlock  Bool     1 = PERMISSIVE disabled
             signal. If set to 1, any signal on the       0 = PERMISSIVE enabled
             TRIP parameter will be 
             ignored.
 ――――――――――――――――――――――――――――――――――――――――――

The disable signals are used to formally configure the valve, they allow any supervisory system to 
know the correct configuration of the valve and display information accordingly.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.4.1    Safety signal operation


Safety or emergency stop signals are hardwired signals that remove power from a device forcing 
it to a safe state. Such signals act independently of the software (the pressing of an emergency 
stop button will physically remove power from the affected devices).

The emergency stop signal is passed to the module as the parameter E_STOP; it informs the 
module that the safety signal has been activated and allows the module to adjust the state of 
the valve to follow the emergency stop conditions.

When the emergency stop signal is removed, the valve will resume the requested state (with the 
appropriate operation timer).

Under emergency stop conditions the valve is always deenergised (both physically by the 
hardware and within the software via the actions of this module), the OPERATE output is set to 
zero (OPERATE = 0).

The emergency stop signal is absolute and will override any other demand made of the valve. 
There is no mechanism for bypassing this form of safety signal.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Typical usage of the E_STOP parameter


Any safety signal connected to the E_STOP parameter must be active high (i.e. the signal must be 
set to 1 to activate the safety signal response). It is often the case, where hardwired emergency 
stop signals are used, that the emergency stop condition is activated by the absence of a signal 
(a failsafe response) rather than the application of a signal. The module can accommodate this 
sense of signal by inverting the E_STOP input:


                        ┌─────────────
     ───────────────────┤ FC11011 
                        ├───────────────┤
          "ZONEA_ESTOP"              │               │
       ────┤╱├──────────┤ E_STOP             │
                        │               
                        │               


If no safety signal is used, the parameter is set to the _False tag (note, also that the configuration 
signal CONFIG_ESTOP_DIS should also be set to 1):


                        ┌─────────────
     ───────────────────┤ FC11011 
                        ├───────────────┤
                        │               │
                     _False ──┤ E_STOP             │
                        │               
                        │    



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.4.2    Interlock signals


Interlock signals are a more flexible mechanism for overriding the requested position of the valve. 
Interlock signals can be both hardware driven (similar to a safety signal) or can be purely software 
derived (unlike a safety signal).

Software derived interlock signals can accommodate more complex and more flexible 
arrangements, it would for example, be possible to disable a software derived interlock if the 
process were undergoing some particular function, such as cleaning &amp;c.

There are three different types of interlock arrangements:

There are three types of interlock signal:

   1.  INTERLOCK
     A simple interlock that is active whenever a set of conditions is true, it will force any 
     associated devices to a given safe state.

   2.  PERMISSIVE
     Takes no action if a device is in a non-safe state, but once the device is in a safe 
     state will prevent a transition to a non-safe state (i.e. will not force a valve to 
     deenergise, but once it is deenergised will prevent it from re-energising).

   3.  TRIP
     A latching interlock, it activates whenever a set of events are true (like an interlock), 
     but will not deactivate until the triggering conditions are removed and a reset signal 
     has been given (effectively a latching interlock), it will force any associated devices 
     to a given safe state.

For any type of interlock, the specified interlock state (or permitted state) can be either 
energised or deenergised; unlike the safety signal, it does not have to be the deenergised state 
of the valve.

That said, the most common interlock state is the deenergised state of the valve; i.e. the failsafe 
position of the valve.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Typical usage of interlock signals


Each type of interlock is passed as its own parameter: TRIP, INTERLOCK or PERMISSIVE. Like the 
safety signal (E_STOP), each parameter is active high (i.e. the signal must be set to 1 to activate 
the associated interlock signal response). 

Again, it is often the case, where hardwired interlock signals are used, that the condition is 
activated by the absence of a signal (i.e. a failsafe response) rather than the application of a 
signal. The module can accommodate this sense of signal by inverting the relevant input:


                        ┌─────────────
     ───────────────────┤ FC11011 
                        ├───────────────┤
       "DB23102_Dy_Perm.V001"     │               │
       ────┤╱├──────────┤ PERMISSIVE           │
                        │               

If a particular interlock signal is not used, the parameter is set to the _False tag (note also: that 
the appropriate configuration signal should also be set to 1: CONFIG_TRIP_DIS, CONFIG_ILOCK_DIS 
or CONFIG_PERM_DIS).

                        ┌─────────────
     ───────────────────┤ FC11011 
                        ├───────────────┤
                        │               │
                     _False ──┤ TRIP                    │
                        │               
                        │  



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Configuring the interlock signals


The state adopted by the valve when a particular interlock is active (TRIP or INTERLOCK) or the 
permitted state of the valve (PERMISSIVE) are set individually for each type of interlock signal. 
These configuration signals are stored within the STATIC_DATA parameter UDT as follows:


 DATA STRUCTURE    UT11011_St_DevValve3Way

 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION              TYPE    DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_TRIP_ENG_DENG  The required state of a valve if     Bool     1 = will energise
              the TRIP signal is active            0 = will deenergise

 CONFIG_ILOCK_ENG_DENG The required state of a valve if     Bool     1 = will energise
              the INTERLOCK signal is active         0 = will deenergise

 CONFIG_PERM_ENG_DENG  The permitted state of a valve if     Bool     1 = may energise
              the PERMISSIVE signal is active           0 = may deenergise
 ――――――――――――――――――――――――――――――――――――――――――

For example, if CONFIG_ILOCK_ENG_DENG is set to 1, the valve will energise whenever the 
INTERLOCK signal is active (set to 1), this will override any automatic or manual requirement for 
the valve (but will not override a safety signal, see below). If CONFIG_ILOCK_ENG_DENG were set 
to 0, the valve would deenergise whenever the INTERLOCK signal was active.

The TRIP signal behaves in exactly the same way as the INTERLOCK signal, but uses 
CONFIG_TRIP_ENG_DENG to set the tripped state of the valve.

Although the TRIP signal requires a reset signal to disengage the interlock conditions, this is 
handled by the trip logic itself (usually handled by the trip application modules: FC23200) and 
not via this module; simply deactivating the TRIP signal removes the trip state from the valve 
and allows it to operate normally.

The PERMISSIVE signal operates in a different way, if CONFIG_PERM_ENG_DENG were set to 1 
(valve is permitted to be energised), and the valve was currently deenergised under automatic 
control when the PERMISSIVE signal became active, nothing would happen to the valve (it would 
remain deenergised), if the valve was then subsequently energised under automatic control, 
the PERMISSIVE signal would allow the valve to do so (the valve permitted state is energised). 
However, any attempt by the automatic system to then deenergised the valve would not be 
allowed by the PERMISSIVE signal.

Conversely, if CONFIG_PERM_ENG_DENG were set to 0 (valve is permitted to be deenergised), and 
the valve was currently energised under automatic control when the PERMISSIVE signal became 
active, nothing would happen to the valve (it would remain energised), if the valve was then 
subsequently deenergised under automatic control, the PERMISSIVE signal would allow the 
valve to do so (the valve permitted state is deenergised). However, any attempt by the 
automatic system to re-energised the valve would not be allowed by the PERMISSIVE signal.

Note:    Where multiple interlock signals are used, it is possible for the different interlocks 
     to apply different states to the valve, for example an active TRIP could deenergised 
     the valve and an active INTERLOCK energised it. Such conflicts are managed by the 
     different priorities applied to the interlock signals (see § 3.5). 



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Bypassing interlocks


Unlike safety signals, all interlock signals can be overridden (or bypassed). The bypass signal is a 
single signal that, if active, overrides and deactivates any TRIP, INTERLOCK or PERMISSIVE signal 
that may have been activated.

The bypass signal is specified within the DYNAMIC_DATA parameter UDT as follows:


 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 mode_BypassOn   Activates bypass mode, if active, any    Bool     1 = bypass mode on
           TRIP, INTERLOCK or PERMISSIVE signal          0 = bypass mode off
           will be ignored
 ――――――――――――――――――――――――――――――――――――――――――


Bypass mode is a manual operation, generally activated by the operator via a faceplate 
available at the supervisory system (SCADA/HMI), or via some hardwired signal, such as 
a key-switch.

It is possible to configure the module such that bypass mode is permanently disabled, this uses 
the following STATIC_DATA parameter:


 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL       FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_BYPASS_DIS    Prevents bypass mode being      Bool     1 = no bypass mode
            activated under all circumstances         0 = bypass permitted
 ――――――――――――――――――――――――――――――――――――――――――
  
If bypass mode is disabled (configuration signal CONFIG_BYPASS_DIS is set to 1), then the bypass 
mode cannot be turned on under any circumstances, the option will be greyed out on the 
supervisory system faceplate and the module will constantly reset the mode_BypassOn signal.

Note:    Safety (E_STOP) signals cannot be bypassed.  

     Similarly, if an interlock signal has a hardwired component (that will override any 
     software actions), it also must not be bypassed.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.5     Priority of operation


The valve is normally controlled by either the automatic system or by manual (operator) control; 
however, this operation can be overridden by the various safety and interlock conditions 
that can apply to the valve. Each of these operations is assigned a priority and if more than one 
is active at the same time, the one with the highest priority will take precedence.

The priorities for the various operations is as follows:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL TYPE       PRIORITY   ASSIGNED VALUE       CAN BE BYPASSED
 ――――――――――――――――――――――――――――――――――――――――――
 Emergency Stop        High        40                NO
 Trip            ↑           30             YES
 Interlock            ↑           20             YES
 Permissive          ↑           10             YES
 Auto/manual control    Low         00                NO
 ――――――――――――――――――――――――――――――――――――――――――
 High priority signal take precedence over lower priority signals.

Thus, if both the TRIP signal, the INTERLOCK signal and automatic control signal were all active at 
the same time, the module will respond only to the TRIP signal (with the higher priority) and will 
react accordingly. 
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="10" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="11" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Section 3.3 to 3.5</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="12" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="13" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="14" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.6     Operating modes


This module FC11011_StdDevValve3Way supports various operating modes:

   •   Automatic/manual mode

   •   Interlock bypass mode

   •   Simulation mode

   •   Remote/local mode

   •   Faceplate disabled mode

Examining these in turn:   



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.6.1    Automatic and manual modes


Under normal operation, the valve is in automatic mode and is controlled directly by the 
Controller software (usually, sequential or continuous logic); however, it is possible for the 
operator to take direct control of the valve by switching it to manual mode.

If manual mode is active, the valve will be energised and deenergised directly at the command 
of the operator and will ignore any automatic mode energise and deenergise requests.

If the valve is operating under automatic mode, the manual energise/deenergise request follows 
that of the automatic mode; this ensures that the valve remains in the same state when initially 
switched from automatic mode to manual mode, referred to as bumpless transfer. This approach 
minimises any disturbance to the process should the valve be inadvertently switched to manual 
mode.

The following data points are associated with automatic/manual mode:

 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_MAN_DIS     Prevents manual mode being       Bool  1 = no manual mode
           activated under all circumstances            0 = manual permitted
 ――――――――――――――――――――――――――――――――――――――――――

 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION               TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 Mode_AutMan     Identifies the operating mode of     Bool  1 = automatic mode
           the valve.                   0 = manual mode

 ctrl_Aut_EngDeng    Causes the valve to energise and         Bool  1 = energise valve
           deenergise if auto mode is active          0 = deenergise valve

 ctrl_Man_EngDeng   Causes the valve to energise and         Bool  1 = energise valve
           deenergise if man mode is active          0 = deenergise valve

 status_Aut      The valve is in automatic mode      Bool  1 = auto mode
                                 0 = no in auto

 status_Man       The valve is in manual mode     Bool  1 = manual mode
                                 0 = no in manual
 ――――――――――――――――――――――――――――――――――――――――――

Manual mode can only be activated by the operator via a faceplate available at the supervisory 
system (SCADA/HMI). 



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.6.2    Interlock bypass mode


All interlock signals (TRIP, INTERLOCK or PERMISSIVE) can be overridden (bypassed). The bypass 
signal is a single signal that, if active, overrides and deactivates any TRIP, INTERLOCK or 
PERMISSIVE signal that may have been activated.

It is possible to permanently disable the bypass mode for any given valve (preventing the 
operator from activating it).

The following data points are associated with the bypass mode:

 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL       FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_BYPASS_DIS    Prevents bypass mode being      Bool     1 = no bypass mode
            activated under all circumstances         0 = bypass permitted
 ――――――――――――――――――――――――――――――――――――――――――

 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 mode_BypassOn   Activates bypass mode, if active, any    Bool     1 = bypass mode on
           TRIP, INTERLOCK or PERMISSIVE signal          0 = bypass mode off
           will be ignored

 status_BypassOn   Status indication, shows if bypass      Bool     1 = bypass active
           mode is active                 0 = bypass inactive
 ――――――――――――――――――――――――――――――――――――――――――

Bypass mode can only be activated by the operator usually via a faceplate available at the 
supervisory system (SCADA/HMI), alternatively it may be via some form of hardwired signal such 
as a key-switch &amp;c. 

If bypass mode is disabled (configuration signal CONFIG_BYPASS_DIS is set to 1), then the bypass 
mode cannot be turned on under any circumstances, the option will be greyed out on the 
supervisory system faceplate and the module will constantly reset the mode_BypassOn signal.  



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.6.3    Simulation mode


The module can be switched to a simulation mode, in which the position feedback for the valve 
is replaced by simulated signals specified by the operator. 

Simulation mode is generally used during testing, but can also be applied in a process 
environment if a fault condition is detected; this scenario allows the plant to continue operating 
(albeit under some degree of manual control) until the valve is repaired or replaced.

The following data points are associated with the simulation mode:

 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL       FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_SIM_DIS     Prevents simulation mode being     Bool     1 = no sim mode
            activated under all circumstances         0 = sim permitted
 ――――――――――――――――――――――――――――――――――――――――――
 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL         FUNCTION                TYPE     DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 mode_SimOn      Activates simulation mode, if active, the   Bool     1 = sim mode on
           position feedback will be specified by         0 = sim mode off
           mode_SimValue      
 mode_SimValue    Specifies the type of simulated position     Int     0 = no feedback
           feedback in use                  1 = permanently eng
                                     2 = permanently deng
                                     3 = follow demand

 status_SimOn     Status indication, shows if simulation     Bool     1 = sim active
           mode is active                 0 = sim inactive
 ――――――――――――――――――――――――――――――――――――――――――

Simulation mode can only be activated by the operator via a faceplate available at the 
supervisory system (SCADA/HMI).

If simulation mode is activated, the position feedback for the valve is forced to one of four 
states specified by the mode_SimValue variable (this is an enumerated variable):

 ――――――――――――――――――――――――――――――――――――――――――
 mode_SimValue  DESCRIPTION                FBK_ENG FBK_DENG
 ――――――――――――――――――――――――――――――――――――――――――
     0        Permanently disables all position feedback    0     0
            (irrespective of any valve position)

     1        Permanently sets valve position to energised         1     0
            (irrespective of any valve position)

     2        Permanently sets valve position to deenergised    0     1
            (irrespective of any valve position)

     3        Position feedback follows the requested        1/0    0/1
            state of the valve                (if valve is eng/deng)
 ――――――――――――――――――――――――――――――――――――――――――

The mode_SimValue is restricted to the range 0-3.

If simulation mode is disabled (configuration signal CONFIG_SIM_DIS is set to 1), then the 
simulation mode cannot be turned on under any circumstances, the option will be greyed out on 
the supervisory system faceplate and the module will constantly reset the mode_SimOn signal.

If simulation mode is permitted (CONFIG_SIM_DIS = 0), then setting mode_SimOn to 1 will activate 
simulation mode and the any position feedback signals (connected to FBK_ENG and 
FBK_DENG) will be overridden according to the value stored in mode_SimValue (see Table above).

The operator can set and adjust the simulation value (mode_SimValue) from the instrument 
faceplate on the supervisory system. The simulation value can be adjusted at any time by the 
operator (even if simulation mode has not been activated), but will not be applied until 
simulation mode is turned on (mode_SimOn = 1). 

If simulation mode is completely disabled (CONFIG_SIM_DIS is set to 1) then the operator will not 
be able to adjust the simulated value (mode_SimValue will be greyed out on the faceplate).



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.6.4     Remote/local mode

Remote and local operating modes refer to the supervisory system that has control of the 
device (i.e. which system can write to the device and change the operating mode of the 
device). 

This type of mode is usual present where a plant has a remote central control location (a control 
room) that normally controls the device (remote control), but also has a field panel with a local 
HMI that an operator in the field can select to take over control of the device (local control) for 
maintenance purposes.

The modes are as follows (and are mutually exclusive, only one will be active):

   Remote        Only the remote system in the control room can 
                control the device

   Local            A local system has taken control of the device and the remote 
                system can no longer issue commands to it

   Remote/local disabled   The system does not use remote/local modes and any 
     (ALL mode)     supervisory system can issue commands to the device 
 
Remote/local control is generally handled by the supervisory systems themselves; however, the 
supervisory systems need a storage area per device to record which mode that device is in, local 
control is often activated by a panel key-switch, that changes the state of several devices from 
remote to local (usually all the devices controlled by the local panel).

The module simply identifies the remote/local mode from the mode signals and configuration 
signals provided to the module.

For systems that do not use remote/local modes (any supervisory system can control the device, 
or control is determined by operator privileges), the remote/local modes can be disabled 
(CONFIG_RL_EN is set to zero) and the device is effectively in ALL mode (any system can 
control the device).

If remote/local operation is in use, the supervisory system that does not have control will still 
display all the information from the device, but will not be able to control the device (it could not 
for example, activate simulation mode) and all control function (faceplate functions) will be 
greyed out.

The following signals are associated with remote/local/all modes:

 DATA STRUCTURE    UT11011_St_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_RL_EN      Allows Remote and Local      Bool    1 = Remote/local selected
                modes to be selected        0 = All mode is active

 DATA STRUCTURE    UT31011_Dy_DevValve3Way
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 mode_RemoteOn       Activates remote mode     Bool    1 = remote mode on, 
                CONFIG_RL_EN must = 1       0 = remote mode off

 mode_LocalOn     Activates local mode          Bool    1 = local mode on, 
                CONFIG_RL_EN must = 1       0 = remote mode off

 status_RemoteOn      Status remote mode on     Bool    1 = remote mode on, 
                              0 = remote mode off

 status_LocalOn       Status local mode on      Bool 1 = local mode on, 
                              0 = local mode off

 status_RLOff       Status ALL mode is on = 0    Bool 1 = ALL mode on, 
                              0 = ALL mode off
 ――――――――――――――――――――――――――――――――――――――――――
 Block remote/local signals 

By default, remote/local is disabled — ALL mode is selected (CONFIG_RL_EN = 0).




▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.6.5     Faceplate disable mode

It is possible to disable the supervisory system faceplate from within the module, the 
configuration signal:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_FP_DIS        Disable the supervisory      Bool    1 = Faceplate disabled
                system faceplate           0 = normal
 ――――――――――――――――――――――――――――――――――――――――――

If the faceplate is disabled (CONFIG_FP_DIS = 1), the supervisory system must not allow the 
device faceplate to be opened (normally achieved by clicking the block icon or device symbol), 
this in turn prevents the operator from affecting the device in anyway, it would not, for example, 
be possible to put the device into simulation mode.

Similarly, if the faceplate is disabled, the operator will not have access to the mode_Reset signal, 
meaning that alternative reset mechanisms must be in place (such as a hardwired pushbutton 
for example).

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
4.     Supervisory system interface


See the online documentation for this block — select the block in the project tree and press:
     SHIFT + F1 or follow the link: https://psop.uk/pal-smds-fc11011-p 

An explanation of the block icons and faceplates available to the supervisory system for this 
module is given in section 4 of the SMDS document [Ref. 011].

A downloadable copy of the SMDS (and all other project documentation) is available here:

     https://practicalseries.com/2001-pal/21-project/01-00-docs.html

For this module, the document number is: PS2001-5-2312-fc11011

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━

</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="15" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="16" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Section 3.6 to 4</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="17" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="18" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="19" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
5.     PARAMETERS


The following parameters are associated with the block:

 
 ――――――――――――――――――――――――――――――――――――――――――
 PARAM         FUNCTION                    TYPE      IN-OUT 
 ――――――――――――――――――――――――――――――――――――――――――
 SYS_SIGNALS      Common system signals              UT21000    In
          logic and timing signals for parametric access

 FBK_ENG        Optional energised state positive feedback     Bool      In
          (1 = energised, 0 = not energised) If not 
          required, set permanently to _False

 FBK_DENG     Optional deenergised state positive feedback   Bool      In
          (1 = deenergised, 0 = not deenergised) If not  
          required, set permanently to _False

 EXT_FAULT     Optional external fault signal for the device     Bool      In
          (1 = fault, 0 = healthy). If not required, set 
          permanently to _False

 E_STOP        Optional emergency stop (safety) signal        Bool      In
          (1 = emergency stop active, 0 = healthy) If not 
          required, set permanently to _False

 TRIP        Optional trip signal                  Bool      In
          (1 = trip condition active, 0 = healthy) If not 
          required, set permanently to _False

 INTERLOCK     Optional interlock signal               Bool      In
          (1 = interlock condition active, 0 = healthy) If 
          not required, set permanently to _False

 PERMISSIVE      Optional permissive signal             Bool      In
          (1 = permissive condition active, 0 = healthy) 
          If not required, set permanently to _False

 STATIC_DATA     Data structure that holds the configuration data     UT11011    In
          for the device (limit switch and interlock 
          configuration &amp;c.)

 DYNAMIC_DATA      Data structure that holds the live data for the       UT31011    InOut
          device (its mode, status and messages and 
          any other dynamic information required by the 
          module)

 OPERATE        Output to drive the valve to a particular state    Bool      Out
          (1 = energised state, 0 = deenergised state)
 ――――――――――――――――――――――――――――――――――――――――――

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━


▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
6.     DATA STRUCTURES AND USAGE


The block has the following associated data structure:


 ――――――――――――――――――――――――――――――――――――――――――
 DATA STRUCTURE             DESCRIPTION
 ――――――――――――――――――――――――――――――――――――――――――
 UT01000_St_SysRevision          Revision information for this block    See FC01001
 UT01001_St_SysLicence           Licence information for this block  See FC01001
 UT21000_Dy_SysSignals           System signals for logic and timing  See FC01001

 UT11011_St_DevValve3Way        Static data that holds the configuration data
                    for the device ( limit switch and interlock 
                    configuration &amp;c.)

 UT31011_Dy_DevValve3Way          Dynamic data that holds the live data for the
                    device (its mode, status and messages and 
                    any other dynamic information required by the 
                    module)

 ――――――――――――――――――――――――――――――――――――――――――



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
6.1     UT11011_St_DevValve3Way

The static data structure for an isolating valve.


 UT11011_St_DevValve3Way (full contents)
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_FBK_ENG_EN      CONFIG — Energised feedback is enabled         Bool
                     (1 = energised feedback, 0 = none)
 CONFIG_FBK_DENG_EN       CONFIG — Deenergised feedback is enabled       Bool
                     (1 = deenergised feedback, 0 = none)
 CONFIG_ESTOP_DIS     CONFIG — E_STOP signal disabled           Bool
                     (1 = E_STOP not used, 0 = in use)
 CONFIG_TRIP_DIS      CONFIG — TRIP signal disabled           Bool
                     (1 = TRIP not used, 0 = in use)
 CONFIG_ILOCK_DIS     CONFIG — INTERLOCK signal disabled        Bool
                     (1 = INTERLOCK not used, 0 = in use)
 CONFIG_PERM_DIS      CONFIG — PERMISSIVE signal disabled         Bool
                     (1 = PERMISSIVE not used, 0 = in use)
 CONFIG_TRIP_ENG_DENG    CONFIG — TRIP state                  Bool
                     (1 = energised, 0 = deenergised)
 CONFIG_ILOCK_ENG_DENG   CONFIG — INTERLOCK state              Bool
                     ((1 = energised, 0 = deenergised)
 CONFIG_PERM_ENG_DENG    CONFIG — PERMISSIVE permitted state         Bool
                     (1 = energised, 0 = deenergised)
 CONFIG_FP_DIS               CONFIG — Faceplate is disabled           Bool
                     (1 = no Faceplate, 0 = normal)
 CONFIG_MAN_DIS              CONFIG — Manual mode is disabled          Bool
                     (1 = no manual mode, 0 = normal)
 CONFIG_BYPASS_DIS     CONFIG — Bypass mode is disabled           Bool
                     (1 = no bypass mode, 0 = normal)
 CONFIG_SIM_DIS             CONFIG — Simulation is disabled            Bool
                     (1 = no simulation, 0 = normal)
 CONFIG_RL_EN       CONFIG — Remote/local mode enabled       Bool
                     (1 = enabled, 0 = all mode)

 INFO_TAG          INFORMATION — Instrument ID tag          String[20]

 TIME_ENG_MAX       TIMER — Initial value of energising operation timer  Real
                     (counts down from this value), [seconds]
 TIME_DENG_MAX             TIMER — Initial value of deeng'ing operation timer   Real
                     (counts down from this value), [seconds]
 TIME_DER_ENG                TIMER — Percentage of energising timer to expired     Real
                     before simulating FBK_ENG, [percent]
 TIME_DER_DENG                TIMER — Percentage of deeng'ing timer to expired   Real
                     before simulating FBK_DENG, [percent]
 ――――――――――――――――――――――――――――――――――――――――――



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
6.2      UT31011_Dy_DevValve3Way

The static data structure for an isolating valve.


 UT31011_Dy_DevValve3Way (full contents)
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 status_Denergised      STATUS — Valve is confirmed deenergised        Bool
                     (1 = deenergised, 0 = not deenergised)
 status_Energised        STATUS — Valve is confirmed energised         Bool
                     (1 = energised, 0 = not energised)
 status_Deenergising     STATUS — Valve is deenergising           Bool
                     (1 = deenergising, 0 = not deenergising)
 status_Energising        STATUS — Valve is energising            Bool
                     (1 = energising, 0 = not energising)
 status_Operating        STATUS — Valve is changing state           Bool
                     (1 = changing state, 0 = fixed state)
 status_Fault            STATUS — Valve is in fault              Bool
                     (1 = fault present, 0 = healthy)
 status_OperateOn      STATUS — Valve output is on              Bool
                     (1 = energised, 0 = deenergised)
 status_Aut           STATUS — Automatic mode active           Bool
                     (1 = auto mode on, 0 = auto mode off)
 status_Man          STATUS — Manual mode active             Bool
                     (1 = man mode on, 0 = man mode off)
 status_EStop          STATUS — E_STOP safety signal is active         Bool
                     (1 = active, 0 = healthy)
 status_Trip        STATUS — TRIP signal is active             Bool
                     (1 = active, 0 = healthy)
 status_Ilock         STATUS — INTERLOCK signal is active            Bool
                     (1 = active, 0 = healthy)
 status_Perm        STATUS — PERMISSIVE signal is active           Bool
                     (1 = active, 0 = healthy)
 status_BypassOn        STATUS — Valve is in bypass mode          Bool
                     (1 = Simulation mode, 0 = normal)
 status_SimOn           STATUS — Valve is in simulation mode               Bool
                     (1 = Simulation mode, 0 = normal)
 status_RemoteOn       STATUS — Valve is in remote mode                  Bool
                     (1 = Remote mode, 0 = normal)
 status_LocalOn         STATUS — Valve is in local mode                    Bool
                     (1 = Local mode, 0 = normal)
 status_RLOff         STATUS — Valve is in ALL mode                   Bool
                     (1 = ALL mode, 0 = normal)

 msg_FailToEnergise       MESSAGE — Alarm – “Fail to energise” active      Bool
 msg_FailToDeenergise     MESSAGE — Alarm – “Fail to deenergise” active    Bool
 msg_FailWhileEnergised     MESSAGE — Alarm – “Fail while energised” active    Bool
 msg_FailWhileDeenergised   MESSAGE — Alarm – “Fail while deenergised” active  Bool
 msg_Flt_External         MESSAGE — Alarm – “external fault" is active      Bool

 mode_AutMan        MODE — Automatic or manual mode selection     Bool
                   (1 = auto mode active, 0 = man mode)
 mode_BypassOn      MODE — Bypass mode                Bool
                   (1 = bypass mode active, 0 = normal)
 mode_SimOn         MODE — Simulation mode               Bool
                   (1 = sim mode active, 0 = normal)
 mode_SimValue       MODE — Simulation value               Int
                   (0 = no limits, 1 = always eng, 
                   2 = always deng, 3 = follow demand)
 mode_RemoteOn        MODE — Remote SCADA control enabled       Bool
                   (1 = active, 0 = disabled or N/A)
 mode_LocalOn         MODE — Local HMI control enabled           Bool
                   (1 = active, 0 = disabled or N/A)
 mode_Reset        MODE — Fault reset – 1 cycle only           Bool
                   (1 = Reset faults, 0 = does nothing)
 ctrl_Aut_EngDeng       CONTROL — Auto mode operate the valve      Bool
                         (1 = energise, 0 = deenergise)
 ctrl_Man_EngDeng         CONTROL — Manual mode operate the valve       Bool
                         (1 = energise, 0 = deenergise)

 batch_ID         BATCH — Booking ID (optional for batch operations)   UInt

 actual_Operating_Timer     ACTUAL — Timer value — operating timer      Real
                     actual value [seconds]
 actual_Last_Op_Time       ACTUAL — actual time taken to achieve the last    Real
                     good valve position [seconds]

 $derived_fbk_eng       INTERNAL — Derived feedback energise signal       Bool
                         (1 = eng , 0 = not eng)
 $derived_fbk_deng         INTERNAL — Derived feedback deenergised signal   Bool
                         (1 = deng, 0 = not deng)
 $sim_fbk_eng           INTERNAL — Simulated feedback energised signal      Bool
                         (1 = eng , 0 = not eng)
 $sim_fbk_deng             INTERNAL — Simulated feedback deenergised signal Bool
                         (1 = deng, 0 = not deng)
 $ctrl_EngDeng           INTERNAL — actual eng or deng request,            Bool
                         incorporates all priorities
                        (1 = eng valve, 0 = deng valve)
 $pret_eng                INTERNAL — Edge retention (+ve) rising edge of    Bool
                         ctrl_EngDeng (change to eng)
 $nret_deng             INTERNAL — Edge retention (-ve) falling edge of        Bool
                         ctrl_EngDeng (change to deng)
 ――――――――――――――――――――――――――――――――――――――――――


With the exception of the flowing, all these signals are discussed in the previous sections, the 
outstanding items are firstly:

     batch_ID

The batch_ID is not required for normal use; it is only used where a “booking” system is used 
(common in batch and routing applications). Such booking applications can acquire the device 
if it is free and reserve it for a particular phase of the batch. Batch applications are a topic in 
their own right and are discussed separately in the online User Guide.

There are internal working signals (all signals the start with a $ are internal working signals used 
by the module). In this instance they are used as follows: 
 
The $derived_fbk_eng and $derived_fbk_deng are the internally derived energised and 
deenergised feedback signal used in place of FBK_ENG and FBK_DENG if either 
CONFIG_FBK_ENG_EN or CONFIG_FBK_DENG_EN is set to zero.

The $sim_fbk_eng and $sim_fbk_deng are the simulated position feedback signal used in place 
of FBK_ENG and FBK_DENG if simulation mode is active.

$ctrl_EngDeng is the required state of the valve, it takes into account the auto/manual requested 
state and modifies this according to any interlocks, safety signals or faults that may be present.

The $pret_eng and $nret_deng are edge retention signals used to detect either a rising 
(a change to energising) or a falling (a change to deenergising) edge on the 
$ctrl_EngDeng signal.


               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
7.     CONSTANTS AND TEMPORARY (LOCAL) DATA



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
7.1     Constants


The following constants data is used:

 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME       Value    FUNCTION                  TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 k_TIME_OP_MIN      0.21      Minimum value for the operation timer     Real
 ――――――――――――――――――――――――――――――――――――――――――



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
7.2     Temporary (local) data


The following temporary data is used:

 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                  TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 revInfo             Revision information for the block         UT01000
 licInfo           Licensing information for the block      UT01001
 calDengElapsedTime          Calc - Derived deng signal elapsed time      Real
 calEngElapsedTime       Calc - Derived eng signal elapsed time     Real
 wrkEng               Working - eng position feedback signal        Bool
 wrkDeng           Working - deng position feedback signal      Bool
 wrkCtrlPriority40        Working - priority 40 controls the valve      Bool
 wrkCtrlPriority30        Working - priority 30 controls the valve      Bool
 wrkCtrlPriority20        Working - priority 20 controls the valve      Bool
 wrkCtrlPriority10        Working - priority 10 controls the valve      Bool
 wrkCtrlPriority00        Working - priority 00 controls the valve      Bool
 wrkCtrlAutManEngDeng   Working - aut/man eng or deng request        Bool
 wrkTimeFbkEngSim        Working - Err checked TIME_DER_ENG                 Real
 wrkTimeFbkDengSim       Working - Err checked TIME_DER_DENG              Real
 wrkInt           Working storage area (integer)          Int
 wrkReal           Working storage (Real)             Real
 wrkDInt           Working storage area (double integer)         DInt
 ――――――――――――――――――――――――――――――――――――――――――

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
8.     BLOCK CALLS AND ASSOCIATIONS


This section details any blocks which may be called from within this software module (subroutine 
functions for example), any partner blocks with which it may be associated (for example a 
receive module that is partner with a transmit module &amp;c.). It lists any system functions which 
may be called (e.g. reading the real time clock) and any system data types that may be used.

Finally, it lists any special calling requirements for the block (for example, must be called from 
within a cyclic interrupt organisation block) and if the block is using “optimised access” (this is 
the default arrangement).



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.1     Block calls from within this module


There are no PAL block calls from within this block.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.2     Blocks associated with this module


This is a stand-alone block and is not associated with any other blocks.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.3     System block calls and system data types

There are no system block calls



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.4     Special properties and requirements



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
8.4.1     Block optimisation, IEC compatibility and library conformance


   •   Block optimisation is ACTIVE for this block.

   •   The block has been checked for IEC compatibility and is compliant.

   •   The block is compatible with all IEC library-conformance module constraints



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
8.4.2     Calling requirements


There are no special calling requirements for this block.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
9.     EXAMPLE USAGE


The following shows a typical deployment of FC11011:

                        ┌─────────────
     ───────────────────┤ FC11011 
                        ├───────────────┤
   "DB21001_DY_StdGlobalData".SysSignals ─┤ SYS_SIGNALS            %Q1.0
                        │             OPERATE ├─  "V001_OPR"
                  %I1.2     │               │
               "V001_FBK_PORT2" ─┤ FBK_ENG               │
                        │               │
                  %I1.1     │               │
                  "V001_FBK_PORT1" ─┤ FBK_DENG                │
                        │               │
           %I1.0            │               │
          "V001_FAULT"             │               │
       ────┤╱├──────────┤ EXT_FAULT                │
                        │               │
           %I1.4            │               │
         "ZONEA_ESTOP"               │               │
       ────┤╱├──────────┤ E_STOP                │
                        │               │
                   "_False" ─┤ TRIP                    │
                        │               │
           "DB23002_Dy_ILock.V001"─┤ INTERLOCK             │
                        │               │
                   "_False" ─┤ PERMISSIVE            │
                        │               │
                        │               │
                        │               │
        "DB11011_St_DevValve3Way".V001 ─┤ STATIC_DATA             │
                        │
        "DB31011_Dy_DevValve3Way".V001 ─┤ DYNAMIC_DATA
                        │
                        │
                                        │
                               ─────────┘


              ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
10.     TEST AND VERIFICATION PATH


The following diagram shows the full test and verification path for the formal release of each 
version of the software module. See the Test Plan [Ref. 003] for full details, available here:
        https://psop.uk/pal-tp-p


        FC11011-T001         

    Test version: 000.801     
 Released version: 001.000     
Released commit: D0015    

       SCR      SMT     
＿＿＿＿＿＿┌┐＿＿ ▛▜ ＿＿
      └┘   ▙▟   
Initial test           

Initial test to release the      
module following the      
development stage.       
Full SMT    
          

Where:
――――――――――――――――――――――――――――――――――――――――――――
 SCR    Source Code Review      A visual inspection of the software to ensure it has been written  
┌┐             to the correct standards, uses the correct structures within the
└┘             software and is generally suitable for deployment.               

 SMT Software Module Test    A full and detailed test of an individual software module in
  ▛▜              isolation; such testing requires that all branches of the 
  ▙▟              software are tested. 

               It tests all the interfaces to the module, any data recorded or 
               stored by the module, all error and exception handling functions 
               and tests all timed and interrupt driven operations.

 SCV Software Compatibility     A mechanism for verifying that no executable code software 
╓╖    Verification          changes have been made to a module following changes to
╙╜             comment fields.

               Allows typographical errors &amp;c. to be corrected without forcing 
               a full SMT on a module that has not functionally changed.
――――――――――――――――――――――――――――――――――――――――――――

An SCV can only be performed on a module that has at some point previously, successfully 
completed both an SCR and SMT. Where an SCV is implemented, it replaces the requirement for 
both the SCR and the SMT for the test iteration in question.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━


██████████████ █ █ █ █  END   █ █ █ █ ██████████████
   </Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="1A" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="1B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Sections 5 to 11</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="1C" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_False" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="22">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'FC11011'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_BLOCK" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="24">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'001.000'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_NUMBER" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="26">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'2022.06.11'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_DATE" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="28">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'M. Gledhill'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_AUTHOR" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="30">
      <Negated Name="operand" />
    </Part>
    <Part Name="S_Move" UId="31" DisabledENO="true" />
    <Part Name="S_Move" UId="32" DisabledENO="true" />
    <Part Name="S_Move" UId="33" DisabledENO="true" />
    <Part Name="S_Move" UId="34" DisabledENO="true" />
  </Parts>
  <Wires>
    <Wire UId="35">
      <Powerrail />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="21" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="en" />
      <NameCon UId="32" Name="en" />
      <NameCon UId="33" Name="en" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="22" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="39">
      <NameCon UId="31" Name="out" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="24" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="32" Name="out" />
      <IdentCon UId="25" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="26" />
      <NameCon UId="33" Name="in" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="33" Name="out" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="28" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="34" Name="out" />
      <IdentCon UId="29" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="1D" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="1E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
MODIFICATION HISTORY


The revision data shown here, in the network comments, contains additional information 
reflecting the software development workflow under the version control system (VCS) employed 
to track all software changes.

The VCS in use is the Git Source Code Management system in conjunction with the GitHub online 
hosting system. The software in its entirety is available in the GitHub remote repository:

     https://github.com/practicalseries/PS2001-pal-software

The repository is public and can be freely copied (forked in GitHub terminology) and used 
under the MIT licence. 

The MIT licence is reproduced in full in the last network of this software module.


 ―――――――――――――――――――――――――――――――――――――――――――
 DATE       REVISION             MASTER BRANCH     DEV
         (nnn.amm)   COMMIT TAG    (Base ---> Merge)    BRANCH   Author
 ———————————————————————————————————————————
 2022.06.11    001.000   D0015      D0014 D0015  None    M. Gledhill
                       FC11011 — RELEASED FOR USE
                         Merge back to master branch

 2022.06.07    000.801   D0014A-000.801   D0014 N/A     D0014A   M. Gledhill
                       Released for test (SMTS)

 2022.06.01    000.101   D0014A-000.101   D0014 N/A     D0014A   M. Gledhill
                       Block created
 ———————————————————————————————————————————
  Where: nnn  =  Major revision
        a  =  Type (1-7 Development, 8 Proving, 9 Qualification, 0 Release)
      mm  =  Minor revision (must be 00 if a = 0)
        Block properties version number should be set to nn.a (only one decimal place)

▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="1F" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="20" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Current revision and modification history</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="21" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DER_ENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkTimeFbkEngSim" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DER_ENG" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="24">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="wrkTimeFbkEngSim" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DER_ENG" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="28">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>100.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="29">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>100.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="wrkTimeFbkEngSim" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DER_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="wrkTimeFbkDengSim" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DER_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="34">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="35">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="wrkTimeFbkDengSim" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DER_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="38">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>100.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="39">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>100.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="40">
      <Symbol>
        <Component Name="wrkTimeFbkDengSim" />
      </Symbol>
    </Access>
    <Part Name="Move" UId="41" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="42">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="43" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Gt" UId="44">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="45" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Move" UId="46" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="47">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="48" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Gt" UId="49">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="50" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="51">
      <Powerrail />
      <NameCon UId="41" Name="en" />
      <NameCon UId="46" Name="en" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="21" />
      <NameCon UId="41" Name="in" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="41" Name="eno" />
      <NameCon UId="42" Name="pre" />
      <NameCon UId="44" Name="pre" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="41" Name="out1" />
      <IdentCon UId="22" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="23" />
      <NameCon UId="42" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="24" />
      <NameCon UId="42" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="en" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="25" />
      <NameCon UId="43" Name="in" />
    </Wire>
    <Wire UId="59">
      <NameCon UId="43" Name="out1" />
      <IdentCon UId="26" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="27" />
      <NameCon UId="44" Name="in1" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="28" />
      <NameCon UId="44" Name="in2" />
    </Wire>
    <Wire UId="62">
      <NameCon UId="44" Name="out" />
      <NameCon UId="45" Name="en" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="29" />
      <NameCon UId="45" Name="in" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="45" Name="out1" />
      <IdentCon UId="30" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="31" />
      <NameCon UId="46" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="46" Name="eno" />
      <NameCon UId="47" Name="pre" />
      <NameCon UId="49" Name="pre" />
    </Wire>
    <Wire UId="67">
      <NameCon UId="46" Name="out1" />
      <IdentCon UId="32" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="33" />
      <NameCon UId="47" Name="in1" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="34" />
      <NameCon UId="47" Name="in2" />
    </Wire>
    <Wire UId="70">
      <NameCon UId="47" Name="out" />
      <NameCon UId="48" Name="en" />
    </Wire>
    <Wire UId="71">
      <IdentCon UId="35" />
      <NameCon UId="48" Name="in" />
    </Wire>
    <Wire UId="72">
      <NameCon UId="48" Name="out1" />
      <IdentCon UId="36" />
    </Wire>
    <Wire UId="73">
      <IdentCon UId="37" />
      <NameCon UId="49" Name="in1" />
    </Wire>
    <Wire UId="74">
      <IdentCon UId="38" />
      <NameCon UId="49" Name="in2" />
    </Wire>
    <Wire UId="75">
      <NameCon UId="49" Name="out" />
      <NameCon UId="50" Name="en" />
    </Wire>
    <Wire UId="76">
      <IdentCon UId="39" />
      <NameCon UId="50" Name="in" />
    </Wire>
    <Wire UId="77">
      <NameCon UId="50" Name="out1" />
      <IdentCon UId="40" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="22" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="23" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Ensures that the derived position feedback signal percentages are in the range 0-100
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="24" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="25" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Configuration error check</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="26" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_MAN_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_AutMan" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="23" />
    <Part Name="SCoil" UId="24" />
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="23" Name="in" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="23" Name="operand" />
    </Wire>
    <Wire UId="27">
      <NameCon UId="23" Name="out" />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="27" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="28" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If manual mode is disabled (CONFIG_MAN_DIS = 1), then permanently deactivate
manual mode and activate automatic mode.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="29" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="2A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Manual mode disabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="2B" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_AutMan" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="ctrl_Aut_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="ctrl_Man_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="ctrl_Aut_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="ctrl_Man_EngDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27" />
    <Part Name="SCoil" UId="28" />
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="30" />
  </Parts>
  <Wires>
    <Wire UId="31">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="25" />
      <NameCon UId="30" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="2C" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="2D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If automatic mode is active, set the manual mode energise/deenergise request to match the 
automatic mode request (bumpless transfer to manual mode)
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="2E" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="2F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Manual mode bumpless transfer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="30" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_BYPASS_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="23" />
    <Part Name="RCoil" UId="24" />
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="23" Name="in" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="23" Name="operand" />
    </Wire>
    <Wire UId="27">
      <NameCon UId="23" Name="out" />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="31" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="32" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If bypass mode is disabled (CONFIG_BYPASS_DIS = 1), then permanently deactivate
bypass mode.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="33" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="34" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Bypass mode disabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="35" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_SIM_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="23" />
    <Part Name="RCoil" UId="24" />
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="23" Name="in" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="23" Name="operand" />
    </Wire>
    <Wire UId="27">
      <NameCon UId="23" Name="out" />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="36" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="37" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If simulation mode is disabled (CONFIG_SIM_DIS = 1), then permanently deactivate
simulation mode.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="38" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="39" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Simulation mode disabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="3A" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_RL_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="24">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="25" />
    <Part Name="RCoil" UId="26" />
  </Parts>
  <Wires>
    <Wire UId="27">
      <Powerrail />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="21" />
      <NameCon UId="24" Name="operand" />
    </Wire>
    <Wire UId="29">
      <NameCon UId="24" Name="out" />
      <NameCon UId="25" Name="in" />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="30">
      <IdentCon UId="22" />
      <NameCon UId="25" Name="operand" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="23" />
      <NameCon UId="26" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="3B" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="3C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If remote/local mode is not enabled (CONFIG_RL_EN = 0), then reset both 
mode_RemoteOn and mode_LocalOn.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="3D" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="3E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Remote/local modes disabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="3F" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_RL_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="34" />
    <Part Name="Contact" UId="35">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="36">
      <Negated Name="operand" />
    </Part>
    <Part Name="SCoil" UId="37" />
    <Part Name="Contact" UId="38" />
    <Part Name="Contact" UId="39">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="40" />
    <Part Name="Contact" UId="41" />
    <Part Name="Contact" UId="42">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="43" />
    <Part Name="Contact" UId="44" />
    <Part Name="Contact" UId="45" />
    <Part Name="RCoil" UId="46" />
  </Parts>
  <Wires>
    <Wire UId="47">
      <Powerrail />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="21" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="34" Name="out" />
      <NameCon UId="35" Name="in" />
      <NameCon UId="38" Name="in" />
      <NameCon UId="41" Name="in" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="22" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="51">
      <NameCon UId="35" Name="out" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="23" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="54">
      <IdentCon UId="24" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="25" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="56">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
    </Wire>
    <Wire UId="57">
      <IdentCon UId="26" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="58">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="in" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="28" />
      <NameCon UId="41" Name="operand" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="29" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="in" />
    </Wire>
    <Wire UId="64">
      <IdentCon UId="30" />
      <NameCon UId="43" Name="operand" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="31" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out" />
      <NameCon UId="45" Name="in" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="32" />
      <NameCon UId="45" Name="operand" />
    </Wire>
    <Wire UId="68">
      <NameCon UId="45" Name="out" />
      <NameCon UId="46" Name="in" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="33" />
      <NameCon UId="46" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="40" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="41" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If remote/local mode is enabled (CONFIG_RL_EN = 1), and:

   1.  Neither mode_RemoteOn or mode_LocalOn is active, default to remote mode
   2.  A rising edge is detected on mode_LocalOn, reset mode_RemoteOn (in local)
   3.  A rising edge is detected on mode_RemoteOn, reset mode_LocalOn (in remote)
   4.  Both mode_RemoteOn and mode_LocalOn is active, default to remote mode
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="42" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="43" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Remote/Local selection if enabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="44" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_ENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkTimeFbkEngSim" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="23">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>100.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="calEngElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="calEngElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalConstant" UId="32">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalConstant" UId="33">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="calEngElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="calEngElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="38">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_eng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="39">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_ENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="40">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="41">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_eng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="42">
      <Negated Name="operand" />
    </Part>
    <Part Name="Div" UId="43" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Mul" UId="44" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Sub" UId="45" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="46">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="47" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Contact" UId="48" />
    <Part Name="Le" UId="49">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="50" />
    <Part Name="Contact" UId="51" />
    <Part Name="Contact" UId="52">
      <Negated Name="operand" />
    </Part>
    <Part Name="O" UId="53">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="54" />
  </Parts>
  <Wires>
    <Wire UId="55">
      <Powerrail />
      <NameCon UId="42" Name="in" />
      <NameCon UId="51" Name="in" />
      <NameCon UId="52" Name="in" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="21" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="en" />
      <NameCon UId="46" Name="pre" />
      <NameCon UId="48" Name="in" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="22" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="23" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="43" Name="eno" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="43" Name="out" />
      <IdentCon UId="24" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="25" />
      <NameCon UId="44" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="26" />
      <NameCon UId="44" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="44" Name="eno" />
      <NameCon UId="45" Name="en" />
    </Wire>
    <Wire UId="65">
      <NameCon UId="44" Name="out" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="66">
      <IdentCon UId="28" />
      <NameCon UId="45" Name="in1" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="29" />
      <NameCon UId="45" Name="in2" />
    </Wire>
    <Wire UId="68">
      <NameCon UId="45" Name="out" />
      <IdentCon UId="30" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="31" />
      <NameCon UId="46" Name="in1" />
    </Wire>
    <Wire UId="70">
      <IdentCon UId="32" />
      <NameCon UId="46" Name="in2" />
    </Wire>
    <Wire UId="71">
      <NameCon UId="46" Name="out" />
      <NameCon UId="47" Name="en" />
    </Wire>
    <Wire UId="72">
      <IdentCon UId="33" />
      <NameCon UId="47" Name="in" />
    </Wire>
    <Wire UId="73">
      <NameCon UId="47" Name="out1" />
      <IdentCon UId="34" />
    </Wire>
    <Wire UId="74">
      <IdentCon UId="35" />
      <NameCon UId="48" Name="operand" />
    </Wire>
    <Wire UId="75">
      <NameCon UId="48" Name="out" />
      <NameCon UId="49" Name="pre" />
    </Wire>
    <Wire UId="76">
      <IdentCon UId="36" />
      <NameCon UId="49" Name="in1" />
    </Wire>
    <Wire UId="77">
      <IdentCon UId="37" />
      <NameCon UId="49" Name="in2" />
    </Wire>
    <Wire UId="78">
      <NameCon UId="49" Name="out" />
      <NameCon UId="50" Name="in" />
    </Wire>
    <Wire UId="79">
      <IdentCon UId="38" />
      <NameCon UId="50" Name="operand" />
    </Wire>
    <Wire UId="80">
      <IdentCon UId="39" />
      <NameCon UId="51" Name="operand" />
    </Wire>
    <Wire UId="81">
      <NameCon UId="51" Name="out" />
      <NameCon UId="53" Name="in1" />
    </Wire>
    <Wire UId="82">
      <IdentCon UId="40" />
      <NameCon UId="52" Name="operand" />
    </Wire>
    <Wire UId="83">
      <NameCon UId="52" Name="out" />
      <NameCon UId="53" Name="in2" />
    </Wire>
    <Wire UId="84">
      <NameCon UId="53" Name="out" />
      <NameCon UId="54" Name="in" />
    </Wire>
    <Wire UId="85">
      <IdentCon UId="41" />
      <NameCon UId="54" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="45" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="46" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If there is no energised position feedback (CONFIG_FBK_ENG_EN = 0), then the energised state 
of the valve is derived from the elapsed time of the operation timer using the following 
formulae:

┌───────────────────────────────────────┐
│$derived_fbk_eng = 1 when:                             │
│                              wrkTimeFbkEngSim    │
│actual_Operating_Timer ≤ TIME_ENG_MAX ─ TIME_ENG_MAX ╳ ---------------------------------------- │
│                                 100        │
└───────────────────────────────────────┘
Note:    wrkTimeFbkEngSim is the error checked equivalent of TIME_DER_ENG

If the calculated elapsed time is close to or less than k_TIME_OP_MIN (210ms),
the calculated elapsed time (calEngElapsedTime) is set to k_TIME_OP_MIN. This ensures at
least one timing pulse is required before the timer reaches zero.

The derived energised signal ($derived_fbk_eng) is reset if the valve is requested to be 
deenergised ($ctrl_EngDeng = 0).
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="47" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="48" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Derived energised position</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="49" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_DENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkTimeFbkDengSim" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="23">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>100.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="calDengElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="calDengElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalConstant" UId="32">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalConstant" UId="33">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="calDengElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="calDengElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="38">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_deng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="39">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_DENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="40">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="41">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_deng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="42">
      <Negated Name="operand" />
    </Part>
    <Part Name="Div" UId="43" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Mul" UId="44" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Sub" UId="45" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="46">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="47" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Contact" UId="48" />
    <Part Name="Le" UId="49">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="50" />
    <Part Name="Contact" UId="51" />
    <Part Name="Contact" UId="52" />
    <Part Name="O" UId="53">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="54" />
  </Parts>
  <Wires>
    <Wire UId="55">
      <Powerrail />
      <NameCon UId="42" Name="in" />
      <NameCon UId="51" Name="in" />
      <NameCon UId="52" Name="in" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="21" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="en" />
      <NameCon UId="46" Name="pre" />
      <NameCon UId="48" Name="in" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="22" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="23" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="43" Name="eno" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="43" Name="out" />
      <IdentCon UId="24" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="25" />
      <NameCon UId="44" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="26" />
      <NameCon UId="44" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="44" Name="eno" />
      <NameCon UId="45" Name="en" />
    </Wire>
    <Wire UId="65">
      <NameCon UId="44" Name="out" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="66">
      <IdentCon UId="28" />
      <NameCon UId="45" Name="in1" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="29" />
      <NameCon UId="45" Name="in2" />
    </Wire>
    <Wire UId="68">
      <NameCon UId="45" Name="out" />
      <IdentCon UId="30" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="31" />
      <NameCon UId="46" Name="in1" />
    </Wire>
    <Wire UId="70">
      <IdentCon UId="32" />
      <NameCon UId="46" Name="in2" />
    </Wire>
    <Wire UId="71">
      <NameCon UId="46" Name="out" />
      <NameCon UId="47" Name="en" />
    </Wire>
    <Wire UId="72">
      <IdentCon UId="33" />
      <NameCon UId="47" Name="in" />
    </Wire>
    <Wire UId="73">
      <NameCon UId="47" Name="out1" />
      <IdentCon UId="34" />
    </Wire>
    <Wire UId="74">
      <IdentCon UId="35" />
      <NameCon UId="48" Name="operand" />
    </Wire>
    <Wire UId="75">
      <NameCon UId="48" Name="out" />
      <NameCon UId="49" Name="pre" />
    </Wire>
    <Wire UId="76">
      <IdentCon UId="36" />
      <NameCon UId="49" Name="in1" />
    </Wire>
    <Wire UId="77">
      <IdentCon UId="37" />
      <NameCon UId="49" Name="in2" />
    </Wire>
    <Wire UId="78">
      <NameCon UId="49" Name="out" />
      <NameCon UId="50" Name="in" />
    </Wire>
    <Wire UId="79">
      <IdentCon UId="38" />
      <NameCon UId="50" Name="operand" />
    </Wire>
    <Wire UId="80">
      <IdentCon UId="39" />
      <NameCon UId="51" Name="operand" />
    </Wire>
    <Wire UId="81">
      <NameCon UId="51" Name="out" />
      <NameCon UId="53" Name="in1" />
    </Wire>
    <Wire UId="82">
      <IdentCon UId="40" />
      <NameCon UId="52" Name="operand" />
    </Wire>
    <Wire UId="83">
      <NameCon UId="52" Name="out" />
      <NameCon UId="53" Name="in2" />
    </Wire>
    <Wire UId="84">
      <NameCon UId="53" Name="out" />
      <NameCon UId="54" Name="in" />
    </Wire>
    <Wire UId="85">
      <IdentCon UId="41" />
      <NameCon UId="54" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="4A" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="4B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If there is no deenergised position feedback (CONFIG_FBK_DENG_EN = 0), then the deenergised 
state of the valve is derived from the elapsed time of the operation timer using the following 
formulae:

┌─────────────────────────────────────────┐
│$derived_fbk_deng = 1 when:                                 │
│                                wrkTimeFbkDengSim    │
│actual_Operating_Timer ≤ TIME_DENG_MAX ─ TIME_DENG_MAX ╳ ------------------------------------------- │
│                                   100           │
└─────────────────────────────────────────┘
Note:    wrkTimeFbkDengSim is the error checked equivalent of TIME_DER_DENG

If the calculated elapsed time is close to or less than k_TIME_OP_MIN (210ms),
the calculated elapsed time (calDengElapsedTime) is set to k_TIME_OP_MIN. This ensures at
least one timing pulse is required before the timer reaches zero.

The derived deenergised signal ($derived_fbk_deng) is reset if the valve is requested to be 
energised ($ctrl_EngDeng = 1).
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="4C" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="4D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Derived deenergised position</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="4E" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="23">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>3</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_eng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="31">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>1</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="33">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>3</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_eng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_eng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="38" />
    <Part Name="Eq" UId="39">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Eq" UId="40">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Eq" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Contact" UId="42">
      <Negated Name="operand" />
    </Part>
    <Part Name="O" UId="43">
      <TemplateValue Name="Card" Type="Cardinality">3</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="44" />
    <Part Name="Eq" UId="45">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Eq" UId="46">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Contact" UId="47" />
    <Part Name="O" UId="48">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="49" />
    <Part Name="Contact" UId="50">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="51" />
  </Parts>
  <Wires>
    <Wire UId="52">
      <Powerrail />
      <NameCon UId="38" Name="in" />
      <NameCon UId="50" Name="in" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="21" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="pre" />
      <NameCon UId="40" Name="pre" />
      <NameCon UId="41" Name="pre" />
      <NameCon UId="45" Name="pre" />
      <NameCon UId="46" Name="pre" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="22" />
      <NameCon UId="39" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="23" />
      <NameCon UId="39" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="39" Name="out" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="24" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="25" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="40" Name="out" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="26" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="27" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="64">
      <IdentCon UId="28" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="65">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="in3" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="29" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="30" />
      <NameCon UId="45" Name="in1" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="31" />
      <NameCon UId="45" Name="in2" />
    </Wire>
    <Wire UId="70">
      <NameCon UId="45" Name="out" />
      <NameCon UId="48" Name="in1" />
    </Wire>
    <Wire UId="71">
      <IdentCon UId="32" />
      <NameCon UId="46" Name="in1" />
    </Wire>
    <Wire UId="72">
      <IdentCon UId="33" />
      <NameCon UId="46" Name="in2" />
    </Wire>
    <Wire UId="73">
      <NameCon UId="46" Name="out" />
      <NameCon UId="47" Name="in" />
    </Wire>
    <Wire UId="74">
      <IdentCon UId="34" />
      <NameCon UId="47" Name="operand" />
    </Wire>
    <Wire UId="75">
      <NameCon UId="47" Name="out" />
      <NameCon UId="48" Name="in2" />
    </Wire>
    <Wire UId="76">
      <NameCon UId="48" Name="out" />
      <NameCon UId="49" Name="in" />
    </Wire>
    <Wire UId="77">
      <IdentCon UId="35" />
      <NameCon UId="49" Name="operand" />
    </Wire>
    <Wire UId="78">
      <IdentCon UId="36" />
      <NameCon UId="50" Name="operand" />
    </Wire>
    <Wire UId="79">
      <NameCon UId="50" Name="out" />
      <NameCon UId="51" Name="in" />
    </Wire>
    <Wire UId="80">
      <IdentCon UId="37" />
      <NameCon UId="51" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="4F" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="50" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If simulation mode is active, the simulated energised position signal is set as follows:

   •   mode_SimValue = 0 (no feedback), $sim_fbk_eng = 0

   •   mode_SimValue = 1 (permanently energised), $sim_fbk_eng = 1

   •   mode_SimValue = 2 (permanently deenergised), $sim_fbk_eng = 0

   •   mode_SimValue = 3 (follow demand), $sim_fbk_eng = $ctrl_EngDeng

If simulation mode is not active,  $sim_fbk_eng = 0
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="51" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="52" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Simulation mode — Energised signal</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="53" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="23">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>1</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>3</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_deng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="31">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="33">
      <Constant>
        <ConstantType>Int</ConstantType>
        <ConstantValue>3</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_deng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_deng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="38" />
    <Part Name="Eq" UId="39">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Eq" UId="40">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Eq" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Contact" UId="42" />
    <Part Name="O" UId="43">
      <TemplateValue Name="Card" Type="Cardinality">3</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="44" />
    <Part Name="Eq" UId="45">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Eq" UId="46">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Contact" UId="47">
      <Negated Name="operand" />
    </Part>
    <Part Name="O" UId="48">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="49" />
    <Part Name="Contact" UId="50">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="51" />
  </Parts>
  <Wires>
    <Wire UId="52">
      <Powerrail />
      <NameCon UId="38" Name="in" />
      <NameCon UId="50" Name="in" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="21" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="pre" />
      <NameCon UId="40" Name="pre" />
      <NameCon UId="41" Name="pre" />
      <NameCon UId="45" Name="pre" />
      <NameCon UId="46" Name="pre" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="22" />
      <NameCon UId="39" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="23" />
      <NameCon UId="39" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="39" Name="out" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="24" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="25" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="40" Name="out" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="26" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="27" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="64">
      <IdentCon UId="28" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="65">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="in3" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="29" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="30" />
      <NameCon UId="45" Name="in1" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="31" />
      <NameCon UId="45" Name="in2" />
    </Wire>
    <Wire UId="70">
      <NameCon UId="45" Name="out" />
      <NameCon UId="48" Name="in1" />
    </Wire>
    <Wire UId="71">
      <IdentCon UId="32" />
      <NameCon UId="46" Name="in1" />
    </Wire>
    <Wire UId="72">
      <IdentCon UId="33" />
      <NameCon UId="46" Name="in2" />
    </Wire>
    <Wire UId="73">
      <NameCon UId="46" Name="out" />
      <NameCon UId="47" Name="in" />
    </Wire>
    <Wire UId="74">
      <IdentCon UId="34" />
      <NameCon UId="47" Name="operand" />
    </Wire>
    <Wire UId="75">
      <NameCon UId="47" Name="out" />
      <NameCon UId="48" Name="in2" />
    </Wire>
    <Wire UId="76">
      <NameCon UId="48" Name="out" />
      <NameCon UId="49" Name="in" />
    </Wire>
    <Wire UId="77">
      <IdentCon UId="35" />
      <NameCon UId="49" Name="operand" />
    </Wire>
    <Wire UId="78">
      <IdentCon UId="36" />
      <NameCon UId="50" Name="operand" />
    </Wire>
    <Wire UId="79">
      <NameCon UId="50" Name="out" />
      <NameCon UId="51" Name="in" />
    </Wire>
    <Wire UId="80">
      <IdentCon UId="37" />
      <NameCon UId="51" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="54" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="55" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If simulation mode is active, the simulated deenergised position signal is set as follows:

   •   mode_SimValue = 0 (no feedback), $sim_fbk_deng = 0

   •   mode_SimValue = 1 (permanently energised), $sim_fbk_deng = 0

   •   mode_SimValue = 2 (permanently deenergised), $sim_fbk_deng = 1

   •   mode_SimValue = 3 (follow demand), $sim_fbk_deng = NOT $ctrl_EngDeng

If simulation mode is not active,  $sim_fbk_deng = 0
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="56" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="57" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Simulation mode — Deenergised signal</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="58" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_ENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="FBK_ENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_ENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_eng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_eng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkEng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="30" />
    <Part Name="Contact" UId="31">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="32" />
    <Part Name="Contact" UId="33">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="34">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="35" />
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37" />
    <Part Name="O" UId="38">
      <TemplateValue Name="Card" Type="Cardinality">3</TemplateValue>
    </Part>
    <Part Name="Coil" UId="39" />
  </Parts>
  <Wires>
    <Wire UId="40">
      <Powerrail />
      <NameCon UId="30" Name="in" />
      <NameCon UId="33" Name="in" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="41">
      <IdentCon UId="21" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="42">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="43">
      <IdentCon UId="22" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="44">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="45">
      <IdentCon UId="23" />
      <NameCon UId="32" Name="operand" />
    </Wire>
    <Wire UId="46">
      <NameCon UId="32" Name="out" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="24" />
      <NameCon UId="33" Name="operand" />
    </Wire>
    <Wire UId="48">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="49">
      <IdentCon UId="25" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="50">
      <NameCon UId="34" Name="out" />
      <NameCon UId="35" Name="in" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="26" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="35" Name="out" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="27" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="28" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="56">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="in3" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="39" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="59" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="5A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Generates a working energised signal (wrkEng), that is then used throughout the module as the 
definitive energised position feedback signal.

The energised signal will be either :

   1.  The same as the FBK_ENG parameter if this is in use 
     (CONFIG_FBK_ENG_EN = 1)

   2.  The internally derived energised state (based on the requested state of the valve) 
     if the FBK_ENG signal is NOT in use (CONFIG_FBK_ENG_EN = 0)

   3.  The simulated state of the valve if simulation mode is active (mode_SimOn = 1)

If an actual energised position signal is provided to the module via the FBK_ENG parameter 
(i.e. if CONFIG_FBK_ENG_EN = 1) then wrkEng is set to match the FBK_ENG signal 
(wrkEng = FBK_ENG).

If a derived energised signal is to be used (i.e. if CONFIG_FBK_ENG_EN = 0), then wrkEng is set to 
match the internally derived $derived_fbk_eng signal (wrkEng = $derived_fbk_eng). 
$derived_fbk_eng is based on the requested state of the valve. 

Finally, if simulation mode is active (mode_SimOn = 1), then wrkEng is set to match the internal 
simulation signal $sim_fbk_eng signal (wrkEng = $sim_fbk_eng).
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="5B" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="5C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Determine valve ENG position status</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="5D" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_DENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="FBK_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FBK_DENG_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_deng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$sim_fbk_deng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="30" />
    <Part Name="Contact" UId="31">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="32" />
    <Part Name="Contact" UId="33">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="34">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="35" />
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37" />
    <Part Name="O" UId="38">
      <TemplateValue Name="Card" Type="Cardinality">3</TemplateValue>
    </Part>
    <Part Name="Coil" UId="39" />
  </Parts>
  <Wires>
    <Wire UId="40">
      <Powerrail />
      <NameCon UId="30" Name="in" />
      <NameCon UId="33" Name="in" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="41">
      <IdentCon UId="21" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="42">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="43">
      <IdentCon UId="22" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="44">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="45">
      <IdentCon UId="23" />
      <NameCon UId="32" Name="operand" />
    </Wire>
    <Wire UId="46">
      <NameCon UId="32" Name="out" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="24" />
      <NameCon UId="33" Name="operand" />
    </Wire>
    <Wire UId="48">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="49">
      <IdentCon UId="25" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="50">
      <NameCon UId="34" Name="out" />
      <NameCon UId="35" Name="in" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="26" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="35" Name="out" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="27" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="28" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="56">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="in3" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="39" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="5E" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="5F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Generates a working deenergised signal (wrkDeng), that is then used throughout the module 
as the definitive deenergised position feedback signal.

The deenergised signal will be either :

   1.  The same as the FBK_DENG parameter if this is in use 
     (CONFIG_FBK_DENG_EN = 1)

   2.  The internally derived deenergised state (based on the requested state of the valve) 
     if the FBK_DENG signal is NOT in use (CONFIG_FBK_DENG_EN = 0)

   3.  The simulated state of the valve if simulation mode is active (mode_SimOn = 1)

If an actual deenergised position signal is provided to the module via the FBK_DENG parameter 
(i.e. if CONFIG_FBK_DENG_EN = 1) then wrkDeng is set to match the FBK_DENG signal 
wrkDeng = FBK_DENG).

If a derived deenergised signal is to be used (i.e. if CONFIG_FBK_DENG_EN = 0), then wrkDeng is 
set to match the internally derived $derived_fbk_deng signal 
(wrkDeng = $derived_fbk_deng). $derived_fbk_deng is based on the requested state of 
the valve.

Finally, if simulation mode is active (mode_SimOn = 1), then wrkDeng is set to match the 
internal simulation signal $sim_fbk_deng signal (wrkDeng = $sim_fbk_deng). 
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="60" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="61" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Determine valve DENG position status</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="62" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Fault" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="E_STOP" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ESTOP_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkCtrlPriority40" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="25" />
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27">
      <Negated Name="operand" />
    </Part>
    <Part Name="O" UId="28">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="29" />
  </Parts>
  <Wires>
    <Wire UId="30">
      <Powerrail />
      <NameCon UId="25" Name="in" />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="21" />
      <NameCon UId="25" Name="operand" />
    </Wire>
    <Wire UId="32">
      <NameCon UId="25" Name="out" />
      <NameCon UId="28" Name="in1" />
    </Wire>
    <Wire UId="33">
      <IdentCon UId="22" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="34">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="35">
      <IdentCon UId="23" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="36">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in2" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="63" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="64" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Establishes the priority of signal that has control of the valve, the priorities are assigned as 
follows:

 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL TYPE       PRIORITY   ASSIGNED VALUE       CAN BE BYPASSED
 ――――――――――――――――――――――――――――――――――――――――――
 Emergency Stop        High        40                NO
 Trip            ↑           30             YES
 Interlock            ↑           20             YES
 Permissive          ↑           10             YES
 Auto/manual control    Low         00                NO
 ――――――――――――――――――――――――――――――――――――――――――
 High priority signal take precedence over lower priority signals.

Determine a priority 40 (valve safety (or fault) condition is active)

The priority is active if:

   1.  The valve is in a fault condition (status_Fault = 1)

  OR both the following are true

   1.  Safety signals are not disabled (CONFIG_ESTOP_DIS = 0)

   2.  The E_STOP signal is active
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="65" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="66" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Establish control priority (priority 40 safety or fault - highest)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="67" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="TRIP" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_TRIP_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkCtrlPriority40" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkCtrlPriority30" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="28">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="30" />
  </Parts>
  <Wires>
    <Wire UId="31">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="39">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="25" />
      <NameCon UId="30" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="68" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="69" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Determine if a priority 30 (trip interlock signal) is active and has priority

The priority is active if:

   1.  A higher priority signal is not active

   2.  Trip signals are not disabled (CONFIG_TRIP_DIS = 0)

   3.  Interlock signals are not bypassed (mode_BypassOn = 0)

   4.  The TRIP signal is active
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="6A" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="6B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Establish control priority (priority 30 Trip)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="6C" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="INTERLOCK" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ILOCK_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkCtrlPriority40" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkCtrlPriority30" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="wrkCtrlPriority20" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="27" />
    <Part Name="Contact" UId="28">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="30">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="31">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="32" />
  </Parts>
  <Wires>
    <Wire UId="33">
      <Powerrail />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="21" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="22" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="23" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="39">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="24" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="25" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="26" />
      <NameCon UId="32" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="6D" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="6E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Determine if a priority 20 (interlock signal) is active and has priority

The priority is active if:

   1.  A higher priority signal is not active

   2.  Interlock signals are not disabled (CONFIG_ILOCK_DIS = 0)

   3.  Interlock signals are not bypassed (mode_BypassOn = 0)

   4.  The INTERLOCK signal is active
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="6F" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="70" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Establish control priority (priority 20 Interlock)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="71" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="PERMISSIVE" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkCtrlPriority40" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkCtrlPriority30" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="wrkCtrlPriority20" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkCtrlPriority10" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="28" />
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="30">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="31">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="32">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="33">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="34" />
  </Parts>
  <Wires>
    <Wire UId="35">
      <Powerrail />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="21" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="22" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="39">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="23" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="24" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="25" />
      <NameCon UId="32" Name="operand" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="32" Name="out" />
      <NameCon UId="33" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="26" />
      <NameCon UId="33" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="27" />
      <NameCon UId="34" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="72" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="73" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Determine if a priority 10 (permissive signal) is active and has priority

The priority is active if:

   1.  A higher priority signal is not active

   2.  Permissive signals are not disabled (CONFIG_PERM_DIS = 0)

   3.  Interlock signals are not bypassed (mode_BypassOn = 0)

   4.  The PERMISSIVE signal is active
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="74" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="75" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Establish control priority (priority 10 permissive)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="76" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkCtrlPriority40" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkCtrlPriority30" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="wrkCtrlPriority20" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkCtrlPriority10" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkCtrlPriority00" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="27">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="28">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="30" />
  </Parts>
  <Wires>
    <Wire UId="31">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="39">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="25" />
      <NameCon UId="30" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="77" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="78" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Determine if a priority 00 (automatic or manual control) is active and has priority

The priority is active if:

   1.  A higher priority signal is not active
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="79" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="7A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Establish control priority (priority 00 auto/manual - lowest)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="7B" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_AutMan" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="ctrl_Aut_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_AutMan" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="ctrl_Man_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27" />
    <Part Name="Contact" UId="28">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="29" />
    <Part Name="O" UId="30">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="31" />
  </Parts>
  <Wires>
    <Wire UId="32">
      <Powerrail />
      <NameCon UId="26" Name="in" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="33">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="34">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="35">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="36">
      <NameCon UId="27" Name="out" />
      <NameCon UId="30" Name="in1" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="40">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in2" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="25" />
      <NameCon UId="31" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="7C" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="7D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Determine the valve state required by the automatic/manual mode selection:

   1.  If manual mode is active set wrkCtrlAutManEngDeng to match the current manual 
     mode requested state (ctrl_Man_EngDeng)

   2.  If automatic mode is active set wrkCtrlAutManEngDeng to match the current 
     automatic mode requested state (ctrl_Aut_EngDeng)
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="7E" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="7F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Consolidate the auto or manual state request</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="80" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkCtrlPriority40" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="23" />
    <Part Name="RCoil" UId="24" />
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="23" Name="in" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="23" Name="operand" />
    </Wire>
    <Wire UId="27">
      <NameCon UId="23" Name="out" />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="81" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="82" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If  a priority 40 (safety) condition is active, set the valve to the deenergised 
state
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="83" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="84" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Control — Evaluate priority signals and set eng/deng  request (Priority 40)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="85" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkCtrlPriority30" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_TRIP_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_TRIP_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27" />
    <Part Name="SCoil" UId="28" />
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="30" />
  </Parts>
  <Wires>
    <Wire UId="31">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="25" />
      <NameCon UId="30" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="86" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="87" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If  a priority 30 (trip) condition is active, set the valve to the required state:

   •   If the TRIP state is energised (CONFIG_TRIP_ENG_DENG = 1) 
     set valve to be energised

   •   if the TRIP state is deenergised (CONFIG_TRIP_ENG_DENG = 0) 
     set valve to be deenergised
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="88" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="89" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Control — Evaluate priority signals and set eng/deng request (Priority 30)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="8A" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkCtrlPriority20" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ILOCK_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ILOCK_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27" />
    <Part Name="SCoil" UId="28" />
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="30" />
  </Parts>
  <Wires>
    <Wire UId="31">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="25" />
      <NameCon UId="30" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="8B" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="8C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If  a priority 20 (interlock) condition is active, set the valve to the required state:

   •   If the INTERLOCK state is energised (CONFIG_ILOCK_ENG_DENG = 1) 
     set valve to be energised

   •   f the INTERLOCK state is deenergised (CONFIG_ILOCK_ENG_DENG = 0) 
     set valve to be deenergised
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="8D" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="8E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Control — Evaluate priority signals and set eng/deng request (Priority 20)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="8F" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkCtrlPriority10" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_OperateOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_ENG_DENG" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_OperateOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="38" />
    <Part Name="Contact" UId="39" />
    <Part Name="Contact" UId="40" />
    <Part Name="Contact" UId="41" />
    <Part Name="Contact" UId="42">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="43">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="44" />
    <Part Name="O" UId="45">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Contact" UId="46" />
    <Part Name="O" UId="47">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="48" />
    <Part Name="Contact" UId="49">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="50">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="51">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="52" />
    <Part Name="Contact" UId="53" />
    <Part Name="Contact" UId="54">
      <Negated Name="operand" />
    </Part>
    <Part Name="O" UId="55">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Contact" UId="56">
      <Negated Name="operand" />
    </Part>
    <Part Name="O" UId="57">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="58" />
  </Parts>
  <Wires>
    <Wire UId="59">
      <Powerrail />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="21" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="in" />
      <NameCon UId="43" Name="in" />
      <NameCon UId="49" Name="in" />
      <NameCon UId="51" Name="in" />
      <NameCon UId="53" Name="in" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="22" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="in" />
    </Wire>
    <Wire UId="64">
      <IdentCon UId="23" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="65">
      <NameCon UId="40" Name="out" />
      <NameCon UId="47" Name="in1" />
    </Wire>
    <Wire UId="66">
      <IdentCon UId="24" />
      <NameCon UId="41" Name="operand" />
    </Wire>
    <Wire UId="67">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="25" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="69">
      <NameCon UId="42" Name="out" />
      <NameCon UId="45" Name="in1" />
    </Wire>
    <Wire UId="70">
      <IdentCon UId="26" />
      <NameCon UId="43" Name="operand" />
    </Wire>
    <Wire UId="71">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="72">
      <IdentCon UId="27" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="73">
      <NameCon UId="44" Name="out" />
      <NameCon UId="45" Name="in2" />
    </Wire>
    <Wire UId="74">
      <NameCon UId="45" Name="out" />
      <NameCon UId="46" Name="in" />
    </Wire>
    <Wire UId="75">
      <IdentCon UId="28" />
      <NameCon UId="46" Name="operand" />
    </Wire>
    <Wire UId="76">
      <NameCon UId="46" Name="out" />
      <NameCon UId="47" Name="in2" />
    </Wire>
    <Wire UId="77">
      <NameCon UId="47" Name="out" />
      <NameCon UId="48" Name="in" />
    </Wire>
    <Wire UId="78">
      <IdentCon UId="29" />
      <NameCon UId="48" Name="operand" />
    </Wire>
    <Wire UId="79">
      <IdentCon UId="30" />
      <NameCon UId="49" Name="operand" />
    </Wire>
    <Wire UId="80">
      <NameCon UId="49" Name="out" />
      <NameCon UId="50" Name="in" />
    </Wire>
    <Wire UId="81">
      <IdentCon UId="31" />
      <NameCon UId="50" Name="operand" />
    </Wire>
    <Wire UId="82">
      <NameCon UId="50" Name="out" />
      <NameCon UId="57" Name="in1" />
    </Wire>
    <Wire UId="83">
      <IdentCon UId="32" />
      <NameCon UId="51" Name="operand" />
    </Wire>
    <Wire UId="84">
      <NameCon UId="51" Name="out" />
      <NameCon UId="52" Name="in" />
    </Wire>
    <Wire UId="85">
      <IdentCon UId="33" />
      <NameCon UId="52" Name="operand" />
    </Wire>
    <Wire UId="86">
      <NameCon UId="52" Name="out" />
      <NameCon UId="55" Name="in1" />
    </Wire>
    <Wire UId="87">
      <IdentCon UId="34" />
      <NameCon UId="53" Name="operand" />
    </Wire>
    <Wire UId="88">
      <NameCon UId="53" Name="out" />
      <NameCon UId="54" Name="in" />
    </Wire>
    <Wire UId="89">
      <IdentCon UId="35" />
      <NameCon UId="54" Name="operand" />
    </Wire>
    <Wire UId="90">
      <NameCon UId="54" Name="out" />
      <NameCon UId="55" Name="in2" />
    </Wire>
    <Wire UId="91">
      <NameCon UId="55" Name="out" />
      <NameCon UId="56" Name="in" />
    </Wire>
    <Wire UId="92">
      <IdentCon UId="36" />
      <NameCon UId="56" Name="operand" />
    </Wire>
    <Wire UId="93">
      <NameCon UId="56" Name="out" />
      <NameCon UId="57" Name="in2" />
    </Wire>
    <Wire UId="94">
      <NameCon UId="57" Name="out" />
      <NameCon UId="58" Name="in" />
    </Wire>
    <Wire UId="95">
      <IdentCon UId="37" />
      <NameCon UId="58" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="90" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="91" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If  a priority 10 (permissive) condition is active, set the valve to the required state:


PERMITTED STATE IS ENERGISED — CONDITIONS:

   •   If the Permitted state is energised and Aut/Man request is for energised
     set the valve to be energised[Branch 1]

   •   If the Permitted state is energised and Aut/Man request is for deenergised and the 
     current valve output matches this state (deenergised) set the valve to be 
     deenergised (maintain the current state) [Branch 6]

   •   If the Permitted state is energised and Aut/Man request is for deenergised and the 
     current valve output matches the deenergised state, set the valve to be energised 
     (override the auto/man request [Branch 2]

PERMITTED STATE IS DEENERGISED — CONDITIONS:

   •   If the Permitted state is deenergised and Aut/Man request is for deenergised,
     set the valve to be  deenergised [Branch 4]

   •   If the Permitted state is deenergised and Aut/Man request is for energised, and the 
     current valve output matches this state (energised) set the valve to be energised 
     (maintain the current state) [Branch 3]

   •   If the Permitted state is deenergised and Aut/Man request is for energised, and the current
     valve output matches the deenergised  state, set the valve to be deenergised 
     (override the auto/man request [Branch 5]
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="92" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="93" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Control — Evaluate priority signals and set eng/deng request (Priority 10)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="94" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkCtrlPriority00" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkCtrlAutManEngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27" />
    <Part Name="SCoil" UId="28" />
    <Part Name="Contact" UId="29">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="30" />
  </Parts>
  <Wires>
    <Wire UId="31">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="29" Name="out" />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="25" />
      <NameCon UId="30" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="95" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="96" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If  a priority 00 (auto/manual control) condition is active, set the valve to the required state:

   •   If the auto/manual state is energised (wrkCtrlAutManEngDeng = 1) 
     set the valve to be energised

   •   If the  auto/manual state is deenergised (wrkCtrlAutManEngDeng = 0) 
     set the valve to be deenergised
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="97" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="98" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Control — Evaluate priority signals and set Eng/Deng request (Priority 00)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="99" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Fault" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$pret_eng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Reset" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalConstant" UId="31">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalConstant" UId="32">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="34">
      <Negated Name="operand" />
    </Part>
    <Part Name="PContact" UId="35" />
    <Part Name="Contact" UId="36" />
    <Part Name="O" UId="37">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Contact" UId="38" />
    <Part Name="SCoil" UId="39" />
    <Part Name="RCoil" UId="40" />
    <Part Name="Move" UId="41" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="42">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="43" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="44">
      <Powerrail />
      <NameCon UId="34" Name="in" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="45">
      <IdentCon UId="21" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="46">
      <NameCon UId="34" Name="out" />
      <NameCon UId="35" Name="pre" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="23" />
      <NameCon UId="35" Name="bit" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="35" Name="out" />
      <NameCon UId="37" Name="in1" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="24" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="51">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="40" Name="in" />
      <NameCon UId="41" Name="en" />
      <NameCon UId="42" Name="pre" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="57">
      <IdentCon UId="28" />
      <NameCon UId="41" Name="in" />
    </Wire>
    <Wire UId="58">
      <NameCon UId="41" Name="out1" />
      <IdentCon UId="29" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="42" Name="in1" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="in2" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="en" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="43" Name="out1" />
      <IdentCon UId="33" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="9A" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="9B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If a change of state is detected on ctrl_EngDeng, in this case a rising edge indicating the
valve has been requested to change from a deenergised to an energised state, the status of the
valve is set to energising and the energising operation time is loaded into the operation timer.

If the energising operation time is less than k_TIME_OP_MIN (210ms), the 
actual_Operating_Timer is set to k_TIME_OP_MIN. This ensure that at least one timing pulse is 
required, before the timer reaches a value of zero (i.e. at least one controller cycle will be 
required).

If the valve is in a fault condition (status_Fault = true), the change of state is not evaluated
until the fault condition has cleared

Note: the timer is also triggered if the Reset signal is received and the valve is requested to be 
           energised
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="9C" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="9D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Check for change of state request — Energising</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="9E" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Fault" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$nret_deng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Reset" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalConstant" UId="31">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalConstant" UId="32">
      <Constant Name="k_TIME_OP_MIN" />
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="34">
      <Negated Name="operand" />
    </Part>
    <Part Name="NContact" UId="35" />
    <Part Name="Contact" UId="36" />
    <Part Name="O" UId="37">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Contact" UId="38">
      <Negated Name="operand" />
    </Part>
    <Part Name="SCoil" UId="39" />
    <Part Name="RCoil" UId="40" />
    <Part Name="Move" UId="41" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="42">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="43" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="44">
      <Powerrail />
      <NameCon UId="34" Name="in" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="45">
      <IdentCon UId="21" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="46">
      <NameCon UId="34" Name="out" />
      <NameCon UId="35" Name="pre" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="23" />
      <NameCon UId="35" Name="bit" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="35" Name="out" />
      <NameCon UId="37" Name="in1" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="24" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="51">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="40" Name="in" />
      <NameCon UId="41" Name="en" />
      <NameCon UId="42" Name="pre" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="57">
      <IdentCon UId="28" />
      <NameCon UId="41" Name="in" />
    </Wire>
    <Wire UId="58">
      <NameCon UId="41" Name="out1" />
      <IdentCon UId="29" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="42" Name="in1" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="in2" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="en" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="43" Name="out1" />
      <IdentCon UId="33" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="9F" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="A0" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If a change of state is detected on ctrl_EngDeng, in this case a falling edge indicating the
valve has been requested to change from an energised to a deenergised state, the status of the
valve is set to deenergising and the deenergising operation time is loaded into the operation 
timer.

If the deenergising operation time is less than k_TIME_OP_MIN (210ms), the 
actual_Operating_Timer is set to k_TIME_OP_MIN. This ensure that at least one timing pulse is 
required, before the timer reaches a value of zero (i.e. at least one controller cycle will be 
required).

If the valve is in a fault condition (status_Fault = true), the change of state is not evaluated
until the fault condition has cleared

Note: the timer is also triggered if the Reset signal is received and the valve is requested to be 
           deenergised
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="A1" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="A2" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Check for change of state request — Deenergising</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="A3" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Operating" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="calEngElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_eng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26" />
    <Part Name="Contact" UId="27">
      <Negated Name="operand" />
    </Part>
    <Part Name="Le" UId="28">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="29" />
  </Parts>
  <Wires>
    <Wire UId="30">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="32">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="33">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="34">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="pre" />
    </Wire>
    <Wire UId="35">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="in1" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="24" />
      <NameCon UId="28" Name="in2" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="25" />
      <NameCon UId="29" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="A4" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="A5" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The $derived_fbk_eng logic is set to match the current state of the valve whenever the valve
is in a static state (i.e. not energising or deenergising), this ensures a clean transition if the 
CONFIG_FBK_ENG_EN signal changes state during runtime.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="A6" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="A7" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Error check — derived energised position feedback</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="A8" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Operating" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="calDengElapsedTime" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$derived_fbk_deng" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="27">
      <Negated Name="operand" />
    </Part>
    <Part Name="Le" UId="28">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="29" />
  </Parts>
  <Wires>
    <Wire UId="30">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="32">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="33">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="operand" />
    </Wire>
    <Wire UId="34">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="pre" />
    </Wire>
    <Wire UId="35">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="in1" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="24" />
      <NameCon UId="28" Name="in2" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="25" />
      <NameCon UId="29" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="A9" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="AA" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The $derived_fbk_deng logic is set to match the current state of the valve whenever the valve
is in a static state (i.e. not energising or deenergising), this ensures a clean transition if the 
CONFIG_FBK_DENG_EN signal changes state during runtime
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="AB" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="AC" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Error check — derived deenergised position feedback</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="AD" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkEng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energised" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="24" />
    <Part Name="Contact" UId="25">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="26" />
  </Parts>
  <Wires>
    <Wire UId="27">
      <Powerrail />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="21" />
      <NameCon UId="24" Name="operand" />
    </Wire>
    <Wire UId="29">
      <NameCon UId="24" Name="out" />
      <NameCon UId="25" Name="in" />
    </Wire>
    <Wire UId="30">
      <IdentCon UId="22" />
      <NameCon UId="25" Name="operand" />
    </Wire>
    <Wire UId="31">
      <NameCon UId="25" Name="out" />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="23" />
      <NameCon UId="26" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="AE" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="AF" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The valve is confirmed energised (status_Energised = 1) if there is positive indication of the 
energised state (wrkEng = 1) and not of the deenergised signal (wrkDeng = 0). 

I.e. the valve is showing energised and not deenergised
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="B0" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="B1" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Status — Determine if the valve is confirmed energised</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="B2" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkEng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergised" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="24" />
    <Part Name="Contact" UId="25">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="26" />
  </Parts>
  <Wires>
    <Wire UId="27">
      <Powerrail />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="21" />
      <NameCon UId="24" Name="operand" />
    </Wire>
    <Wire UId="29">
      <NameCon UId="24" Name="out" />
      <NameCon UId="25" Name="in" />
    </Wire>
    <Wire UId="30">
      <IdentCon UId="22" />
      <NameCon UId="25" Name="operand" />
    </Wire>
    <Wire UId="31">
      <NameCon UId="25" Name="out" />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="23" />
      <NameCon UId="26" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="B3" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="B4" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The valve is confirmed deenergised (status_Deenergised = 1) if there is positive indication of the 
deenergised state (wrkDeng = 1) and not of the energised signal (wrkEng = 0). 

I.e. the valve is showing deenergised and not energised
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="B5" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="B6" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Status — Determine if the valve is confirmed deenergised</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="B7" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="22">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Fault" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energised" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailWhileEnergised" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergised" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailWhileDeenergised" />
      </Symbol>
    </Access>
    <Part Name="Eq" UId="30">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="31">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="32" />
    <Part Name="Contact" UId="33">
      <Negated Name="operand" />
    </Part>
    <Part Name="SCoil" UId="34" />
    <Part Name="Contact" UId="35">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="36">
      <Negated Name="operand" />
    </Part>
    <Part Name="SCoil" UId="37" />
  </Parts>
  <Wires>
    <Wire UId="38">
      <Powerrail />
      <NameCon UId="30" Name="pre" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="21" />
      <NameCon UId="30" Name="in1" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="22" />
      <NameCon UId="30" Name="in2" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="23" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="in" />
      <NameCon UId="35" Name="in" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="24" />
      <NameCon UId="32" Name="operand" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="32" Name="out" />
      <NameCon UId="33" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="25" />
      <NameCon UId="33" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="26" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="49">
      <IdentCon UId="27" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="50">
      <NameCon UId="35" Name="out" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="28" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="29" />
      <NameCon UId="37" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="B8" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="B9" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the valve is in a static state, operation timer = 0 and the valve is not already in a fault
condition, the failed while energised and failed  while deenergised alarms are generated as 
follows:

If the valve is energised (ctrl_EngDeng = 1) and the valve is not energised 
(status_Energised = 0), the failed while energised alarm is generated

If the valve is deenergised (ctrl_EngDeng = 0) and the valve is not deenergised 
(status_Deenergised = 0), the failed while deenergised alarm is generated
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="BA" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="BB" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Failed while energised/deenergised alarms</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="BC" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energised" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="29">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergised" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="34">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="38">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="39">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Fault" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="40">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="41">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToEnergise" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="42">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="43">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToDeenergise" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="44">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="45">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="46">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="47">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="48" />
    <Part Name="Contact" UId="49" />
    <Part Name="O" UId="50">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Contact" UId="51" />
    <Part Name="Sub" UId="52" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Contact" UId="53" />
    <Part Name="Contact" UId="54" />
    <Part Name="Move" UId="55" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="56" />
    <Part Name="Contact" UId="57" />
    <Part Name="Contact" UId="58" />
    <Part Name="Move" UId="59" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="60" />
    <Part Name="Le" UId="61">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="62">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="63" />
    <Part Name="SCoil" UId="64" />
    <Part Name="Contact" UId="65" />
    <Part Name="SCoil" UId="66" />
    <Part Name="RCoil" UId="67" />
    <Part Name="RCoil" UId="68" />
    <Part Name="Move" UId="69" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="70">
      <Powerrail />
      <NameCon UId="48" Name="in" />
      <NameCon UId="49" Name="in" />
    </Wire>
    <Wire UId="71">
      <IdentCon UId="21" />
      <NameCon UId="48" Name="operand" />
    </Wire>
    <Wire UId="72">
      <NameCon UId="48" Name="out" />
      <NameCon UId="50" Name="in1" />
    </Wire>
    <Wire UId="73">
      <IdentCon UId="22" />
      <NameCon UId="49" Name="operand" />
    </Wire>
    <Wire UId="74">
      <NameCon UId="49" Name="out" />
      <NameCon UId="50" Name="in2" />
    </Wire>
    <Wire UId="75">
      <NameCon UId="50" Name="out" />
      <NameCon UId="51" Name="in" />
      <NameCon UId="53" Name="in" />
      <NameCon UId="57" Name="in" />
      <NameCon UId="61" Name="pre" />
    </Wire>
    <Wire UId="76">
      <IdentCon UId="23" />
      <NameCon UId="51" Name="operand" />
    </Wire>
    <Wire UId="77">
      <NameCon UId="51" Name="out" />
      <NameCon UId="52" Name="en" />
    </Wire>
    <Wire UId="78">
      <IdentCon UId="24" />
      <NameCon UId="52" Name="in1" />
    </Wire>
    <Wire UId="79">
      <IdentCon UId="25" />
      <NameCon UId="52" Name="in2" />
    </Wire>
    <Wire UId="80">
      <NameCon UId="52" Name="out" />
      <IdentCon UId="26" />
    </Wire>
    <Wire UId="81">
      <IdentCon UId="27" />
      <NameCon UId="53" Name="operand" />
    </Wire>
    <Wire UId="82">
      <NameCon UId="53" Name="out" />
      <NameCon UId="54" Name="in" />
    </Wire>
    <Wire UId="83">
      <IdentCon UId="28" />
      <NameCon UId="54" Name="operand" />
    </Wire>
    <Wire UId="84">
      <NameCon UId="54" Name="out" />
      <NameCon UId="55" Name="en" />
      <NameCon UId="56" Name="in" />
    </Wire>
    <Wire UId="85">
      <IdentCon UId="29" />
      <NameCon UId="55" Name="in" />
    </Wire>
    <Wire UId="86">
      <NameCon UId="55" Name="out1" />
      <IdentCon UId="30" />
    </Wire>
    <Wire UId="87">
      <IdentCon UId="31" />
      <NameCon UId="56" Name="operand" />
    </Wire>
    <Wire UId="88">
      <IdentCon UId="32" />
      <NameCon UId="57" Name="operand" />
    </Wire>
    <Wire UId="89">
      <NameCon UId="57" Name="out" />
      <NameCon UId="58" Name="in" />
    </Wire>
    <Wire UId="90">
      <IdentCon UId="33" />
      <NameCon UId="58" Name="operand" />
    </Wire>
    <Wire UId="91">
      <NameCon UId="58" Name="out" />
      <NameCon UId="59" Name="en" />
      <NameCon UId="60" Name="in" />
    </Wire>
    <Wire UId="92">
      <IdentCon UId="34" />
      <NameCon UId="59" Name="in" />
    </Wire>
    <Wire UId="93">
      <NameCon UId="59" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
    <Wire UId="94">
      <IdentCon UId="36" />
      <NameCon UId="60" Name="operand" />
    </Wire>
    <Wire UId="95">
      <IdentCon UId="37" />
      <NameCon UId="61" Name="in1" />
    </Wire>
    <Wire UId="96">
      <IdentCon UId="38" />
      <NameCon UId="61" Name="in2" />
    </Wire>
    <Wire UId="97">
      <NameCon UId="61" Name="out" />
      <NameCon UId="62" Name="in" />
      <NameCon UId="67" Name="in" />
      <NameCon UId="68" Name="in" />
      <NameCon UId="69" Name="en" />
    </Wire>
    <Wire UId="98">
      <IdentCon UId="39" />
      <NameCon UId="62" Name="operand" />
    </Wire>
    <Wire UId="99">
      <NameCon UId="62" Name="out" />
      <NameCon UId="63" Name="in" />
      <NameCon UId="65" Name="in" />
    </Wire>
    <Wire UId="100">
      <IdentCon UId="40" />
      <NameCon UId="63" Name="operand" />
    </Wire>
    <Wire UId="101">
      <NameCon UId="63" Name="out" />
      <NameCon UId="64" Name="in" />
    </Wire>
    <Wire UId="102">
      <IdentCon UId="41" />
      <NameCon UId="64" Name="operand" />
    </Wire>
    <Wire UId="103">
      <IdentCon UId="42" />
      <NameCon UId="65" Name="operand" />
    </Wire>
    <Wire UId="104">
      <NameCon UId="65" Name="out" />
      <NameCon UId="66" Name="in" />
    </Wire>
    <Wire UId="105">
      <IdentCon UId="43" />
      <NameCon UId="66" Name="operand" />
    </Wire>
    <Wire UId="106">
      <IdentCon UId="44" />
      <NameCon UId="67" Name="operand" />
    </Wire>
    <Wire UId="107">
      <IdentCon UId="45" />
      <NameCon UId="68" Name="operand" />
    </Wire>
    <Wire UId="108">
      <IdentCon UId="46" />
      <NameCon UId="69" Name="in" />
    </Wire>
    <Wire UId="109">
      <NameCon UId="69" Name="out1" />
      <IdentCon UId="47" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="BD" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="BE" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the valve is energising or deenergising decrement the current operation timer value on each 
200ms pulse.

If the timer reaches zero, and the valve is energising, generate the failed to energise alarm.

If the timer reaches zero, and the valve is deenergising, generate the failed to deenergise alarm
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="BF" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="C0" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Operation timer and Failed to energise/deenergise alarms</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="C1" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="22">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Last_Op_Time" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_DENG_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Operating_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Last_Op_Time" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToDeenergise" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToEnergise" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="33">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>-1.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Last_Op_Time" />
      </Symbol>
    </Access>
    <Part Name="Ne" UId="35">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="36" />
    <Part Name="Sub" UId="37" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Contact" UId="38" />
    <Part Name="Sub" UId="39" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Contact" UId="40" />
    <Part Name="Contact" UId="41" />
    <Part Name="O" UId="42">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Move" UId="43" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="44">
      <Powerrail />
      <NameCon UId="35" Name="pre" />
      <NameCon UId="40" Name="in" />
      <NameCon UId="41" Name="in" />
    </Wire>
    <Wire UId="45">
      <IdentCon UId="21" />
      <NameCon UId="35" Name="in1" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="22" />
      <NameCon UId="35" Name="in2" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="35" Name="out" />
      <NameCon UId="36" Name="in" />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="23" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="en" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="24" />
      <NameCon UId="37" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="25" />
      <NameCon UId="37" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="37" Name="out" />
      <IdentCon UId="26" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="27" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="28" />
      <NameCon UId="39" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="29" />
      <NameCon UId="39" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="39" Name="out" />
      <IdentCon UId="30" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="31" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="59">
      <NameCon UId="40" Name="out" />
      <NameCon UId="42" Name="in1" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="32" />
      <NameCon UId="41" Name="operand" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in2" />
    </Wire>
    <Wire UId="62">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="en" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out1" />
      <IdentCon UId="34" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="C2" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="C3" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Stores that last good operation timer elapsed time, this is the elapsed value of the 
actual_Operating_Timer when the valve achieved the correct position. The result is subtracted
from the TIME_ENG/DENG_MAX value to give the true time to achieve position. The result
is stored in actual_Last_Op_Time

If the valve were energising, then actual_Last_Op_Time is calculated as follows:

┌───────────────────────────────┐
│actual_Last_Op_Time = TIME_ENG_MAX ─ actual_Operating_Timer    │
└───────────────────────────────┘

If the valve were deenergising, then actual_Last_Op_Time is calculated as follows:

┌────────────────────────────────┐
│actual_Last_Op_Time = TIME_DENG_MAX ─ actual_Operating_Timer     │
└────────────────────────────────┘

If the valve either fails to energise or fails to deenergise, then actual_Last_Op_Time is set 
to -1.0 to indicate a fault state.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="C4" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="C5" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Calculate last operation timer value</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="C6" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="EXT_FAULT" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_External" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="23" />
    <Part Name="Coil" UId="24" />
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="23" Name="in" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="23" Name="operand" />
    </Wire>
    <Wire UId="27">
      <NameCon UId="23" Name="out" />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="C7" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="C8" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the external fault signal (EXT_FAULT) is active, generate the external fault alarm
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="C9" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="CA" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>External fault alarm</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="CB" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Reset" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToEnergise" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToDeenergise" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailWhileEnergised" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailWhileDeenergised" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Reset" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Last_Op_Time" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="28">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>-1.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="29">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Last_Op_Time" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Reset" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="32" />
    <Part Name="RCoil" UId="33" />
    <Part Name="RCoil" UId="34" />
    <Part Name="RCoil" UId="35" />
    <Part Name="RCoil" UId="36" />
    <Part Name="Contact" UId="37" />
    <Part Name="Eq" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="39" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="40" />
  </Parts>
  <Wires>
    <Wire UId="41">
      <Powerrail />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="21" />
      <NameCon UId="32" Name="operand" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="32" Name="out" />
      <NameCon UId="33" Name="in" />
      <NameCon UId="34" Name="in" />
      <NameCon UId="35" Name="in" />
      <NameCon UId="36" Name="in" />
      <NameCon UId="37" Name="in" />
      <NameCon UId="40" Name="in" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="22" />
      <NameCon UId="33" Name="operand" />
    </Wire>
    <Wire UId="45">
      <IdentCon UId="23" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="24" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="25" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="26" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="27" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="28" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="en" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="29" />
      <NameCon UId="39" Name="in" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out1" />
      <IdentCon UId="30" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="31" />
      <NameCon UId="40" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="CC" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="CD" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the RESET signal is active, reset all position derived alarms and also clear the RESET signal.

If the actual_Last_Op time is at -1.0 (indicating the valve is in a fault condition), the 
actual_Last_Op will be set to zero if a reset pulse is received. This ensures that a valve that was 
in fault, but is now in the correct deenergised state when reset, generates an 
actual_Last_Op value of zero.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="CE" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="CF" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Reset faults</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="D0" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_True" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Energising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Deenergising" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Operating" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToEnergise" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailToDeenergise" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailWhileEnergised" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_FailWhileDeenergised" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_External" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Fault" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$ctrl_EngDeng" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_OperateOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_AutMan" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Aut" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_AutMan" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Man" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="E_STOP" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="38">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ESTOP_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="39">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_EStop" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="40">
      <Symbol>
        <Component Name="TRIP" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="41">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_TRIP_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="42">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="43">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Trip" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="44">
      <Symbol>
        <Component Name="INTERLOCK" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="45">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ILOCK_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="46">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="47">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Ilock" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="48">
      <Symbol>
        <Component Name="PERMISSIVE" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="49">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_PERM_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="50">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="51">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Perm" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="52">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="53">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_BypassOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="54">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="55">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="56">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="57">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="58">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="59">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="60">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="61">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="62">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_RLOff" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="63" />
    <Part Name="Contact" UId="64" />
    <Part Name="Contact" UId="65" />
    <Part Name="O" UId="66">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="67" />
    <Part Name="Contact" UId="68" />
    <Part Name="Contact" UId="69" />
    <Part Name="Contact" UId="70" />
    <Part Name="Contact" UId="71" />
    <Part Name="Contact" UId="72" />
    <Part Name="O" UId="73">
      <TemplateValue Name="Card" Type="Cardinality">5</TemplateValue>
    </Part>
    <Part Name="Coil" UId="74" />
    <Part Name="Contact" UId="75" />
    <Part Name="Coil" UId="76" />
    <Part Name="Contact" UId="77" />
    <Part Name="Coil" UId="78" />
    <Part Name="Contact" UId="79">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="80" />
    <Part Name="Contact" UId="81" />
    <Part Name="Contact" UId="82">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="83" />
    <Part Name="Contact" UId="84" />
    <Part Name="Contact" UId="85">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="86">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="87" />
    <Part Name="Contact" UId="88" />
    <Part Name="Contact" UId="89">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="90">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="91" />
    <Part Name="Contact" UId="92" />
    <Part Name="Contact" UId="93">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="94">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="95" />
    <Part Name="Contact" UId="96" />
    <Part Name="Coil" UId="97" />
    <Part Name="Contact" UId="98" />
    <Part Name="Coil" UId="99" />
    <Part Name="Contact" UId="100" />
    <Part Name="Coil" UId="101" />
    <Part Name="Contact" UId="102" />
    <Part Name="Coil" UId="103" />
    <Part Name="Contact" UId="104">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="105">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="106" />
  </Parts>
  <Wires>
    <Wire UId="107">
      <Powerrail />
      <NameCon UId="63" Name="in" />
    </Wire>
    <Wire UId="108">
      <IdentCon UId="21" />
      <NameCon UId="63" Name="operand" />
    </Wire>
    <Wire UId="109">
      <NameCon UId="63" Name="out" />
      <NameCon UId="64" Name="in" />
      <NameCon UId="65" Name="in" />
      <NameCon UId="68" Name="in" />
      <NameCon UId="69" Name="in" />
      <NameCon UId="70" Name="in" />
      <NameCon UId="71" Name="in" />
      <NameCon UId="72" Name="in" />
      <NameCon UId="75" Name="in" />
      <NameCon UId="77" Name="in" />
      <NameCon UId="79" Name="in" />
      <NameCon UId="81" Name="in" />
      <NameCon UId="84" Name="in" />
      <NameCon UId="88" Name="in" />
      <NameCon UId="92" Name="in" />
      <NameCon UId="96" Name="in" />
      <NameCon UId="98" Name="in" />
      <NameCon UId="100" Name="in" />
      <NameCon UId="102" Name="in" />
      <NameCon UId="104" Name="in" />
    </Wire>
    <Wire UId="110">
      <IdentCon UId="22" />
      <NameCon UId="64" Name="operand" />
    </Wire>
    <Wire UId="111">
      <NameCon UId="64" Name="out" />
      <NameCon UId="66" Name="in1" />
    </Wire>
    <Wire UId="112">
      <IdentCon UId="23" />
      <NameCon UId="65" Name="operand" />
    </Wire>
    <Wire UId="113">
      <NameCon UId="65" Name="out" />
      <NameCon UId="66" Name="in2" />
    </Wire>
    <Wire UId="114">
      <NameCon UId="66" Name="out" />
      <NameCon UId="67" Name="in" />
    </Wire>
    <Wire UId="115">
      <IdentCon UId="24" />
      <NameCon UId="67" Name="operand" />
    </Wire>
    <Wire UId="116">
      <IdentCon UId="25" />
      <NameCon UId="68" Name="operand" />
    </Wire>
    <Wire UId="117">
      <NameCon UId="68" Name="out" />
      <NameCon UId="73" Name="in1" />
    </Wire>
    <Wire UId="118">
      <IdentCon UId="26" />
      <NameCon UId="69" Name="operand" />
    </Wire>
    <Wire UId="119">
      <NameCon UId="69" Name="out" />
      <NameCon UId="73" Name="in2" />
    </Wire>
    <Wire UId="120">
      <IdentCon UId="27" />
      <NameCon UId="70" Name="operand" />
    </Wire>
    <Wire UId="121">
      <NameCon UId="70" Name="out" />
      <NameCon UId="73" Name="in3" />
    </Wire>
    <Wire UId="122">
      <IdentCon UId="28" />
      <NameCon UId="71" Name="operand" />
    </Wire>
    <Wire UId="123">
      <NameCon UId="71" Name="out" />
      <NameCon UId="73" Name="in4" />
    </Wire>
    <Wire UId="124">
      <IdentCon UId="29" />
      <NameCon UId="72" Name="operand" />
    </Wire>
    <Wire UId="125">
      <NameCon UId="72" Name="out" />
      <NameCon UId="73" Name="in5" />
    </Wire>
    <Wire UId="126">
      <NameCon UId="73" Name="out" />
      <NameCon UId="74" Name="in" />
    </Wire>
    <Wire UId="127">
      <IdentCon UId="30" />
      <NameCon UId="74" Name="operand" />
    </Wire>
    <Wire UId="128">
      <IdentCon UId="31" />
      <NameCon UId="75" Name="operand" />
    </Wire>
    <Wire UId="129">
      <NameCon UId="75" Name="out" />
      <NameCon UId="76" Name="in" />
    </Wire>
    <Wire UId="130">
      <IdentCon UId="32" />
      <NameCon UId="76" Name="operand" />
    </Wire>
    <Wire UId="131">
      <IdentCon UId="33" />
      <NameCon UId="77" Name="operand" />
    </Wire>
    <Wire UId="132">
      <NameCon UId="77" Name="out" />
      <NameCon UId="78" Name="in" />
    </Wire>
    <Wire UId="133">
      <IdentCon UId="34" />
      <NameCon UId="78" Name="operand" />
    </Wire>
    <Wire UId="134">
      <IdentCon UId="35" />
      <NameCon UId="79" Name="operand" />
    </Wire>
    <Wire UId="135">
      <NameCon UId="79" Name="out" />
      <NameCon UId="80" Name="in" />
    </Wire>
    <Wire UId="136">
      <IdentCon UId="36" />
      <NameCon UId="80" Name="operand" />
    </Wire>
    <Wire UId="137">
      <IdentCon UId="37" />
      <NameCon UId="81" Name="operand" />
    </Wire>
    <Wire UId="138">
      <NameCon UId="81" Name="out" />
      <NameCon UId="82" Name="in" />
    </Wire>
    <Wire UId="139">
      <IdentCon UId="38" />
      <NameCon UId="82" Name="operand" />
    </Wire>
    <Wire UId="140">
      <NameCon UId="82" Name="out" />
      <NameCon UId="83" Name="in" />
    </Wire>
    <Wire UId="141">
      <IdentCon UId="39" />
      <NameCon UId="83" Name="operand" />
    </Wire>
    <Wire UId="142">
      <IdentCon UId="40" />
      <NameCon UId="84" Name="operand" />
    </Wire>
    <Wire UId="143">
      <NameCon UId="84" Name="out" />
      <NameCon UId="85" Name="in" />
    </Wire>
    <Wire UId="144">
      <IdentCon UId="41" />
      <NameCon UId="85" Name="operand" />
    </Wire>
    <Wire UId="145">
      <NameCon UId="85" Name="out" />
      <NameCon UId="86" Name="in" />
    </Wire>
    <Wire UId="146">
      <IdentCon UId="42" />
      <NameCon UId="86" Name="operand" />
    </Wire>
    <Wire UId="147">
      <NameCon UId="86" Name="out" />
      <NameCon UId="87" Name="in" />
    </Wire>
    <Wire UId="148">
      <IdentCon UId="43" />
      <NameCon UId="87" Name="operand" />
    </Wire>
    <Wire UId="149">
      <IdentCon UId="44" />
      <NameCon UId="88" Name="operand" />
    </Wire>
    <Wire UId="150">
      <NameCon UId="88" Name="out" />
      <NameCon UId="89" Name="in" />
    </Wire>
    <Wire UId="151">
      <IdentCon UId="45" />
      <NameCon UId="89" Name="operand" />
    </Wire>
    <Wire UId="152">
      <NameCon UId="89" Name="out" />
      <NameCon UId="90" Name="in" />
    </Wire>
    <Wire UId="153">
      <IdentCon UId="46" />
      <NameCon UId="90" Name="operand" />
    </Wire>
    <Wire UId="154">
      <NameCon UId="90" Name="out" />
      <NameCon UId="91" Name="in" />
    </Wire>
    <Wire UId="155">
      <IdentCon UId="47" />
      <NameCon UId="91" Name="operand" />
    </Wire>
    <Wire UId="156">
      <IdentCon UId="48" />
      <NameCon UId="92" Name="operand" />
    </Wire>
    <Wire UId="157">
      <NameCon UId="92" Name="out" />
      <NameCon UId="93" Name="in" />
    </Wire>
    <Wire UId="158">
      <IdentCon UId="49" />
      <NameCon UId="93" Name="operand" />
    </Wire>
    <Wire UId="159">
      <NameCon UId="93" Name="out" />
      <NameCon UId="94" Name="in" />
    </Wire>
    <Wire UId="160">
      <IdentCon UId="50" />
      <NameCon UId="94" Name="operand" />
    </Wire>
    <Wire UId="161">
      <NameCon UId="94" Name="out" />
      <NameCon UId="95" Name="in" />
    </Wire>
    <Wire UId="162">
      <IdentCon UId="51" />
      <NameCon UId="95" Name="operand" />
    </Wire>
    <Wire UId="163">
      <IdentCon UId="52" />
      <NameCon UId="96" Name="operand" />
    </Wire>
    <Wire UId="164">
      <NameCon UId="96" Name="out" />
      <NameCon UId="97" Name="in" />
    </Wire>
    <Wire UId="165">
      <IdentCon UId="53" />
      <NameCon UId="97" Name="operand" />
    </Wire>
    <Wire UId="166">
      <IdentCon UId="54" />
      <NameCon UId="98" Name="operand" />
    </Wire>
    <Wire UId="167">
      <NameCon UId="98" Name="out" />
      <NameCon UId="99" Name="in" />
    </Wire>
    <Wire UId="168">
      <IdentCon UId="55" />
      <NameCon UId="99" Name="operand" />
    </Wire>
    <Wire UId="169">
      <IdentCon UId="56" />
      <NameCon UId="100" Name="operand" />
    </Wire>
    <Wire UId="170">
      <NameCon UId="100" Name="out" />
      <NameCon UId="101" Name="in" />
    </Wire>
    <Wire UId="171">
      <IdentCon UId="57" />
      <NameCon UId="101" Name="operand" />
    </Wire>
    <Wire UId="172">
      <IdentCon UId="58" />
      <NameCon UId="102" Name="operand" />
    </Wire>
    <Wire UId="173">
      <NameCon UId="102" Name="out" />
      <NameCon UId="103" Name="in" />
    </Wire>
    <Wire UId="174">
      <IdentCon UId="59" />
      <NameCon UId="103" Name="operand" />
    </Wire>
    <Wire UId="175">
      <IdentCon UId="60" />
      <NameCon UId="104" Name="operand" />
    </Wire>
    <Wire UId="176">
      <NameCon UId="104" Name="out" />
      <NameCon UId="105" Name="in" />
    </Wire>
    <Wire UId="177">
      <IdentCon UId="61" />
      <NameCon UId="105" Name="operand" />
    </Wire>
    <Wire UId="178">
      <NameCon UId="105" Name="out" />
      <NameCon UId="106" Name="in" />
    </Wire>
    <Wire UId="179">
      <IdentCon UId="62" />
      <NameCon UId="106" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="D1" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="D2" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The status signals for faults, alarms and warnings are either duplicates of the message signals 
(signals beginning with msg_) or logical combinations of them.

The following is a full list of the status signals:

 UT31001_Dy_DevValveIsol (full contents)
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 status_Operating        STATUS — Valve is changing state           Bool
                     (1 = changing state, 0 = fixed state)
 status_Fault            STATUS — Valve is in fault              Bool
                     (1 = fault present, 0 = healthy)
 status_OperateOn      STATUS — Valve output is on              Bool
                     (1 = energised, 0 = deenergised)
 status_Aut           STATUS — Automatic mode active           Bool
                     (1 = auto mode on, 0 = auto mode off)
 status_Man          STATUS — Manual mode active             Bool
                     (1 = man mode on, 0 = man mode off)
 status_EStop          STATUS — E_STOP safety signal is active         Bool
                     (1 = active, 0 = healthy)
 status_Trip        STATUS — TRIP signal is active             Bool
                     (1 = active, 0 = healthy)
 status_Ilock         STATUS — INTERLOCK signal is active            Bool
                     (1 = active, 0 = healthy)
 status_Perm        STATUS — PERMISSIVE signal is active           Bool
                     (1 = active, 0 = healthy)
 status_BypassOn        STATUS — Valve is in bypass mode          Bool
                     (1 = Simulation mode, 0 = normal)
 status_SimOn           STATUS — Valve is in simulation mode               Bool
                     (1 = Simulation mode, 0 = normal)
 status_RemoteOn       STATUS — Valve is in remote mode                  Bool
                     (1 = Remote mode, 0 = normal)
 status_LocalOn         STATUS — Valve is in local mode                    Bool
                     (1 = Local mode, 0 = normal)
 status_RLOff         STATUS — Valve is in ALL mode                   Bool
                     (1 = ALL mode, 0 = normal)

 ――――――――――――――――――――――――――――――――――――――――――
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="D3" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="D4" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Status signals</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="D5" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_OperateOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="OPERATE" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="23" />
    <Part Name="Coil" UId="24" />
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="23" Name="in" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="23" Name="operand" />
    </Wire>
    <Wire UId="27">
      <NameCon UId="23" Name="out" />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="D6" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="D7" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Copy the required energised/deenergised state (status_OperateOn) to the valve output 
parameter (#OPERATE)
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="D8" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="D9" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Output driver</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="DA" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_False" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="22">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'MIT LICENSE'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="licInfo" />
        <Component Name="LICENCE_TYPE" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="24">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'2020 Michael Gledhill'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="licInfo" />
        <Component Name="COPYRIGHT" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26">
      <Negated Name="operand" />
    </Part>
    <Part Name="S_Move" UId="27" DisabledENO="true" />
    <Part Name="S_Move" UId="28" DisabledENO="true" />
  </Parts>
  <Wires>
    <Wire UId="29">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="30">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="31">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="en" />
      <NameCon UId="28" Name="en" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="27" Name="out" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="24" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="28" Name="out" />
      <IdentCon UId="25" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="DB" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="DC" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
LICENCE AND CONTACT INFORMATION

This software and its associated documentation is made available under the MIT Licence:

════════════════════════════════════════════

The MIT License (MIT)

Copyright © 2020 Michael Gledhill

Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
and associated documentation files (the “Software”), to deal in the Software without restriction, 
including without limitation the rights to use, copy, modify, merge, publish, distribute, 
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
furnished to do so, subject to the following conditions: 

The above copyright notice and this permission notice shall be included in all copies or 
substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

════════════════════════════════════════════
                   ┌────────────┐
You can reach the author by email here:   │  mg@practicalseries.com  │
                   └────────────┘
Questions, corrections, constructive criticism and complaints (polite ones) are invited.

</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="DD" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="DE" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>LICENCE AND CONTACT INFORMATION</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <MultilingualText ID="DF" CompositionName="Title">
        <ObjectList>
          <MultilingualTextItem ID="E0" CompositionName="Items">
            <AttributeList>
              <Culture>en-US</Culture>
              <Text>Standard Module [DEVICE DRIVER] — Three-Way Valve </Text>
            </AttributeList>
          </MultilingualTextItem>
        </ObjectList>
      </MultilingualText>
    </ObjectList>
  </SW.Blocks.FC>
</Document>