<?xml version="1.0" encoding="utf-8"?>
<Document>
  <Engineering version="V16" />
  <DocumentInfo>
    <Created>2024-08-19T08:04:41.4308232Z</Created>
    <ExportSetting>WithDefaults</ExportSetting>
    <InstalledProducts>
      <Product>
        <DisplayName>Totally Integrated Automation Portal</DisplayName>
        <DisplayVersion>V16</DisplayVersion>
      </Product>
      <OptionPackage>
        <DisplayName>TIA Portal Version Control Interface</DisplayName>
        <DisplayVersion>V16</DisplayVersion>
      </OptionPackage>
      <OptionPackage>
        <DisplayName>TIA Portal Openness</DisplayName>
        <DisplayVersion>V16</DisplayVersion>
      </OptionPackage>
      <Product>
        <DisplayName>STEP 7 Professional</DisplayName>
        <DisplayVersion>V16</DisplayVersion>
      </Product>
      <OptionPackage>
        <DisplayName>STEP 7 Safety</DisplayName>
        <DisplayVersion>V16</DisplayVersion>
      </OptionPackage>
      <Product>
        <DisplayName>WinCC Professional</DisplayName>
        <DisplayVersion>V16</DisplayVersion>
      </Product>
    </InstalledProducts>
  </DocumentInfo>
  <SW.Blocks.FC ID="0">
    <AttributeList>
      <AutoNumber>false</AutoNumber>
      <HeaderAuthor>M_Gledhill</HeaderAuthor>
      <HeaderFamily>Instrumentation</HeaderFamily>
      <HeaderName>StdInstAnalogRead</HeaderName>
      <HeaderVersion>3.0</HeaderVersion>
      <Interface><Sections xmlns="http://www.siemens.com/automation/Openness/SW/Interface/v4">
  <Section Name="Input">
    <Member Name="SYS_SIGNALS" Datatype="&quot;UT21000_Dy_SysSignals&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Common system signals — logic and timing signals</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Bool" />
          <Member Name="___________0010_1" Datatype="Bool" />
          <Member Name="_False" Datatype="Bool" />
          <Member Name="_True" Datatype="Bool" />
          <Member Name="_50ms" Datatype="Bool" />
          <Member Name="_100ms" Datatype="Bool" />
          <Member Name="_200ms" Datatype="Bool" />
          <Member Name="_500ms" Datatype="Bool" />
          <Member Name="_1s" Datatype="Bool" />
          <Member Name="_2s" Datatype="Bool" />
          <Member Name="_CycleTick" Datatype="Bool" />
          <Member Name="_CycleTock" Datatype="Bool" />
          <Member Name="_CycleFirst" Datatype="Bool" />
          <Member Name="_100msSqW" Datatype="Bool" />
          <Member Name="_200msSqW" Datatype="Bool" />
          <Member Name="_500msSqW" Datatype="Bool" />
          <Member Name="_1sSqW" Datatype="Bool" />
          <Member Name="_2sSqW" Datatype="Bool" />
        </Section>
      </Sections>
    </Member>
    <Member Name="AI_RAW_SIGNAL" Datatype="Int" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Analog Input Signal</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="AI_RAW_DATA" Datatype="&quot;UT00801_St_ConstAiRawData&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Analog Input Signal — raw range and configuration data</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Bool" />
          <Member Name="___________0010_1" Datatype="Bool" />
          <Member Name="AI_CODE" Datatype="UInt" />
          <Member Name="___________0020_0" Datatype="Bool" />
          <Member Name="___________0020_1" Datatype="Bool" />
          <Member Name="RAW_MIN" Datatype="Int" />
          <Member Name="RAW_MAX" Datatype="Int" />
          <Member Name="RAW_DESC" Datatype="String[60]" />
          <Member Name="___________0030_1" Datatype="Bool" />
          <Member Name="___________0030_2" Datatype="Bool" />
          <Member Name="PARAM_TYPE" Datatype="Byte" />
          <Member Name="PARAM_RANGE" Datatype="Byte" />
          <Member Name="PARAM_COEF" Datatype="Byte" />
          <Member Name="___________0040_1" Datatype="Bool" />
          <Member Name="___________0040_2" Datatype="Bool" />
          <Member Name="VALUE_COEF" Datatype="Real" />
        </Section>
      </Sections>
    </Member>
    <Member Name="AI_SCALE_DATA" Datatype="&quot;UT00851_Sy_ConstAiScaleData&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Analog Input Signal — scaled range and configuration data</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Bool" />
          <Member Name="___________0010_1" Datatype="Bool" />
          <Member Name="AI_TAG" Datatype="String[20]" />
          <Member Name="___________0020_0" Datatype="Bool" />
          <Member Name="___________0020_1" Datatype="Bool" />
          <Member Name="SCALE_MIN" Datatype="Real" />
          <Member Name="SCALE_MAX" Datatype="Real" />
          <Member Name="SCALE_UNITS" Datatype="String[20]" />
          <Member Name="SCALE_DESC" Datatype="String[60]" />
          <Member Name="___________0030_0" Datatype="Bool" />
          <Member Name="___________0030_1" Datatype="Bool" />
          <Member Name="LIMIT_UNDER" Datatype="Real" />
          <Member Name="LIMIT_OVER" Datatype="Real" />
          <Member Name="___________0040_0" Datatype="Bool" />
          <Member Name="___________0040_1" Datatype="Bool" />
          <Member Name="USER_INFO_1" Datatype="String[60]" />
          <Member Name="USER_INFO_2" Datatype="String[60]" />
          <Member Name="USER_INFO_3" Datatype="String[60]" />
          <Member Name="USER_INFO_4" Datatype="String[60]" />
          <Member Name="USER_INFO_5" Datatype="String[60]" />
        </Section>
      </Sections>
    </Member>
    <Member Name="EXT_FAULT" Datatype="Bool" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Instrument External Fault (1 = Fault, 0 = Healthy)</MultiLanguageText>
      </Comment>
    </Member>
  </Section>
  <Section Name="Output" />
  <Section Name="InOut">
    <Member Name="STATIC_DATA" Datatype="&quot;UT02001_St_InstAnalogRead&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Static data storage (UDT)</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Int" />
          <Member Name="___________0010_1" Datatype="Int" />
          <Member Name="CONFIG_ALM_H_EN" Datatype="Bool" />
          <Member Name="CONFIG_ALM_L_EN" Datatype="Bool" />
          <Member Name="CONFIG_WRN_H_EN" Datatype="Bool" />
          <Member Name="CONFIG_WRN_L_EN" Datatype="Bool" />
          <Member Name="CONFIG_FP_DIS" Datatype="Bool" />
          <Member Name="CONFIG_SIM_DIS" Datatype="Bool" />
          <Member Name="CONFIG_RL_EN" Datatype="Bool" />
          <Member Name="___________0020_0" Datatype="Int" />
          <Member Name="___________0020_1" Datatype="Int" />
          <Member Name="USER_AI_RAW_DATA" Datatype="&quot;UT00801_St_ConstAiRawData&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
                  <Sections>
                    <Section Name="None">
                      <Member Name="REV_BLOCK" Datatype="String[7]" />
                      <Member Name="REV_NUMBER" Datatype="String[20]" />
                      <Member Name="REV_DATE" Datatype="String[10]" />
                      <Member Name="REV_AUTHOR" Datatype="String[20]" />
                    </Section>
                  </Sections>
                </Member>
                <Member Name="___________0010_0" Datatype="Bool" />
                <Member Name="___________0010_1" Datatype="Bool" />
                <Member Name="AI_CODE" Datatype="UInt" />
                <Member Name="___________0020_0" Datatype="Bool" />
                <Member Name="___________0020_1" Datatype="Bool" />
                <Member Name="RAW_MIN" Datatype="Int" />
                <Member Name="RAW_MAX" Datatype="Int" />
                <Member Name="RAW_DESC" Datatype="String[60]" />
                <Member Name="___________0030_1" Datatype="Bool" />
                <Member Name="___________0030_2" Datatype="Bool" />
                <Member Name="PARAM_TYPE" Datatype="Byte" />
                <Member Name="PARAM_RANGE" Datatype="Byte" />
                <Member Name="PARAM_COEF" Datatype="Byte" />
                <Member Name="___________0040_1" Datatype="Bool" />
                <Member Name="___________0040_2" Datatype="Bool" />
                <Member Name="VALUE_COEF" Datatype="Real" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0030_0" Datatype="Int" />
          <Member Name="___________0030_1" Datatype="Int" />
          <Member Name="SP_ALM_H_VAL" Datatype="Real" />
          <Member Name="SP_ALM_L_VAL" Datatype="Real" />
          <Member Name="SP_WRN_H_VAL" Datatype="Real" />
          <Member Name="SP_WRN_L_VAL" Datatype="Real" />
          <Member Name="SP_ALM_H_HYST_VAL" Datatype="Real" />
          <Member Name="SP_ALM_L_HYST_VAL" Datatype="Real" />
          <Member Name="SP_WRN_H_HYST_VAL" Datatype="Real" />
          <Member Name="SP_WRN_L_HYST_VAL" Datatype="Real" />
          <Member Name="___________0040_1" Datatype="Int" />
          <Member Name="___________0040_0" Datatype="Int" />
          <Member Name="TIME_ALM_H_ON_DEL" Datatype="Real" />
          <Member Name="TIME_ALM_L_ON_DEL" Datatype="Real" />
          <Member Name="TIME_WRN_H_ON_DEL" Datatype="Real" />
          <Member Name="TIME_WRN_L_ON_DEL" Datatype="Real" />
          <Member Name="TIME_ALM_H_OFF_DEL" Datatype="Real" />
          <Member Name="TIME_ALM_L_OFF_DEL" Datatype="Real" />
          <Member Name="TIME_WRN_H_OFF_DEL" Datatype="Real" />
          <Member Name="TIME_WRN_L_OFF_DEL" Datatype="Real" />
        </Section>
      </Sections>
    </Member>
    <Member Name="DYNAMIC_DATA" Datatype="&quot;UT22001_Dy_InstAnalogRead&quot;" Accessibility="Public">
      <Comment>
        <MultiLanguageText Lang="en-US">Dynamic data storage (UDT)</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="REV_BLOCK" Datatype="String[7]" />
                <Member Name="REV_NUMBER" Datatype="String[20]" />
                <Member Name="REV_DATE" Datatype="String[10]" />
                <Member Name="REV_AUTHOR" Datatype="String[20]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0010_0" Datatype="Int" />
          <Member Name="___________0010_1" Datatype="Int" />
          <Member Name="status_ConfigError" Datatype="Bool" />
          <Member Name="status_Alm_H" Datatype="Bool" />
          <Member Name="status_Alm_L" Datatype="Bool" />
          <Member Name="status_Wrn_H" Datatype="Bool" />
          <Member Name="status_Wrn_L" Datatype="Bool" />
          <Member Name="status_Alm_H_Mask" Datatype="Bool" />
          <Member Name="status_Alm_L_Mask" Datatype="Bool" />
          <Member Name="status_Wrn_H_Mask" Datatype="Bool" />
          <Member Name="status_Wrn_L_Mask" Datatype="Bool" />
          <Member Name="status_Alm_H_Dis" Datatype="Bool" />
          <Member Name="status_Alm_L_Dis" Datatype="Bool" />
          <Member Name="status_Wrn_H_Dis" Datatype="Bool" />
          <Member Name="status_Wrn_L_Dis" Datatype="Bool" />
          <Member Name="status_Fault" Datatype="Bool" />
          <Member Name="status_SimOn" Datatype="Bool" />
          <Member Name="status_RemoteOn" Datatype="Bool" />
          <Member Name="status_LocalOn" Datatype="Bool" />
          <Member Name="status_RLOff" Datatype="Bool" />
          <Member Name="___________00200_0" Datatype="Int" />
          <Member Name="___________0020_2" Datatype="Int" />
          <Member Name="mode_Alm_H_MaskOn" Datatype="Bool" />
          <Member Name="mode_Alm_L_MaskOn" Datatype="Bool" />
          <Member Name="mode_Wrn_H_MaskOn" Datatype="Bool" />
          <Member Name="mode_Wrn_L_MaskOn" Datatype="Bool" />
          <Member Name="mode_SimOn" Datatype="Bool" />
          <Member Name="mode_SimValue" Datatype="Real" />
          <Member Name="mode_RemoteOn" Datatype="Bool" />
          <Member Name="mode_LocalOn" Datatype="Bool" />
          <Member Name="___________0030_0" Datatype="Int" />
          <Member Name="___________0030_1" Datatype="Int" />
          <Member Name="msg_Alm_H" Datatype="Bool" />
          <Member Name="msg_Alm_L" Datatype="Bool" />
          <Member Name="msg_Wrn_H" Datatype="Bool" />
          <Member Name="msg_Wrn_L" Datatype="Bool" />
          <Member Name="msg_Flt_External" Datatype="Bool" />
          <Member Name="msg_Flt_OverRange" Datatype="Bool" />
          <Member Name="msg_Flt_UnderRange" Datatype="Bool" />
          <Member Name="msg_Flt_OutOfRange" Datatype="Bool" />
          <Member Name="___________0040_0" Datatype="Int" />
          <Member Name="___________0040_1" Datatype="Int" />
          <Member Name="batch_ID" Datatype="UInt" />
          <Member Name="___________0050_0" Datatype="Int" />
          <Member Name="___________0050_1" Datatype="Int" />
          <Member Name="actual_Value" Datatype="Real" />
          <Member Name="actual_Alm_H_Timer" Datatype="Real" />
          <Member Name="actual_Alm_L_Timer" Datatype="Real" />
          <Member Name="actual_Wrn_H_Timer" Datatype="Real" />
          <Member Name="actual_Wrn_L_Timer" Datatype="Real" />
          <Member Name="actual_AiRawData" Datatype="&quot;UT00801_St_ConstAiRawData&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
                  <Sections>
                    <Section Name="None">
                      <Member Name="REV_BLOCK" Datatype="String[7]" />
                      <Member Name="REV_NUMBER" Datatype="String[20]" />
                      <Member Name="REV_DATE" Datatype="String[10]" />
                      <Member Name="REV_AUTHOR" Datatype="String[20]" />
                    </Section>
                  </Sections>
                </Member>
                <Member Name="___________0010_0" Datatype="Bool" />
                <Member Name="___________0010_1" Datatype="Bool" />
                <Member Name="AI_CODE" Datatype="UInt" />
                <Member Name="___________0020_0" Datatype="Bool" />
                <Member Name="___________0020_1" Datatype="Bool" />
                <Member Name="RAW_MIN" Datatype="Int" />
                <Member Name="RAW_MAX" Datatype="Int" />
                <Member Name="RAW_DESC" Datatype="String[60]" />
                <Member Name="___________0030_1" Datatype="Bool" />
                <Member Name="___________0030_2" Datatype="Bool" />
                <Member Name="PARAM_TYPE" Datatype="Byte" />
                <Member Name="PARAM_RANGE" Datatype="Byte" />
                <Member Name="PARAM_COEF" Datatype="Byte" />
                <Member Name="___________0040_1" Datatype="Bool" />
                <Member Name="___________0040_2" Datatype="Bool" />
                <Member Name="VALUE_COEF" Datatype="Real" />
              </Section>
            </Sections>
          </Member>
          <Member Name="actual_AiScaleData" Datatype="&quot;UT00851_Sy_ConstAiScaleData&quot;">
            <Sections>
              <Section Name="None">
                <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
                  <Sections>
                    <Section Name="None">
                      <Member Name="REV_BLOCK" Datatype="String[7]" />
                      <Member Name="REV_NUMBER" Datatype="String[20]" />
                      <Member Name="REV_DATE" Datatype="String[10]" />
                      <Member Name="REV_AUTHOR" Datatype="String[20]" />
                    </Section>
                  </Sections>
                </Member>
                <Member Name="___________0010_0" Datatype="Bool" />
                <Member Name="___________0010_1" Datatype="Bool" />
                <Member Name="AI_TAG" Datatype="String[20]" />
                <Member Name="___________0020_0" Datatype="Bool" />
                <Member Name="___________0020_1" Datatype="Bool" />
                <Member Name="SCALE_MIN" Datatype="Real" />
                <Member Name="SCALE_MAX" Datatype="Real" />
                <Member Name="SCALE_UNITS" Datatype="String[20]" />
                <Member Name="SCALE_DESC" Datatype="String[60]" />
                <Member Name="___________0030_0" Datatype="Bool" />
                <Member Name="___________0030_1" Datatype="Bool" />
                <Member Name="LIMIT_UNDER" Datatype="Real" />
                <Member Name="LIMIT_OVER" Datatype="Real" />
                <Member Name="___________0040_0" Datatype="Bool" />
                <Member Name="___________0040_1" Datatype="Bool" />
                <Member Name="USER_INFO_1" Datatype="String[60]" />
                <Member Name="USER_INFO_2" Datatype="String[60]" />
                <Member Name="USER_INFO_3" Datatype="String[60]" />
                <Member Name="USER_INFO_4" Datatype="String[60]" />
                <Member Name="USER_INFO_5" Datatype="String[60]" />
              </Section>
            </Sections>
          </Member>
          <Member Name="___________0090_0" Datatype="Int" />
          <Member Name="___________0090_1" Datatype="Int" />
          <Member Name="$pret_AlmHEn" Datatype="Bool" />
          <Member Name="$Pret_AlmLEn" Datatype="Bool" />
          <Member Name="$pret_WrnHEn" Datatype="Bool" />
          <Member Name="$pret_WrnLEn" Datatype="Bool" />
        </Section>
      </Sections>
    </Member>
  </Section>
  <Section Name="Temp">
    <Member Name="revInfo" Datatype="&quot;UT01000_St_SysRevision&quot;">
      <Comment>
        <MultiLanguageText Lang="en-US">Revision information for this block</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="REV_BLOCK" Datatype="String[7]" />
          <Member Name="REV_NUMBER" Datatype="String[20]" />
          <Member Name="REV_DATE" Datatype="String[10]" />
          <Member Name="REV_AUTHOR" Datatype="String[20]" />
        </Section>
      </Sections>
    </Member>
    <Member Name="licInfo" Datatype="&quot;UT01001_St_SysLicence&quot;">
      <Comment>
        <MultiLanguageText Lang="en-US">Licence information for this block</MultiLanguageText>
      </Comment>
      <Sections>
        <Section Name="None">
          <Member Name="LICENCE_TYPE" Datatype="String[20]" />
          <Member Name="COPYRIGHT" Datatype="String[30]" />
        </Section>
      </Sections>
    </Member>
    <Member Name="wrkAlmHEn" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working storage (Alm_H is enabled and not masked)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkAlmLEn" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working storage (Alm_L is enabled and not masked)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkWrnHEn" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working storage (Wrn_H is enabled and not masked)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkWrnLEn" Datatype="Bool">
      <Comment>
        <MultiLanguageText Lang="en-US">Working storage (Wrn_L is enabled and not masked)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="calPart1" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Scale value calculation part 1 (RAW_ANALOG − RAW_MIN)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="calPart2" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Scale value calculation part 2 (SCALE_MAX − SCALE_MIN)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="calPart3" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Scale value calculation part 1 (RAW_MAX − RAW_MIN)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="calHystAbs" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Absolute Hysteresis (in relation to alarm/warning)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkHyst" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Working hysteresis value</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkInt" Datatype="Int">
      <Comment>
        <MultiLanguageText Lang="en-US">Working storage (Integer)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkReal" Datatype="Real">
      <Comment>
        <MultiLanguageText Lang="en-US">Working storage (real)</MultiLanguageText>
      </Comment>
    </Member>
    <Member Name="wrkDInt" Datatype="DInt">
      <Comment>
        <MultiLanguageText Lang="en-US">Working storage (Double integer)</MultiLanguageText>
      </Comment>
    </Member>
  </Section>
  <Section Name="Constant" />
  <Section Name="Return">
    <Member Name="Ret_Val" Datatype="Void" Accessibility="Public" />
  </Section>
</Sections></Interface>
      <IsIECCheckEnabled>true</IsIECCheckEnabled>
      <MemoryLayout>Optimized</MemoryLayout>
      <Name>FC02001_StdInstAnalogRead</Name>
      <Number>2001</Number>
      <ProgrammingLanguage>LAD</ProgrammingLanguage>
      <SetENOAutomatically>false</SetENOAutomatically>
      <UDABlockProperties />
      <UDAEnableTagReadback>false</UDAEnableTagReadback>
    </AttributeList>
    <ObjectList>
      <MultilingualText ID="1" CompositionName="Comment">
        <ObjectList>
          <MultilingualTextItem ID="2" CompositionName="Items">
            <AttributeList>
              <Culture>en-US</Culture>
              <Text>
PRACTICAL SERIES AUTOMATION LIBRARY (PAL)   —   COPYRIGHT 2020 – M. GLEDHILL (MIT LICENCE)
                  ———— ◆ ————
FULL ONLINE DOCUMENTATION IS AVAILABLE AT: https://practicalseries.com/2001-pal/index.html</Text>
            </AttributeList>
          </MultilingualTextItem>
        </ObjectList>
      </MultilingualText>
      <SW.Blocks.CompileUnit ID="3" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="4" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="5" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄  ＳＴＡＮＤＡＲＤ  ▄▄ 


TITLE:    INSTRUMENTATION — ANALOG INSTRUMENT READ, SCALE AND MONITOR


▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 

┌──────────────────────────────────────────┐
│                                          │
│          FC02001 — SOFTWARE MODULE DESIGN SPECIFICATION (SMDS)            │
│                                          │
│      The PDF version of the SMDS for this module is available online here:        │
│              https://psop.uk/pal-smds-fc02001-p               │
│                                          │
│      It is also available as part of the Project User Defined Documentation,      │
│      it can be accessed by selecting this module in the Project Tree          │
│      (on the left) and pressing SHIFT+F1                        │
│                                          │
└─────────────────────────────────────── ʷᴵᴰ⁻ᵈʰᵐ ┘

FC02001_StdInstAnalogRead reads and scales an analog instrument signal received via 
an analog input card.

The resultant scaled value is a real (floating point) number that matches the calibrated range of 
the instrument in engineering units.

The block has the facility to generate up to four alarms and warnings whenever the signal is 
beyond a specific setpoint value (either above or below); the four signals are:

   •   Alarm high

   •   Warning high

   •   Warning low

   •   Alarm low

Each alarm or warning can be time filtered (the condition must be present for a preset time 
before the alarm or warning is activated) and each will automatically reset when the signal is 
back within the acceptable range by a hysteresis amount.

In addition to the above four signals, various out-of-range fault signals will be generated if the 
instrument is outside its normal calibrated range by more than a specified percentage (this 
being a percentage of the total span of the instruments range).

The block can also generate an optional “external fault” signal from a hardwired fault input from 
the instrument itself.

The block has a simulation mode whereby the scaled value is replaced by an operator selected 
value (over-writing any signal from the instrument). This can be used for testing purposes or if 
the instrument is out of service for any reason.





▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
1.     BLOCK TECHNICAL SUMMARY


 ――――――――――――――――――――――――――――――――――――――――――
 NOMENCLATURE &amp; ADDRESSING
 ――――――――――――――――――――――――――――――――――――――――――
 BLOCK TITLE         Analog Instrument Read, Scale and Alarm Monitoring
 BLOCK FUNCTION GROUP    Instrument 
 BLOCK ADDRESS       FC02001
 BLOCK SYMBOL        FC02001_StdInstAnalogRead
 BLOCK USER ID         StdInstAnalogRead

 ――――――――――――――――――――――――――――――――――――――――――
 BLOCK TYPE &amp; USAGE
 ――――――――――――――――――――――――――――――――――――――――――
 BLOCK TYPE         Function (FC)
 BLOCK NUMBER        02001
 LANGUAGE           LAD
 OPTIMISED ACCESS     Yes
 PAL USAGE TYPE       Standard block

 ――――――――――――――――――――――――――――――――――――――――――
 METRICS
 ――――――――――――――――――――――――――――――――――――――――――
 EXECUTION TIME       87.7 μs¹
 LOAD MEMORY       93.0 kB
 WORK MEMORY           2.2 kB  
 ――――――――――――――――――――――――――――――――――――――――――
               ¹ Measured on: CPU-1515-2PN (order no. 6ES7512-2AM02-0AB0) 
                            https://psop.uk/pal-ds-cpu1515



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
1.1      Additional document references


In addition to the documents referenced in OB1 (section DOCUMENT REFERENCES), the 
following documents are associated with this module:


 ――――――――――――――――――――――――――――――――――――――――――
 REF.     DOCUMENT NO.       TITLE
 ――――――――――――――――――――――――――――――――――――――――――
 101  PS2001-5-2312-db00801   DB00801 (analog input raw data) SMDS
 102  PS2001-5-2312-db00851   DB00851 (analog input scale data) SMDS
 ――――――――――――――――――――――――――――――――――――――――――

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━


▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
2.     FUNCTIONAL DESCRIPTION


This block is a comprehensive block designed to read and scale an analog instrument; it 
provides the following broad functions:

   •   Read an analog input, convert it to a real number that represents the calibrated 
     range of the instrument in engineering units

   •   Generate high and low alarm and warning signals to indicate that the instrument is 
     above or below specific thresholds

   •   Generate fault signals if the instrument is out of range or is indicating a specific fault 
     condition

   •   Provide simulation capabilities for testing and fault handling situations

   •   Generates the status and message signals necessary for symbolic representation at 
     a supervisory system (SCADA or HMI)



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.1     Read and scale and instrument signal


The principal function of the block is to read a raw integer signal from an analog instrument 
(in the form of an input word, IW), and convert it into a scaled, floating point (real) number that 
reflects the calibrated reading of the instrument in question.

For example, if a flow meter with a calibrated range of -100 l/s to +100 l/s provided a 4-20 mA 
signal to the PLC, then 4 mA would represent -100 l/s and 20 mA would represent +100 l/s.

A typical 4-20 mA analog input signal returns a raw value of 0 at 4 mA and 27648 at 20 mA. 

The block would return scaled values as follows (it would also return every value in between; five 
typical values have been shown):


 ――――――――――――――――――――――――――――――――――――――――――
 RAW_SIGNAL          RAW INTEGER VALUE        RETURNED SCALE VALUE
 ――――――――――――――――――――――――――――――――――――――――――
    4 mA                      0             -100 l/s
    8 mA               6912                   -50 l/s
  12 mA             13824                   0 l/s
  16 mA             20736              +50 l/s
  20 mA             27648            +100 l/s
 ――――――――――――――――――――――――――――――――――――――――――



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.2     Alarms and warnings


The block provides four alarm/warning signals:


 ――――――――――――――――――――――――――――――――――――――――――
 ALARM/WARNING         FUNCTION
 ――――――――――――――――――――――――――――――――――――――――――
 Alarm high            Scaled signal is equal to or above a preset alarm high 
               threshold (setpoint)

 Warning high           Scaled signal is equal to or above a preset warning high
               threshold (setpoint)

 Warning low          Scaled signal is equal to or above a preset warning low
               threshold (setpoint)

 Alarm low              Scaled signal is equal to or above a preset alarm low
               threshold (setpoint)
 ――――――――――――――――――――――――――――――――――――――――――


Alarms and warnings are individually enabled and are individually configurable.

Each alarm or warning has a threshold value (the value at which it becomes active); high alarms 
and warnings are active when the instrument is at or above the threshold level, low alarms and 
warnings are active when the instrument is at or below the threshold level. 

Each alarm or warning also has a hysteresis value (the instrument must be inside the threshold 
value by at least the hysteresis amount before the alarm/warning is reset).

Alarms and warnings automatically reset once the instrument is inside the threshold value by at 
least the hysteresis value.

Each alarm or warning is equipped with on and off time filtering (to prevent nuisance triggering 
of alarms and warnings) where:

ON FILTERING:  Delays the activation of the alarm/warning (signal must
         be on for a time period before the block conditioned 
         signal is activated).

OFF FILTERING:    Delays the alarm/warning from going off (i.e. the 
         conditioned signal will remain on for a time period
         once the input is reset).

Each alarm and warning has its own configurable on and off filtering delays.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.3     Fault signals


The block is able to generate four fault signals:

   •   External fault
   •   Instrument is over-range
   •   Instrument is under-range
   •   Instrument is out-of-range (common signal)

The external fault is generated by a hardwired signal from the instrument that indicates the 
instrument itself is reporting a fault. External fault signals are common with certain types of 
instruments (mass flow meters &amp;c.) and are used to indicate such things as medium not present 
(liquid flow meters) or calibration and maintenance issues (instrument requires calibrating or 
cleaning or some other form of servicing).

Over-range and under-range faults are generated if the instrument is reading outside its normal 
calibrated range. Over-range if the instrument is reading higher than its maximum permitted 
value and under-range if lower than its minimum permitted value.

The levels at which the instrument is considered to be either over-range or under-range 
(out-of-range), are set as a configurable values passed to the module.

The out-of-range fault signal is a common signal that activates if either the over-range or 
under-range signal is active. It indicates the instrument is either over-range or under-range, 
but doesn’t specify which.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
2.4     Operating modes


The block supports the following optional modes of operation:

   •   Simulation mode (allows the operator to override the current instrument reading 
     with a simulated value)

   •   Remote/local/all selection (allows control of the instrument to be restricted to a 
     specific SCADA/HMI device) 

   •   Faceplate disabled (disables all optional modes)



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
2.4.1     Simulation mode


The instrument can be switched to a simulation mode, in which the actual reading from the 
instrument is replaced by a simulated value provided by the operator. Simulation mode can be 
used during testing and can also be applied in a process environment if a fault condition is 
detected within the instrument.

Simulation mode is a manual operation that can only be initiated by an operator.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
2.4.2     Remote/local/all mode


Remote and local operating modes refer to the device that has control of the instrument; where 
a plant has more than one SCADA/HMI, say a SCADA in a remote control room and a field 
mounted HMI local to the instrument, it is possible to restrict the control of the instrument to 
one, or the other, or both devices as follows:

   •   Remote Only the remote system in the control room can control the device

   •   Local     A local system has taken control of the device and the remote system can 
           no longer issue commands to it

   •    All    Any system can control the device

The default arrangement is for all system to have access to the device.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
2.4.3     Faceplate disabled mode


Prevents the supervisory system from displaying the faceplate from which the above options are 
selected. If the faceplate is disabled, this module will set remote/local mode to ALL and will 
disable simulation mode.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
2.5      Supervisory system interface


See the online documentation for this block — select the block in the project tree and press:
     SHIFT + F1 or follow the link: https://psop.uk/pal-smds-fc02001-p 

The supervisory system interface is available in sections 2.5 and 4 of the online SMDS 
document.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
3.     DETAILED BLOCK DESCRIPTION


This block, FC02001_StdInstAnalogRead uses user data types (UDTs)to provide the primary 
interface to the block. There are five formal parameters: 


 ――――――――――――――――――――――――――――――――――――――――――
 PARAM         FUNCTION                      TYPE      IN-OUT 
 ――――――――――――――――――――――――――――――――――――――――――
 SYS_SIGNALS      Common system signals                UT21000    In
          logic and timing signals for parametric access

 AI_RAW_SIGNAL      The unscaled analog input (input word          Word     In
          address for the IO card to which the instrument 
          is connected)

 AI_RAW_DATA      Analog input signal configuration data (type,     UT00801    In
          range, descriptions card parameters and 
          coefficients)

 AI_SCALE_DATA     Analog input signal scaled value data (instrument   UT00851   In
          tag, range, descriptions and engineering units)

 EXT_FAULT     Optional external fault signal for the instrument     Bool      In
          (1 = fault, 0 = healthy). If not required, set 
          permanently to _False

 STATIC_DATA     Data structure that holds the configuration data    UT02001    In
          for the instrument (raw range, scaled range 
          alarm and warning values, filtering times, 
          hysteresis values &amp;c.)

 DYNAMIC_DATA      Data structure that holds the live data for the      UT22001    InOut
          instrument (its reading in engineering units, 
          any alarms or warnings that may be active, 
          current timer values, selected operating 
          mode &amp;c.)
 ――――――――――――――――――――――――――――――――――――――――――


AI_RAW_SIGNAL and EXT_FAULT are signals provided directly from the instrument itself (via 
input cards). The AI_RAW_DATA and AI_SCALE_DATA parameters are UDTs that hold information 
about the nature of the AI_RAW_SIGNAL, in the case of AI_RAW_DATA it specifies the input type: 
voltage, current &amp;c., its range in integer values and various parametric information and a 
textual description of the signal. In the case of AI_SCALE_DATA it specifies the scaled range of 
the signal, its engineering units, out-of-range values, a textual description of the instrument 
and the instrument tag itself.


 ――――――――――――――――――――――――――――――――――――――――――
 PARAM         ASSOCIATED UDT            ASSOCIATED DATA BLOCK
 ――――――――――――――――――――――――――――――――――――――――――
 AI_RAW_DATA      UT00801_St_ConstAiRawData       DB00801_St_ConstAiRawData
 AI_SCALE_DATA     UT00851_St_ConstAiScaleData       DB00851_St_ConstAiScaleData
 ――――――――――――――――――――――――――――――――――――――――――

Section 3.1.1 contains a full description of the AI_RAW_DATA and AI_SCALE_DATA parameters.

The other two parameters: STATIC_DATA and DYNAMIC_DATA are UDTs that hold (respectively) 
the configuration information and the live data for the instrument.


 ――――――――――――――――――――――――――――――――――――――――――
 PARAM         ASSOCIATED UDT            ASSOCIATED DATA BLOCK
 ――――――――――――――――――――――――――――――――――――――――――
 STATIC_DATA     UT02001_St_InstAnalogRead     DB02001_St_InstAnalogRead
 DYNAMIC_DATA      UT22001_Dy_InstAnalogRead       DB22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――

Section 6 contains a full list of all variables within these UDTs.

This arrangement conforms with the PAL philosophy whereby IO card connections have unique 
formal parameters; all remaining signals are passed as variables within UDTs.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.1     Converting the raw instrument signal to a scaled value


The AI_RAW_SIGNAL is the raw instrument signal received from an analog input card; this has 
specific ranges depending on the type of IO card and the type of signal in use.
 
Note:    It is assumed that the instrument has a linear response.

The following table shows example ranges for the AI_RAW_SIGNAL signal:

 ―――――――――――――――――――――――――――――――――――――――――― 
            LOWER LIMIT    EQUIVALENT UPPER LIMIT   EQUIVALENT
 SIGNAL TYPE      (RAW_MIN)         TO    (RAW_MAX)       TO      
 ―――――――――――――――――――――――――――――――――――――――――― 
 -10 V to 10 V         -27648     -10 V        27648      +10 V      
 1 V to 5 V          0      +1 V        27648     +5 V      
 -20 mA to 20 mA       -27648     -20 mA    27648      +20 mA      
 0 mA to 20 mA         0        0 mA    27648      +20 mA      
 4 mA to 20 mA (2w)      0        4 mA    27648      +20 mA      
 4 mA to 20 mA (4w)      0        4 mA    27648      +20 mA      
 RTD 150 Ω            0        0 Ω       27648      150 Ω      
 RTD 300 Ω            0        0 Ω       27648      300 Ω      
 PT x00           -2000       200.0°C      8500      850.0°C     
 Ni x00          -600     -60.0°C        250      250.0°C     
 Type B thermocouple     -2100      -210.0°C      12000    1200.0°C     
 Type K thermocouple     -2700      -270.0°C      13720    1372.0°C     
 ――――――――――――――――――――――――――――――――――――――――――
 Input ranges for typical instrument types (resistance thermometers and thermocouples)


The RAW_MIN and the RAW_MAX values in the above tables are the numerical values for the 
instrument range; the appropriate values are supplied as the RAW_MIN and RAW_MAX variables 
provided in the UDT of parameter AI_RAW_DATA. (see § 3.1.1 for a full description).
	

The corresponding values for the scaled instrument signal are similarly provided by the 
SCALE_MIN and SCALE_MAX values provided in the UDT of parameter AI_SCALE_DATA. 
(see § 3.1.1 for a full description).

Thus, if a flow meter with a calibrated range of –100 l/s to +100 l/s provided a 4-20 mA signal 
to the PLC, 


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                   VALUE
 ――――――――――――――――――――――――――――――――――――――――――
 AI_RAW_DATA.RAW_MIN     RANGE — Minimum value of the raw analog      0
                    signal (at the card)
 AI_RAW_DATA.RAW_MAX    RANGE — Maximum value of the raw analog        27648
                    signal (at the card)
 AI_SCALE_DATA.SCALE_MIN   RANGE — Minimum value of the scaled analog       -100 l/s
                    signal [engineering units]
 AI_SCALE_DATA.SCALE_MAX  RANGE — Maximum value of the scaled analog      +100 l/s
                    signal [engineering units]
 ――――――――――――――――――――――――――――――――――――――――――

The scaled value is stored in the DATA_DYNAMIC structure in the following variable:


 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 actual_Value          ACTUAL — SCALED INSTRUMENT VALUE         Real
                     [engineering units]
 ――――――――――――――――――――――――――――――――――――――――――


The scaled value (actual_Value) is calculated as follows:


┌───────────────────────────────────────────┐
│                              (AI_RAW_SIGNAL ─ RAW_MIN) ╳ (SCALE_MAX ─ SCALE_MIN)          │
│actual_Value =  ――――――――――――――――――――――――――――  ┼ SCALE_MIN    │
│                              (RAW_MAX ─ RAW_MIN)                      │
└─────────────────────────────────────  (3.1)  ───┘
Note:    RAW_MIN, RAW_MAX,  SCALE_MIN and SCALE_MAX are all preceded with RANGE_
     in the above equation 



           actual_Value
            ↑                    ⋰
           SCALE_MAX__│______________________________________⋰
            │                  ╱|
            │                 ╱ |     
            │                ╱  |
            │               ╱   |
            │              ╱    |
            │             ╱     |
            │            ╱      |
        actual_Value │&lt;- - - - - - - - - - - - - - - - - - - - - ╱       |
            │          ╱ ⌃           |
            │         ╱ ╎       |
            │        ╱  ╎       |
            │       ╱   ╎       |   
            │      ╱    ╎       |
            │     ╱     ╎       |
            │    ╱         ╎          |
            SCALE_MIN__│______╱          ╎          |
            │  ⋰|           ╎          |
            │ ⋰ |           ╎          |
            ┼─────────────────────────→ AI_RAW_SIGNAL
                  |           ╎           |
               RAW_MIN        ╎        RAW_MAX
                      AI_RAW_SIGNAL

           Linear relationship between AI_RAW_SIGNAL and actual_Value



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.1.1     Using AI_RAW_DATA and AI_SCALE_DATA


▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
The AI_RAW_DATA parameter

The parameter AI_RAW_DATA is used to pass the analog input card type, range, description and
coefficient data used by all analog input card channels. Data is supplied to this parameter using
DB00801_St_ConstAiRawData, this contains a formal set of data for every type of Siemens 
analog input (datasets), E.g.: for a 4-wire 4-20 mA signal it is:

 AI_RAW_2003     "UT00801_St_ConstAiRawData" AI Current - 4-wire (4 mA to 20 mA)
  revInfo          "UT01000_St_SysRevision"
  ___________0010_0  Bool     false	 
  ___________0010_1  Bool     false
  AI_CODE       UInt      16#2003
  ___________0020_0  Bool     false
  ___________0020_1  Bool     false
  RAW_MIN          Int        0
  RAW_MAX         Int        27648
  RAW_DESC       String[60]    'Current - 4-wire (4 mA to 20 mA)'
  ___________0030_1  Bool     false
  ___________0030_2  Bool     false
  PARAM_TYPE       Byte        16#02
  PARAM_RANGE      Byte        16#03
  PARAM_COEF        Byte        16#00
  ___________0040_1  Bool     false
  ___________0040_2  Bool     false
  VALUE_COEF        Real        0.0

A full description of DB00801_St_ConstAiRawData and its associated datasets is given in 
[Ref. 101].

The whole dataset provided to the module via AI_RAW_DATA is copied to the DYNAMIC_DATA 
structure in the following variable:


 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 actual_AiRawData       ACTUAL — A copy of the analog input AI_RAW_DATA     UT00801
                     parameter information
 ――――――――――――――――――――――――――――――――――――――――――

The primary in formation needed by the module are maximum and minimum ranges for the 
input signal, this information is given in in the DYNAMIC_DATA variables:


 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME           FUNCTION                    TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 actual_AiRawData.RAW_MIN   ACTUAL — Minimum value of the analog input      Int
                      range being used by the module
 actual_AiRawData.RAW_MAX  ACTUAL — Maximum value of the analog input      Int
                      range being used by the module
 ――――――――――――――――――――――――――――――――――――――――――

These are the RAW_MIN and RAW_MAX values used in (3.1).



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
The AI_SCALE_DATA parameter


The AI_SCALE_DATA parameter is similar to the AI_RAW_DATA parameter except that in this case
it holds the scaled range, instrument tag, signal description and as-sociated engineering unit 
information. Data is supplied to this parameter using DB00851_St_ConstAiScaleData, this 
contains a set of data each instrument configured for the project, each instrument being a 
dataset. E.g.

 AI_SCALE_FC001   "UT00851_Sy_ConstAiScaleData"	
  revInfo        "UT01000_St_SysRevision"	
  ___________0010_0  Bool     false
  ___________0010_1  Bool     false
  AI_TAG           String[20]    'FC001'
  ___________0020_0  Bool     false
  ___________0020_1  Bool     false
  SCALE_MIN         Real        0.0
  SCALE_MAX        Real        1000.0
  SCALE_UNITS     String[20]    'l/s'
  SCALE_DESC      String[60]    'Inlet flow (0 to 1000 l/s)'
  ___________0030_0  Bool     false
  ___________0030_1  Bool     false
  USER_INFO_1       String[60]    'Instrument Manufacturer: Siemens'
  USER_INFO_2       String[60]    'Instrument Mode: Sitrans FM 5000'
  USER_INFO_3       String[60]    'Instrument Part No.: MAG5000'
  USER_INFO_4       String[60]    ''
  USER_INFO_5       String[60]    ''


A full description of DB00851_St_ConstAiScaleData and its application is given in [Ref. 102].

The whole dataset provided to the module via AI_SCALE_DATA is copied to the DYNAMIC_DATA 
structure in the following variable:

 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                      TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 actual_AiScaleData       ACTUAL — A copy of the analog input AI_SCALE_DATA  UT00851
                     parameter information
 ――――――――――――――――――――――――――――――――――――――――――

The primary in formation needed by the module are maximum and minimum ranges for the 
scaled signal, this information is given in in the DYNAMIC_DATA variables


 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME            FUNCTION                    TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 actual_AiScaleData.SCALE_MIN   ACTUAL — Minimum value of the analog input      Int
                       range being used by the module
 actual_AiScaleData.SCALE_MAX  ACTUAL — Maximum value of the analog input      Int
                       range being used by the module
 ――――――――――――――――――――――――――――――――――――――――――

These are the SCALE_MIN and SCALE_MAX values used in (3.1).

Additionally, the instrument tag is contained in the variable (copied from the parameter 
AI_SCALE_DATA): 

 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME            FUNCTION                    TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 actual_AiScaleData.AI_TAG     ACTUAL — Tag name of instrument        String[20]
 ――――――――――――――――――――――――――――――――――――――――――




▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
User defined analog signal types


DB00801_St_ConstAiRawData contains a full set of analog card input ranges available to all 
Siemens Simatic analog input cards. However, if some non-Simatic card is being used 
(i.e. a third-party card that may have a Profinet or ProfiBus inter-face) it may be necessary to 
configure a user defined signal type.

User defined signal types are specified in the STATIC_DATA parameter, UDT variable 
USER_AI_RAW_DATA. This data will be used in place of any AI_RAW_DATA parameter in all 
calculations within the block, if and only if, the AI_RAW_DATA pa-rameter is set to dataset 
AI_RAW_0000 (identified by the AI_RAW_DATA.AI_CODE value being set to zero).

Under normal circumstances, the DYNAMIC_DATA variable actual_AiRawData is set to match 
the AI configuration supplied in the parameter AI_RAW_DATA. If, however, AI_RAW_DATA is set to 
dataset AI_RAW_0000 (identified by the AI_RAW_DATA.AI_CODE value being set to zero), then the 
data supplied in thee STATIC_DATA UDT variable STATIC_DATA.USER_AI_RAW_DATA is copied into 
the DYNAMIC_DATA variable actual_AiRawData.

In either case, the DYNAMIC_DATA variable actual_AiRawData always contains the configuration 
that is in use.

The STATIC_DATA parameter, UDT variable USER_AI_RAW_DATA is of UDT type 
UT00801_St_ConstAiRawData and contains all the same variables as the AI_RAW_DATA 
parameter. In the case of user defined signal types, the following variables within 
STATIC_DATA.USER_AI_RAW_DATA are not used and should be set to zero:

 STATIC_DATA.USER_AI_RAW_DATA
 ―――――――――――――――――――――――――――――――――――――――――― 
 SIGNAL NAME          FUNCTION                     VALUE
 ――――――――――――――――――――――――――――――――――――――――――
 AI_CODE            A 16-bit hex value that uniquely identifies dataset   16#0000
              (it is the variable name of the dataset in DB00801)

 PARAM_TYPE         An 8-bit hex code that represents the input type    16#00
              See [Ref. 101]


 PARAM_RANGE        An 8-bit hex code that represents the input range    16#00
              See [Ref. 101]


 PARAM_COEF        An 8-bit hex code that represents a thermal        16#00
              coefficient (thermal resistance channels only, 
              otherwise set to 0). See [Ref. 101]


 VALUE_COEF        The actual value of the temperature coefficient in    0.0
              use (thermal resistance channels only)
 ―――――――――――――――――――――――――――――――――――――――――― 


The following parameters should contain the range information for the user defined signal type, 
along with a suitable description:


 UT00801_St_ConstAiRawData (full contents)
 ―――――――――――――――――――――――――――――――――――――――――― 
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 RAW_MIN         Minimum value of the raw analog signal        Int
              (at the card)

 RAW_MAX           Maximum value of the raw analog signal        Int

 RAW_DESC         Textual plain English description of the channel     String[60]
              type and range
 ―――――――――――――――――――――――――――――――――――――――――― 


████████████████████████████████████████████
█                                          █
█ STATIC_DATA.USER_AI_RAW_DATA values are only used if AI_RAW_DATA is set to the user      █
█ defined data set AI_RAW_0000 (i.e. AI_RAW_DATA.AI_CODE =16#0000).           █
█                                          █
████████████████████████████████████████████



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.1.2     Configuration errors


The block requires that both the raw and scale range signals conform to certain rules::

   1.  actual_AiRawData.RAW_MIN must be less than, and not equal to 
     actual_AiRawData.RAW_MAX 

   2.  actual_AiScaleData.SCALE_MIN must be less than, and not equal to  
     actual_AiScaleData.SCALE_MIN

Should either of these conditions not be met, the signal: status_ConfigError will be activated 
(set true), additionally the three out of range signals (see § 3.4.1):

     msg_Flt_OverRange
     msg_Flt_UnderRange
     msg_Flt_OutOfRange

will all be activated (this condition cannot be over-ridden by simulation mode, see § 3.4.1) and 
the actual_Value will be set to zero irrespective of any values given to AI_RAW_SIGNAL.

Note:    This avoids the potential for a divide by zero error: if the RAW_MIN and 
     RAW_MAX are exactly equal, the calculation of the actual_Value in 
     equation (3.1) would result in a divide by zero error. </Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="6" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="7" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Sections 1 to 3.1</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="8" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="9" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.2     Warnings and alarms


By default, the block generates 4 alarms and warnings (2 warnings and 2 alarms, 4 in total) 
as follows:


 ――――――――――――――――――――――――――――――――――――――――――
 ALARM / WARNING     FUNCTION
 ――――――――――――――――――――――――――――――――――――――――――
 Alarm high       Scaled signal is equal to or above a preset alarm high setpoint
 Warning high      Scaled signal is equal to or above a preset warning high setpoint
 Warning low     Scaled signal is equal to or below a preset warning low setpoint
 Alarm low      Scaled signal is equal to or below a preset alarm low setpoint
 ――――――――――――――――――――――――――――――――――――――――――
 Default alarm and warning signals


The active state of any alarm or warning is stored in the DYNAMIC_DATA structure in the following 
variables:


 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 msg_Alm_H         MESSAGE — Alarm - high alarm is active        Bool
 msg_Alm_L          MESSAGE — Alarm - low alarm is active          Bool
 msg_Wrn_H          MESSAGE — Warning - high warning is active      Bool
 msg_Wrn_L          MESSAGE — Warning - low warning is active        Bool
 ――――――――――――――――――――――――――――――――――――――――――


The alarms and warnings that end with _H are activated when the scaled instrument reading is 
greater than or equal to a setpoint threshold (i.e. activate when the measured quantity is too 
high; generally, if there is both an alarm high and a warning high, the convention within the PAL 
is that the warning should activate before the alarm².


The alarms and warnings that end with _L are activated when the scaled instrument reading is 
less than or equal to a setpoint threshold (i.e. activate when the measured quantity is too low; 
generally, if there is both an alarm low and a warning low, the convention within the PAL is that 
the warning should activate before the alarm².

――――――――――
²         This is just a convention, there is nothing to stop the warning being set to occur after 
     the alarm (i.e. the warning detecting the most extreme condition). All alarms and 
     warnings are entirely independent of each other and no error checking is carried 
     out to ensure that any particular threshold is above or below another.
――――――――――

All alarms and warnings are individually enabled (a disabled alarm or warning will never be 
activated), all alarms and warnings have individual setpoint values (the value at which the 
alarm or warning is triggered), all alarms and warnings have individual hysteresis valves 
(effectively a tolerance band, the difference between where an alarm activates and where it 
deactivates, used to prevent nuisance or “chattering” alarms). Finally, each alarm and warning 
has a configurable on and off delay (the alarm or warning will only activate if the reading is 
outside the threshold for the on-delay time and similarly will only deactivate when the reading 
is inside the threshold and hysteresis for the off-delay time).

The following table summarises all the available signals for each alarm and warning:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL          FUNCTION             TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_XXX_Y_EN    Alarm/warning enabled      Bool    1 = enabled, 0 = disabled
 SP_XXX_Y_VAL      Alarm/warning setpoint value    Real Engineering units
 SP_XXX_Y_HYST_VAL    Alarm/warning hysteresis value Real Engineering units
 TIME_XXX_Y_ON_DEL   Alarm/warning on delay time   Real In seconds
 TIME_XXX_Y_OFF_DEL     Alarm/warning off delay time   Real In seconds
 mode_Xxx_Y_MaskOn     Alarm/warning is masked      Bool    1 = masked, 0 = normal
 msg_Xxx_Y         Alarm/warning is active      Bool    1 = active, 0 = inactive
 ――――――――――――――――――――――――――――――――――――――――――
 Default alarm and warning signals — where XXX is either ALM or WRN and Y is either H or L



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.1     High alarms and warnings (an example)


This example explains how a high alarm signal is generated, a high warning works in exactly the 
same way with WRN being substituted for ALM.

The full set of signals associated with the high alarm are:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_ALM_H_EN    Alarm high enabled      Bool    1 = enabled, 0 = disabled
 SP_ALM_H_VAL      Alarm high setpoint value    Real Engineering units
 SP_ALM_H_HYST_VAL    Alarm high hysteresis value Real Engineering units
 TIME_ALM_H_ON_DEL   Alarm high on delay time   Real In seconds
 TIME_ALM_H_OFF_DEL     Alarm high off delay time   Real In seconds
 mode_Alm_H_MaskOn    Alarm is masked         Bool    1 = masked, 0 = normal
 msg_Alm_H        Alarm high is active      Bool    1 = active, 0 = inactive
 ――――――――――――――――――――――――――――――――――――――――――


The figure below indicates how each of these signal functions (note TIME_ALM_H_ON_DEL and
TIME_ALM_H_OFF_DEL have been abbreviated to ON_DEL and OFF_DEL respectively):


                │
                │          ╱╲╱╲
                │    ①      ②╱    ╲
      SP_ALM_H_VAL↘│____╱╲________╱____________╲③_______④__________ 
   SP_ALM_H_HYST_VAL ↕│__╱____╲____╱╎_____╎_______╲____╱╲___________
                │╱    ╲╱ ╎    ╎      ╲╱     ╲
                │        ╎    ╎          ╎╲
                │        ╎    ╎          ╎ ╲___
                │        ╎    ╎          ╎    ╎╲╱
                │    ON_DEL→╎    ╎←    OFF_DEL→╎    ╎←
                ┼─────────────────────────────

                           ╎                        ╎

        msg_Alm_H │             ┏━━━━━━━━━━━━┓
                │             ┃               ┃
CONFIG_ALM_H_EN = 1     │             ┃   ALARM IS ACTIVE    ┃
&amp; mode_Alm_H_MaskOn = 0 │             ┃               ┃
                │             ┃               ┃
                ┼━━━━━━━━━━━━╶╶╶╶╶╶╶╶╶╶╶╶╶━━━━

                           ╎                        ╎

        msg_Alm_H │          
⑤               │             ╎               ╎             
CONFIG_ALM_H_EN = 0     │             
    OR          │             ╎               ╎
CONFIG_ALM_H_EN = 1     │          
&amp; mode_Alm_H_MaskOn = 1 ┼━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Scenario ①, alarm setpoint reached, but for less than on-delay duration


The graph represents the scaled analog instrument reading, actual_Value (in engineering 
units). The top horizontal line is the setpoint for the high alarm (SP_ALM_H_VAL).

If the alarm is enabled (CONFIG_ALM_H_EN = 1) then the following actions occur:

At point ① on the graph, the signal actual_Value reaches (and exceeds) the threshold value 
SP_ALM_H_VAL; i.e.:

          actual_Value ≥ SP_ALM_H_VAL

At this point, the alarm setpoint is exceeded and the on-delay timer starts; in the case of point ①, 
the signal actual_Value falls back below the setpoint value before the on-delay timer reaches 
the time set in TIME_ALM_H_ON_DEL, consequently the alarm does not activate.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Scenario ②, alarm setpoint reached for more than the on-delay duration


At point ② on the graph, the signal actual_Value again reaches (and exceeds) the setpoint value 
SP_ALM_H_VAL.

Again, at this point, the alarm threshold is exceeded and the on-delay timer starts; in the case of 
point ②, the signal actual_Value remains at or above the setpoint value for the full duration of 
the TIME_ALM_H_ON_DEL and consequently the alarm activates (msg_Alm_H goes to a high 
state), this is indicated in the middle msg_Alm_H graph.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Scenario ③, alarm reset level reached, but for less than the off-delay duration


At point ③, the signal actual_Value falls to the point at which the alarm is no longer active i.e.:

          actual_Value &lt; (SP_ALM_H_VAL − SP_ALM_H_HYST_VAL)

Note:    in this case the inequality is less than (not less than or equal to), this is to prevent a
     conflict detecting the threshold and detecting the reset value if SP_ALM_H_HYST_VAL 
     is set to zero.

At this point, the signal is below the alarm reset level:

          SP_ALM_H_VAL − SP_ALM_H_HYST_VAL

and the off-delay timer starts; in the case of point ③, the signal actual_Value returns above the 
reset threshold before the off-delay timer reaches the time set in TIME_ALM_H_OFF_DEL, 
consequently, the alarm does not deactivate.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Scenario ④, alarm reset level reached for more than the off-delay duration


At point ④ on the graph, the signal actual_Value again falls below the alarm reset level 
(SP_ALM_H_VAL − SP_ALM_H_HYST_VAL).

Again, at this point, the off-delay timer starts; in the case of point ④, the signal actual_Value 
remains below the reset threshold for the full duration of the TIME_ALM_H_OFF_DEL and 
consequently, the alarm deactivates (msg_Alm_H goes to a low state), this is indicated in the 
middle msg_Alm_H graph.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Scenario ⑤, alarm is disabled


If the alarm is disabled (CONFIG_ALM_H_EN = 0) then the alarm will never activate 
(msg_Alm_H is always in a low state), this is indicated in the lower msg_Alm_H graph.

Note:    The timer for disabled alarms and warnings is permanently set to zero.


▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.2     Low alarms and warnings


Low alarms and warnings are very similar to the high alarms of § 3.2.1, they do however work
in the opposite sense (the inequalities are reversed), low alarms and warnings are activated
when the actual_Value falls below, or is equal to, the SP_ALM_L_VAL, and deactivates when it
rises above SP_ALM_L_VAL + SP_ALM_L_HYST_VAL.

On and off delays work in exactly the same way as those for the high alarm.

A worked example of the low alarm is given in the online documentation for this block:

select this block in the project tree and press:
     SHIFT + F1 or follow the link: https://psop.uk/pal-smds-fc02001-p




▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.3     Masking alarms and warnings


There are conditions where it can become necessary to mask (supress) alarms and warnings, a 
typical example could be a flow meter that monitors the flow into a filter; under normal 
conditions the flow meter would generate a low alarm if the flow into the filter were below a 
certain setpoint (indicating that the filter is becoming blocked).

It would be normal practice to supress this alarm when the filter was being cleaned, under 
these circumstances there would be no flow into the filter, but this would be a normal operating 
condition for the filter; the flow meter should only be monitoring for a low alarm during normal 
operation, not when the filter is being cleaned.

This suppression of an alarm or warning is referred to as “masking”, and there is a mask bit for 
each alarm and warning:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION           TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 mode_Alm_H_MaskOn    Masks the high alarm     Bool    1 = alarm masked, 0 = normal
 mode_Alm_L_MaskOn    Masks the low alarm    Bool    1 = alarm masked, 0 = normal
 mode_Wrn_H_MaskOn    Masks the high warning    Bool    1 = warning masked, 0 = normal
 mode_Wrn_L_MaskOn     Masks the low warning      Bool    1 = warning masked, 0 = normal
 ――――――――――――――――――――――――――――――――――――――――――
 Alarm and warning mask signals

 
Any alarm or warning that is masked (mode_Xxx_Y_MaskOn = 1), will deactivate instantly 
(there is no off-delay) and will not reactivate activate (the msg_Xxx_Y will be set to zero), the 
effect is the same as if the CONFIG_XXX_Y_EN bit were turned off.

The difference between the mask and the ENABLE signals is that the enable signal is a 
configuration of the instrument (it determines which alarms and warnings are configured for the 
particular instrument) and does not change at run-time (it is stored in static data block).

The mask signal on the other hand can be changed at run-time (either by some aspect of the 
Controller program or by the operator). The mask signal is stored in a dynamic data block and 
can be freely modified.

Note:    If an alarm or warning is not enabled (CONFIG_XXX_Y_EN = 0), then the mask bit 
     (mode_Xxx_Y_MaskOn) will not do anything (setting it will not enable the alarm), in 
     fact if the alarm or warning is not enabled, the mask bit will be permanently set to 
     zero.

Masking alarms and warnings is the correct way to disable an alarm as part of the process 
operation of the plant.

When an alarm or warning goes from a masked condition to an unmasked condition (returns to 
normal operation), the on-delay timer will be reset and any alarm or warning condition will 
have to go back through the on-delay process before the alarm or warning can reactivate, this is 
true even if the alarm were active before being masked.




▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.2.4     A note on dynamically enabling alarms


In normal operations, alarms are either enabled or disabled as part of the instrument 
configuration and this configuration will not change during run-time; the enable signal 
(CONFIG_XXX_Y_EN) is after all in a static data block. 

However, it is possible that the static data block is being used as a recipe block and as such it 
could be overloaded at some point during run-time.

Should the block detect a change in any of the CONFIG_XXX_Y_EN; specifically, a rising 
edge, the block provides error checking to ensure that the associated alarm/warning timer 
(actual_Xxx_Y_Timer) is preset to correct TIME_XXX_Y_ON_DEL, this prevents the alarm/warning 
from activating instantly, if the actual_Value is outside the alarm/warning setpoint. A condition 
that could arise because the timer is set to zero while ever the alarm/warning is disabled.

Note:    This is a minor technical point, but it is a necessary error trapping mechanism — the 
     situation could arise even if it is unlikely.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.3     Fault signals


There are four fault signals that can be produced by the block:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 msg_Flt_UnderRange   The instrument is more than   Bool    1 = under-range, 0 = healthy
                a percentage below the its 
                minimum value

 msg_Flt_OverRange     The instrument is more than   Bool    1 = over-range, 0 = healthy
                a percentage above its 
                maximum value

 msg_Flt_OutOfRange   Common fault, either       Bool    1 = out-of-range, 0 = healthy
                under or over range

 msg_Flt_External     The instrument itself is    Bool    1 = fault, 0 = healthy
                indicating a fault 
                (hardwired signal)
 ――――――――――――――――――――――――――――――――――――――――――
 Block fault signals 



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.3.1     Over, under and out of range fault signals

If the scaled signal actual_Value , is outside the SCALE_MIN to SCALE_MAX range (dotted area of 
the graph, § 3.1), the scaled instrument reading (actual_Value) will still be calculated correctly; 
however, an appropriate, over-range or under-range (msg_Flt_OverRange or msg_Flt_UnderRange) 
signal will be generated to indicate that the instrument signal is outside of its calibrated range 
and is potentially no longer accurate.

Some tolerance is permitted before either the msg_Flt_OverRange or msg_Flt_UnderRange 
signals is activated (this is to prevent nuisance alarms — most instruments are tolerant of slight 
over and under shoot readings). 

The limits at which an over-range or under-range signal is generated is specified in the dataset 
passed to the module in the AI_SCALE_DATA parameter. Each such da-taset is stored in 
DB00851_St_ConstAiScaleData (see § 3.1.1) in the variables LIMIT_OVER and LIMIT_UNDER 
respectively. These represent the highest and low-est values that the scaled instrument value 
can read without being either over-range or under-range:

 AI_SCALE_DATA
 ―――――――――――――――――――――――――――――――――――――――――― 
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 LIMIT_UNDER        Lower limit of the scaled instrument value in      Real
              engineering units before instrument is 
              under-range
 LIMIT_OVER           Upper limit of the scaled instrument value in      Real
              engineering units before instrument is 
              over-range
 ――――――――――――――――――――――――――――――――――――――――――


The instrument is considered to be in an over-range condition if:

  Over range condition (msg_Flt_OverRange)  active if:   actual_Value &gt;LIMIT_OVER

The instrument is considered to be in an under-range condition if:

  Under range condition (msg_Flt_UnderRange)  active if: actual_Value &lt;LIMIT_UNDER


The LIMIT_OVER and LIMIT_UNDER are real numbers in engineering units.

Thus, if an instrument (type N thermocouple) had the range -270.0°C to +1370.0°C 
(SCALE_MIN = -270.0 and SCALE_MAX = 1370.0) and is given the un-der and over-range limits of 
LIMIT_UNDER = -300.0 and LIMIT_OVER = 1400.0 then the instrument would be in an over-range 
condition (msg_Flt_OverRange= true) for any reading above (but not including) 1400.0°C and 
would be in an under-range condition (msg_Flt_UnderRange= true) for any reading below (but not 
including) -270.0°C.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Common out of range signal


There is a third out of range signal: msg_Flt_OutOfRange, this signal is a common signal that 
just indicates the instrument is out of its calibrated range (it does not specify whether it is over 
or under range). It is activated if either the msg_Flt_OverRange or msg_Flt_UnderRange signal is 
active.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Configuration error

If a range configuration error is present (see § 3.1.2), all three out of range signals will activate 
msg_Flt_OverRange, msg_Flt_UnderRange and msg_Flt_OutOfRange.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.3.2    Over and under range restrictions


The out-of-range limits passed to the module (AI_SCALE_DATA) must meet the following 
conditions:

   •   LIMIT_UNDER ≤ SCALE_MIN
   •   LIMIT_OVER ≥ SCALE_MAX

I.e. the instrument cannot be considered either under range or over range if it is within the 
normal range of the instrument.

If the over-range limit (LIMIT_OVER) is less than SCALE_MAX, then it’s value will be replaced by 
SCALE_MAX in all calculations. Similarly, if the under-range limit (LIMIT_UNDER) is greater than 
SCALE_MIN, then it’s value will be replaced by SCALE_MIN in all calculations.

If either the LIMIT_OVER and LIMIT_UNDER is replaced by SCALE_MAX or SCALE_MIN, this will be 
reflected in the actual_AiScaleData variable in the DYNAMIC_DATA parameter.



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.3.3    External fault signal


The external fault is an optional hardwired signal from the instrument, it indicates that the 
instrument itself is registering that there is some problem. Such external fault signals are more 
commonly associated with complex instruments (mass flow metres, ultrasonic level 
transducers, analytical instruments &amp;c.) rather than the more simplistic instruments (pressure 
sensors, temperature transmitters &amp;c.).

Typical examples of external faults would be:

   •   No medium present in a mass flow meter (if the instrument were measuring liquid 
     flow and the pipe had become empty)

   •   Foam indication from an ultrasonic level transducer (preventing an accurate level 
     reading)

Such fault signals are generally indicated via a hardwired digital input to the Controller.

The external fault signal (if used) is passed to the block as the parameter: EXT_FAULT


 ――――――――――――――――――――――――――――――――――――――――――
 PARAMETER          FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 EXT_FAULT        Hardwired signal indicating    Bool    1 = fault, 0 = healthy
                the instrument is in a fault 
                condition
 ――――――――――――――――――――――――――――――――――――――――――
 Block external fault parameter 


If the EXT_FAULT signal is not required, the input should be set to _false.

If the instrument generates a fault signal in the opposite sense, i.e. 0 = fault and 1 = healthy (this 
is a common fail-safe condition, that generates a fault signal if the instrument is disconnected 
or a wire break occurs), then a normally closed contact should be applied to the EXT_FAULT 
parameter to invert the signal into the block (see below):


                           ┌─────────────
        ───────────────────┤ FC02001 
                           │               │                       
                               "FC001" ─┤ AI_RAW_SIGNAL          │
                           │               │
      "DB00801_St_ConstAiRawData".AI_RAW_2003 ─┤ AI_RAW_DATA           │
                           │               │
   "DB00851_St_ConstAiScaleData".AI_SCALE_FC001    ─┤ AI_SCALE_DATA          │
                           │               │
             "FC001_FAULT"           │               │
          ────┤╱├──────────┤ EXT_FAULT                │
                           │               │
                           │               │
        "DB02001_St_StdInstAnalogRead".FC001 ─┤ STATIC_DATA             │
                           │
       "DB22001_Dy_StdInstAnalogRead".FC001 ─┤ DYNAMIC_DATA
                           │
                           │


If the EXT_FAULT parameter is activated (set to 1), the corresponding fault signal within the 
dynamic data (msg_Flt_External) will be activated, there are no delays or other filtering 
associated with this signal.

Note:    The external fault does not in any way impact the reading and scaling of the 
     instrument or the production of any alarms or warnings.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.4     Operating mode


This block supports various operating modes:

   •   Simulation mode
   •   Remote/local mode
   •   Faceplate disabled mode

Examining these in turn:


▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.4.1     Simulation mode


The instrument can be switched to a simulation mode, in which the actual reading from the 
instrument is replaced by a simulated value provided by the operator. 

Simulation mode is generally used during testing, but can also be applied in a process 
environment if a fault condition is detected within the instrument; this scenario allows the plant 
to continue operating (albeit under some degree of manual control) until the instrument is 
repaired or replaced.

The following data points are associated with the simulation mode:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_SIM_DIS         Prevents simulation mode   Bool    1 = no sim, 0 = sim permitted
                being activated under all 
                circumstances

 mode_SimOn        Activates simulation mode,    Bool    1 = sim on, 0 = sim off
                if active, the scaled reading 
                of the instrument:
                actual_Value will be set 
                to mode_SimValue

 mode_SimValue      Scaled instrument reading   Real    Simulated instrument value
                actual_Value will be set to  
                this if simulation mode is 
                on (CONFIG_SIM_DIS = 0 
                and mode_SimOn = 1)

 status_SimOn       Status indication, shows if    Bool    1 = sim active, 0 = Sim off
                simulation mode is active
 ――――――――――――――――――――――――――――――――――――――――――


Simulation mode can only be activated by the operator via a faceplate available at the 
supervisory system (SCADA/HMI).

If simulation mode is disabled (configuration signal CONFIG_SIM_DIS is set to 1), then the 
simulation mode cannot be turned on under any circumstances, the option is greyed out on the 
supervisory system faceplate and the block will constantly reset the mode_SimOn signal.

If simulation mode is permitted (CONFIG_SIM_DIS = 0), then setting mode_SimOn to 1 will 
activate simulation mode and the scaled instrument value (actual_Value) will be set to the 
value stored in mode_SimValue:

          i.e. actual_Value = mode_SimValue

and all fault messages will be reset.

The operator can set and adjust the simulation value (mode_SimValue) from the instrument
faceplate on the supervisory system. The simulation value can be adjusted at any time by the 
operator (even if simulation mode has not been activated), but will not be applied until 
simulation mode is turned on (mode_SimOn = 1). 

If simulation mode is completely disabled (CONFIG_SIM_DIS is set to 1) then the operator will
not be able to adjust the simulated value (mode_SimValue will be greyed out on the faceplate).



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.4.2     Remote/local mode


Remote and local operating modes refer to the supervisory system that has control of the 
instrument (i.e. which system can write to the device and change the operating mode of the 
device). 

This type of mode is usual present where a plant has a remote central control location (a control 
room) that normally controls the device (remote control), but also has a field panel with a local 
HMI that an operator in the field can select to take over control of the device (local control) for 
maintenance purposes.

The modes are as follows (and are mutually exclusive, only one will be active):

   Remote        Only the remote system in the control room can 
                control the device

   Local            A local system has taken control of the device and the remote 
                system can no longer issue commands to it

   Remote/local disabled   The system does not use remote/local modes and any 
   (ALL mode)       supervisory system can issue commands to the device 
 
Remote/local control is generally handled by the supervisory systems themselves; however, the 
supervisory systems need a storage area per device to record which mode that device is in, local 
control is often activated by a panel key-switch, that changes the state of several devices from 
remote to local (usually all the devices controlled by the local panel).

The block simply identifies the remote/local mode from the mode signals and configuration 
signals provided to the block.

For systems that do not use remote/local modes (any supervisory system can control the device, 
or control is determined by operator privileges), the remote/local modes can be disabled 
(CONFIG_RL_EN is set to zero) and the device is effectively in ALL mode (any system can 
control the device).

If remote/local operation is in use, the supervisory system that does not have control will still 
display all the information from the device, but will not be able to control the device (it could not 
for example, activate simulation mode) and all control function (faceplate functions) will be 
greyed out.

The following signals are associated with remote/local/all modes:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_RL_EN      Allows Remote and Local      Bool    1 = Remote/local selected
                modes to be selected        0 = All mode is active

 mode_RemoteOn       Activates remote mode     Bool    1 = remote mode on, 
                CONFIG_RL_EN must = 1       0 = remote mode off

 mode_LocalOn     Activates local mode          Bool    1 = local mode on, 
                CONFIG_RL_EN must = 1       0 = remote mode off

 status_RemoteOn      Status remote mode on     Bool    1 = remote mode on, 
                              0 = remote mode off

 status_LocalOn       Status local mode on      Bool    1 = local mode on, 
                              0 = local mode off

 status_RLOff       Status Remote/local is off     Bool    1 = ALL mode on, 
             (ALL mode active)         0 = ALL mode off
 ――――――――――――――――――――――――――――――――――――――――――
 Block remote/local signals 


By default, remote/local is disabled — ALL mode is selected (CONFIG_RL_EN = 0).




▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.4.3     Faceplate disable mode


It is possible to disable the supervisory system faceplate from within the block, the configuration 
signal:


 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 CONFIG_FP_DIS        Disable the supervisory      Bool    1 = Faceplate disabled
                system faceplate           0 = normal
 ――――――――――――――――――――――――――――――――――――――――――
 Block faceplate disable signal 


If the faceplate is disabled (CONFIG_FP_DIS = 1), the supervisory system will not allow the 
device faceplate to be opened (normally achieved by clicking the block icon or device symbol), 
this in turn prevents the operator from affecting the device in anyway, it would not, for example, 
be possible to put the device into simulation mode.




    </Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="B" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Sections 3.2 to 3.4</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="D" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="E" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
3.5     Status reporting

The module constantly reports the status of the instrument (i.e. alarm/warning states, faults &amp;c.) 
via various status signals. These signals can be used within the Controller software to determine 
specific device conditions (e.g. a high alarm is active), the signals may also be used by 
supervisory systems to display (in an animated fashion) the state of the instrument.

The status signals for faults, alarms and warnings are either duplicates of the message signals 
(signals beginning with msg_) or logical combinations of them.

The following is a full list of the status signals:


 UT22001_Dy_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL           FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 status_Alm_H        Identical to: msg_Alm_H    Bool    1 = high alm active, 0 = no alm

 status_Alm_L         Identical to: msg_Alm_L       Bool    1 = low alm active, 0 = no alm

 status_Wrn_H        Identical to: msg_Wrn_H    Bool    1 = high wrn active, 0 = no wrn

 status_Wrn_L         Identical to: msg_Wrn_L     Bool    1 = low wrn active, 0 = no wrn

 status_Alm_H_Mask     High alarm is masked     Bool    1 = masked, 0 = normal

 status_Alm_L_Mask   Low alarm is masked      Bool    1 = masked, 0 = normal

 status_Wrn_H_Mask      High warning is masked    Bool    1 = masked, 0 = normal

 status_Wrn_L_Mask       Low warning is masked     Bool    1 = masked, 0 = normal

 status_Alm_H_Dis         High alarm is disabled       Bool    1 = disabled, 0 = normal

 status_Alm_L_Dis       Low alarm is disabled        Bool    1 = disabled, 0 = normal

 status_Wrn_H_Dis          High warning is disabled      Bool    1 = disabled, 0 = normal

 status_Wrn_L_Dis           Low warning is disabled       Bool    1 = disabled, 0 = normal

 status_Fault       Indicates any of the msg_Flt    Bool    1 = fault active, 0 = healthy
                signals are active:
                 msg_Flt_UnderRange
                 msg_Flt_OverRange
                 msg_Flt_OutOfRange
                 msg_Flt_External 

 status_SimOn       Status simulation mode on     Bool    1 = sim on, 0 = sim off

 status_RemoteOn      Status remote mode on     Bool    1 = rem on, 0 = rem off

 status_LocalOn       Status local mode on      Bool    1 = loc on, 0 = loc off 

 status_RLOff       Status ALL mode is on           Bool    1 = ALL mode on, 
                              0 = ALL mode off
 ――――――――――――――――――――――――――――――――――――――――――
 Block status signals 



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
3.5.1     String constants for tag name and units


The STATIC_DATA structure holds two string values:


 UT02001_St_InstAnalogRead
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 INFO_TAG          INFORMATION — Instrument ID tag          String[20]

 INFO_UNITS          INFORMATION — Instrument engineering units       String[10]
                       (unit of measure)
 ――――――――――――――――――――――――――――――――――――――――――
 String constants for the instrument


These two strings allow the supervisory system to populate the instrument tag (e.g. FIC001) and 
the engineering units applicable to the instrument (L/s for example) directly from the data 
stored in the PLC; it means the block icon can be used directly within the supervisory system 
graphic without customisation; all the data will be populated directly at runtime.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
4.     Supervisory system interface


See the online documentation for this block — select the block in the project tree and press:
     SHIFT + F1 or follow the link: https://psop.uk/pal-smds-fc02001-p 

An explanation of the block icons and faceplates available to the supervisory system for this 
module is given in section 4 of the SMDS document [Ref. 011].

A downloadable copy of the SMDS (and all other project documentation) is available here:

     https://practicalseries.com/2001-pal/21-project/01-00-docs.html

For this module, the document number is: PS2001-5-2312-fc02001

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
5.     PARAMETERS


The following parameters are associated with the block:

 
 ――――――――――――――――――――――――――――――――――――――――――
 PARAM         FUNCTION                      TYPE      IN-OUT 
 ――――――――――――――――――――――――――――――――――――――――――
 SYS_SIGNALS      Common system signals                UT21000    In
          logic and timing signals for parametric access

 AI_RAW_SIGNAL      The unscaled analog input (input word          Word     In
          address for the IO card to which the instrument 
          is connected)
 AI_RAW_DATA      Analog input signal configuration data (type,     UT00801    In
          range, descriptions card parameters and 
          coefficients)

 AI_SCALE_DATA     Analog input signal scaled value data (instrument   UT00851   In
          tag, range, descriptions and engineering units)


 EXT_FAULT     Optional external fault signal for the instrument     Bool      In
          (1 = fault, 0 = healthy). If not required, set 
          permanently to _False

 STATIC_DATA     Data structure that holds the configuration data    UT02001    In
          for the instrument (raw range, scaled range 
          alarm and warning values, filtering times, 
          hysteresis values &amp;c.)

 DYNAMIC_DATA      Data structure that holds the live data for the      UT22001    InOut
          instrument (its reading in engineering units, 
          any alarms or warnings that may be active, 
          current timer values, selected operating 
          mode &amp;c.)
 ――――――――――――――――――――――――――――――――――――――――――


               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
6.     DATA STRUCTURES AND USAGE


The block has the following associated data structure:


 ――――――――――――――――――――――――――――――――――――――――――
 DATA STRUCTURE             DESCRIPTION
 ――――――――――――――――――――――――――――――――――――――――――
 UT01000_St_SysRevision          Revision information for this block    See FC01001
 UT01001_St_SysLicence           Licence information for this block  See FC01001
 UT21000_Dy_SysSignals           System signals for logic and timing  See FC01001

 UT00801_St_ConstAiRawData        Analog input signal configuration data 
                    (type, range, descriptions card parameters and 
                    coefficients)

 UT00851_St_ConstAiScaleData     Analog input signal scaled value data 
                    (instrument tag, range, descriptions and 
                    engineering units)

 UT02001_St_InstAnalogRead      Static data structure for an analog instrument.
                    Holds configuration information, instrument ranges 
                    and scaling, alarm/warning thresholds &amp;c.

 UT22001_Dy_InstAnalogRead        Dynamic data structure for an analog instrument.
                    Current scaled instrument reading, alarm status, 
                    operating modes, timer values &amp;c.
 ――――――――――――――――――――――――――――――――――――――――――



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
6.1     UT00801_St_ConstAiRawData


The static data structure for an analog instrument.


 UT00801_St_ConstAiRawData (full contents)
 ―――――――――――――――――――――――――――――――――――――――――― 
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 AI_CODE            A 16-bit hex value that uniquely identifies dataset   UInt
              (it is the variable name of the dataset in DB00801)
 RAW_MIN         Minimum value of the raw analog signal        Int
              (at the card)

 RAW_MAX           Maximum value of the raw analog signal        Int
 RAW_DESC         Textual plain English description of the channel     String[60]
              type and range
 PARAM_TYPE         An 8-bit hex code that represents the input type    Byte
              See [Ref. 101]

 PARAM_RANGE        An 8-bit hex code that represents the input range    Byte
              See [Ref. 101]

 PARAM_COEF        An 8-bit hex code that represents a thermal        Byte
              coefficient (thermal resistance channels only, 
              otherwise set to 0). See [Ref. 101]

 VALUE_COEF        The actual value of the temperature coefficient in    Real
              use (thermal resistance channels only)
 ―――――――――――――――――――――――――――――――――――――――――― 



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
6.2     UT00851_St_ConstAiScaleData


The static data structure for an analog instrument.


 UT00801_St_ConstAiRawData (full contents)
 ―――――――――――――――――――――――――――――――――――――――――― 
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 AI_TAG          Tag name of the instrument             String[20]

 SCALE_MIN        Minimum value of the scaled input signal range    Real
              being used by the module
 SCALE_MAX          Maximum value of the scaled input signal range      Real
              being used by the module

 SCALE_UNITS          Engineering units for the instrument         String[20]
 SCALE_DESC           Textual plain English description of the instrument  String[60]

 LIMIT_UNDER        Lower limit of the scaled instrument value in      Real
              engineering units before instrument is 
              under-range
 LIMIT_OVER           Upper limit of the scaled instrument value in      Real
              engineering units before instrument is 
              over-range

 USER_INFO_1          Optional user information (text) line 1       String[60]
 USER_INFO_2          Optional user information (text) line 2       String[60]
 USER_INFO_3          Optional user information (text) line 3       String[60]
 USER_INFO_4          Optional user information (text) line 4       String[60]
 USER_INFO_5          Optional user information (text) line 5       String[60]
 ―――――――――――――――――――――――――――――――――――――――――― 



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
6.3     UT02001_St_InstAnalogRead


The static data structure for an analog instrument.


 UT02001_St_InstAnalogRead (full contents)
 ―――――――――――――――――――――――――――――――――――――――――― 
 SIGNAL NAME          FUNCTION                     TYPE
 ―――――――――――――――――――――――――――――――――――――――――― 
 CONFIG_ALM_H_EN     CONFIG — High alarm is enabled          Bool
                     (1 = enabled, 0 = no alarm) 
 CONFIG_ALM_L_EN      CONFIG — Low alarm is enabled           Bool
                     (1 = enabled, 0 = no alarm)
 CONFIG_WRN_H_EN        CONFIG — High warning is enabled         Bool
                     (1 = enabled, 0 = no warning)
 CONFIG_WRN_L_EN        CONFIG — Low warning is enabled          Bool
                     (1 = enabled, 0 = no warning)
 CONFIG_FP_DIS         CONFIG — Faceplate is disabled           Bool
                     (1 = no Faceplate, 0 = normal)
 CONFIG_SIM_DIS       CONFIG — Simulation is disabled            Bool
                     (1 = no Simulation, 0 = normal)
 CONFIG_RL_EN       CONFIG — Remote/local mode enabled       Bool
                     (1 = enabled, 0 = all mode)

 AI_USER_RAW_DATA        AI USER DATA — User configured analog input data  UT00801 
                                (only used if .AI_CODE = 0)

 SP_ALM_H_VAL       SETPOINT — High alarm threshold value         Real
                     [engineering units]
 SP_ALM_L_VAL       SETPOINT — Low alarm threshold value       Real
                     [engineering units]
 SP_WRN_H_VAL         SETPOINT — High warning threshold value        Real
                     [engineering units]
 SP_WRN_L_VAL       SETPOINT — Low warning threshold value      Real
                     [engineering units]
 SP_ALM_H_HYST_VAL     SETPOINT — High alarm hysteresis value        Real
                     [engineering units]
 SP_ALM_L_HYST_VAL     SETPOINT — Low alarm hysteresis value         Real
                     [engineering units]
 SP_WRN_H_HYST_VAL    SETPOINT — High warning hysteresis value       Real
                     [engineering units]
 SP_WRN_L_HYST_VAL     SETPOINT — Low warning hysteresis value        Real
                     [engineering units]

 TIME_ALM_H_ON_DEL    TIMER — High alarm on delay time          Real
                     (activation delay), [seconds]
 TIME_ALM_L_ON_DEL     TIMER — Low alarm on delay time           Real
                     (activation delay), [seconds]
 TIME_WRN_H_ON_DEL       TIMER — High warning on delay time         Real
                     (activation delay), [seconds]
 TIME_WRN_L_ON_DEL        TIMER — Low warning on delay time          Real
                     (activation delay), [seconds]
 TIME_ALM_H_OFF_DEL      TIMER — High alarm off delay time           Real
                     (deactivation delay), [seconds]
 TIME_ALM_L_OFF_DEL       TIMER — Low alarm off delay time            Real
                     (deactivation delay), [seconds]
 TIME_WRN_H_OFF_DEL      TIMER — High warning off delay time          Real
                     (deactivation delay), [seconds]
 TIME_WRN_L_OFF_DEL      TIMER — Low warning off delay time           Real
                     (deactivation delay), [seconds]
 ――――――――――――――――――――――――――――――――――――――――――



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
6.4      UT22001_Dy_InstAnalogRead


The static data structure for an analog instrument.


 UT22001_Dy_InstAnalogReadl (full contents)
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                     TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 status_ConfigError       STATUS — Raw or scaled range configuration error   Bool
                     (1 = Config error, 0 = OK)
 status_Alm_H         STATUS — High alarm is active           Bool
                     (1 = alarm active, 0 = no alarm)
 status_Alm_L          STATUS — Low alarm is active            Bool
                     (1 = alarm active, 0 = no alarm)
 status_Wrn_H         STATUS — High warning is active          Bool
                     (1 = warning active, 0 = no warning)
 status_Wrn_L          STATUS — Low warning is active           Bool
                     (1 = warning active, 0 = no warning)
 status_Alm_H_Mask       STATUS — High alarm is masked             Bool
                     (1 = alarm masked, 0 = normal)
 status_Alm_L_Mask        STATUS — Low alarm is masked              Bool
                     (1 = alarm masked, 0 = normal)
 status_Wrn_H_Mask       STATUS — High warning is masked            Bool
                     (1 = warning masked, 0 = normal)
 status_Wrn_L_Mask        STATUS — Low warning is masked             Bool
                     (1 = warning masked, 0 = normal)
 status_Alm_H_Dis           STATUS — High alarm is disabled            Bool
                     (1 = alarm disabled, 0 = normal)
 status_Alm_L_Dis            STATUS — Low alarm is disabled             Bool
                     (1 = alarm disabled, 0 = normal)
 status_Wrn_H_Dis           STATUS — High warning is disabled           Bool
                     (1 = warning disabled, 0 = normal)
 status_Wrn_L_Dis            STATUS — Low warning is disabled            Bool
                     (1 = warning disabled, 0 = normal)
 status_Fault            STATUS — Instrument is in fault             Bool
                     (1 = fault present, 0 = healthy)
 status_SimOn           STATUS — Device is in simulation mode             Bool
                     (1 = Simulation mode, 0 = normal)
 status_RemoteOn       STATUS — Device is in remote mode                  Bool
                     (1 = Remote mode, 0 = normal)
 status_LocalOn         STATUS — Device is in local mode                 Bool
                     (1 = Local mode, 0 = normal)
 status_RLOff         STATUS — Device is in ALL mode                   Bool
                     (1 = ALL mode, 0 = normal)

 mode_Alm_H_MaskOn     MODE — Masks the high alarm             Bool    
                   (1 = alarm masked, 0 = normal)
 mode_Alm_L_MaskOn     MODE — Masks the low alarm            Bool    
                   (1 = alarm masked, 0 = normal)
 mode_Wrn_H_MaskOn     MODE — Masks the high warning            Bool    
                   (1 = warning masked, 0 = normal)
 mode_Wrn_L_MaskOn      MODE — Masks the low warning                 Bool    
                   (1 = warning masked, 0 = normal)
 mode_SimOn         MODE — Simulation mode               Bool
                   (1 = sim mode active, 0 = normal)
 mode_SimValue       MODE — Simulation value               Real
                   (engineering units)
 mode_RemoteOn        MODE — Remote SCADA control enabled       Bool
                   (1 = active, 0 = disabled or N/A)
 mode_LocalOn         MODE — Local HMI control enabled           Bool
                   (1 = active, 0 = disabled or N/A)

 msg_Alm_H         MESSAGE — Alarm - high alarm is active        Bool
 msg_Alm_L          MESSAGE — Alarm - low alarm is active          Bool
 msg_Wrn_H          MESSAGE — Warning - high warning is active      Bool
 msg_Wrn_L          MESSAGE — Warning - low warning is active        Bool
 msg_Flt_External         MESSAGE — Fault - external fault signal is active      Bool
 msg_Flt_OverRange¹     MESSAGE — Fault - instrument is over-range       Bool
 msg_Flt_UnderRange¹      MESSAGE — Fault - instrument is under-range       Bool
 msg_Flt_OutOfRange¹      MESSAGE — Fault - instrument is out-of-range        Bool

 batch_ID         BATCH — Booking ID (optional for batch operations)   UInt

 actual_Value          ACTUAL — SCALED INSTRUMENT VALUE         Real
                     [engineering units]
 actual_Alm_H_Timer      ACTUAL — Timer value — alarm high operation     Real
                     timer [seconds]
 actual_Alm_L_Timer       ACTUAL — Timer value — alarm low operation    Real
                     timer [seconds]
 actual_Wrn_H_Timer      ACTUAL — Timer value — warning high operation    Real
                     timer [seconds]
 actual_Wrn_L_Timer       ACTUAL — Timer value — warning low operation      Real
                     timer [seconds]
 actual_AiRawData       ACTUAL — Analog input Raw Data in use         UT00801
                     A copy of the AI_RAW_DATA parameter
 actual_AiScaleData     ACTUAL — Analog input Scale Data in use      UT00851
                     A copy of the AI_SCALE_DATA parameter

 $pret_AlmHEn           INTERNAL — Edge retention (+ve) alarm high en      Bool
 $Pret_AlmLEn            INTERNAL — Edge retention (+ve) alarm low en     Bool
 $pret_WrnHEn           INTERNAL — Edge retention (+ve) warning high en     Bool
 $pret_WrnLEn            INTERNAL — Edge retention (+ve) warning low en       Bool
 ――――――――――――――――――――――――――――――――――――――――――
 ¹        msg_Flt_OverRange, msg_Flt_UnderRange and msg_Flt_OutOfRange will all
     activate if a configuration error is active status_ConfigError = 1, actual_Value will 
     also be set to zero under these conditions.


With the exception of the flowing, all these signals are discussed in the previous sections, the 
outstanding items are firstly:

     batch_ID

The batch_ID is not required for normal use; it is only used where a “booking” system is used 
(common in batch and routing applications). Such booking applications can acquire the device 
if it is free and reserve it for a particular phase of the batch. Batch applications are a topic in 
their own right and are discussed separately in the online User Guide.

Next:
     actual_Alm_H_Timer Real
     actual_Alm_L_Timer Real
     actual_Wrn_H_Timer Real
     actual_Wrn_L_Timer Real

These data points hold the actual value of the running timer for each of the alarms/warnings, 
both on and off-delay timers used the same timer within the block (the timers are mutually 
exclusive, only one will be running at once for each alarm or warning — hence only one timer is
needed for each alarm or warning).

Each timer counts down from the TIME_ values (UT02001_St_InstAnalogRead) to zero in 200 ms
intervals.

Finally:
     $pret_AlmHEn
     $Pret_AlmLEn
     $pret_WrnHEn
     $pret_WrnLEn

These are internal working signals (all signals the start with a $ are internal working signals 
used by the block). In this instance they are used to detect a rising edge on each of the alarm 
and warning enable signals. 

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
7.     CONSTANTS AND TEMPORARY (LOCAL) DATA



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
7.1     Constants


No constants are used in this block.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
7.2     Temporary (local) data


The following temporary data is used:


 Temporary (local) data
 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL NAME          FUNCTION                  TYPE
 ――――――――――――――――――――――――――――――――――――――――――
 revInfo             Revision information for the block         UT01000
 licInfo           Licensing information for the block      UT01001
 wrkAlmHEn          Working Alm_H is enabled and not masked   Bool
 wrkAlmLEn        Working Alm_L is enabled and not masked    Bool
 wrkWrnHEn           Working Wrn_H is enabled and not masked    Bool
 wrkWrnLEn           Working Wrn_L is enabled and not masked    Bool
 calPart1             Scale value part 1 (AI_RAW_SIGNAL − RAW_MIN)Real
 calPart2             Scale value part 2 (SCALE_MAX − SCALE_MIN)   Real
 calPart3             Scale value part 3 (RAW_MAX − RAW_MIN)     Real
 calHystAbs           Absolute hysteresis value           Real
 wrkHyst           Working hysteresis value            Real
 wrkInt           Working storage area (integer)          Int
 wrkReal           Working storage (Real)             Real
 wrkDInt           Working storage area (double integer)         DInt
 ――――――――――――――――――――――――――――――――――――――――――

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
8.     BLOCK CALLS AND ASSOCIATIONS


This section details any blocks which may be called from within this software module (subroutine 
functions for example), any partner blocks with which it may be associated (for example a 
receive module that is partner with a transmit module &amp;c.). It lists any system functions which 
may be called (e.g. reading the real time clock) and any system data types that may be used.

Finally, it lists any special calling requirements for the block (for example, must be called from 
within a cyclic interrupt organisation block) and if the block is using “optimised access” (this is 
the default arrangement).



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.1     Block calls from within this module


There are no PAL block calls from within this block.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.2     Blocks associated with this module


This is a stand-alone block and is not associated with any other blocks.



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.3     System block calls and system data types

There are no system block calls



▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
8.4     Special properties and requirements



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
8.4.1     Block optimisation, IEC compatibility and library conformance


   •   Block optimisation is ACTIVE for this block.

   •   The block has been checked for IEC compatibility and is compliant.

   •   The block is compatible with all IEC library-conformance module constraints



▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
8.4.2     Calling requirements


There are no special calling requirements for this block.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
9.     EXAMPLE USAGE


The following shows a typical deployment of FC02001:


                           ┌─────────────
        ───────────────────┤ FC02001 
                           │               │                       
                               "FC001" ─┤ AI_RAW_SIGNAL          │
                           │               │
      "DB00801_St_ConstAiRawData".AI_RAW_2003 ─┤ AI_RAW_DATA           │
                           │               │
   "DB00851_St_ConstAiScaleData".AI_SCALE_FC001    ─┤ AI_SCALE_DATA          │
                           │               │
             "FC001_FAULT"           │               │
          ────┤╱├──────────┤ EXT_FAULT                │
                           │               │
                           │               │
        "DB02001_St_StdInstAnalogRead".FC001 ─┤ STATIC_DATA             │
                           │
       "DB22001_Dy_StdInstAnalogRead".FC001 ─┤ DYNAMIC_DATA
                           │
                           │


              ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
10.     TEST AND VERIFICATION PATH


The following diagram shows the full test and verification path for the formal release of each 
version of the software module. See the Test Plan [Ref. 003] for full details, available here:
        https://psop.uk/pal-tp-p


        FC02001-T001         FC02001-T002         FC02001-T003

    Test version: 000.801     Test version: 001.801     Test version: 002.801
 Released version: 001.000     Released version: 002.000     Released version: 003.000
Released commit: D0008    Released commit: D0011    Released commit: D0018

       SCR      SMT         SCR      SMT                 SMTp  
＿＿＿＿＿＿┌┐＿＿ ▛▜ ＿＿＿＿＿＿＿＿┌┐＿＿ ▛▜ ＿＿＿＿＿＿＿＿＿＿＿＿ ▛ ┐＿＿
      └┘   ▙▟         └┘   ▙▟             └ ▟   
Initial test           IEC compliance       AI_RAW_DATA &amp; AI_SCALE_DATA

Initial test to release the      Comments updated &amp;    DB00801 and DB00851 added 
module following the      UDT variable names        and used throughout, minor 
development stage.       standardised        name changes, comments 
Full SMT              Full SMT            updated. Only a partial retest 
                            required

Where:
――――――――――――――――――――――――――――――――――――――――――――
 SCR    Source Code Review      A visual inspection of the software to ensure it has been written  
┌┐             to the correct standards, uses the correct structures within the
└┘             software and is generally suitable for deployment.               

 SMT Software Module Test    A full and detailed test of an individual software module in
  ▛▜              isolation; such testing requires that all branches of the 
  ▙▟              software are tested. 

               It tests all the interfaces to the module, any data recorded or 
               stored by the module, all error and exception handling functions 
               and tests all timed and interrupt driven operations.

 SMTp SMT partial retest      A partial repeat of some aspect of the full SMT to retest a small
  ▛ ┐               change made to some aspect of the software. The change 
└ ▟                must be small, specific and localised.

 SCV Software Compatibility     A mechanism for verifying that no executable code software 
╓╖    Verification          changes have been made to a module following changes to
╙╜             comment fields.

               Allows typographical errors &amp;c. to be corrected without forcing 
               a full SMT on a module that has not functionally changed.
――――――――――――――――――――――――――――――――――――――――――――

An SCV can only be performed on a module that has at some point previously, successfully 
completed both an SCR and SMT. Where an SCV is implemented, it replaces the requirement for 
both the SCR and the SMT for the test iteration in question.

               ━━━   ⬙⬙⬙⬙⬙⬙   ━━━



██████████████ █ █ █ █  END   █ █ █ █ ██████████████
   </Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="10" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="11" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Block description — Sections 3.5 to 11</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="12" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_False" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="22">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'FC02001'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_BLOCK" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="24">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'002.801'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_NUMBER" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="26">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'2024.05.11'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_DATE" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="28">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'M. Gledhill'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="revInfo" />
        <Component Name="REV_AUTHOR" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="30">
      <Negated Name="operand" />
    </Part>
    <Part Name="S_Move" UId="31" DisabledENO="true" />
    <Part Name="S_Move" UId="32" DisabledENO="true" />
    <Part Name="S_Move" UId="33" DisabledENO="true" />
    <Part Name="S_Move" UId="34" DisabledENO="true" />
  </Parts>
  <Wires>
    <Wire UId="35">
      <Powerrail />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="21" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="en" />
      <NameCon UId="32" Name="en" />
      <NameCon UId="33" Name="en" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="22" />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="39">
      <NameCon UId="31" Name="out" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="24" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="32" Name="out" />
      <IdentCon UId="25" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="26" />
      <NameCon UId="33" Name="in" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="33" Name="out" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="28" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="34" Name="out" />
      <IdentCon UId="29" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="13" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="14" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
MODIFICATION HISTORY


The revision data shown here, in the network comments, contains additional information 
reflecting the software development workflow under the version control system (VCS) employed 
to track all software changes.

The VCS in use is the Git Source Code Management system in conjunction with the GitHub online 
hosting system. The software in its entirety is available in the GitHub remote repository:

     https://github.com/practicalseries/PS2001-pal-software

The repository is public and can be freely copied (forked in GitHub terminology) and used 
under the MIT licence. 

The MIT licence is reproduced in full in the last network of this software module.


 ―――――――――――――――――――――――――――――――――――――――――――
 DATE       REVISION             MASTER BRANCH     DEV
         (nnn.amm)   COMMIT TAG    (Base ---> Merge)    BRANCH   Author
 ———————————————————————————————————————————
 2024.05.11    002.801   D0017A-000.106   D0017 N/A     D017A   M. Gledhill
                       RAW_ANALOG changed to AI_RAW_SIGNAL
                       AI_RAW_DATA and AI_SCALE_DATA added and
                       copied to DYNAMIC_DATA 

 2022.04.16    002.000   D0011      D0010 D0011  None  M. Gledhill
                       FC02001 — RELEASED FOR USE
                         Merge back to master branch

 2022.04.11    001.801   D0010A-000.801   D0010 N/A     D010A   M. Gledhill
                       Released for test (SCV)
 2022.04.08    001.102   D0010A-000.104   D0010 N/A     D010A   M. Gledhill
                       Temporary variable name change (cal)

 2022.04.05    001.101   D0010A-000.103   D0010 N/A     D010A   M. Gledhill
                       Over and under range based on scaled signal
                       INFO_TYPE, cal_OR_Abs and cal_UR_Abs added
                       Comments updated and standardised
                       UDT variable names standardised

 2021.05.26    001.000   D0008      D0006 D0008  None    M. Gledhill
                       FC02001 — RELEASED FOR USE
                         Merge back to master branch

 2021.05.26    001.000   D0006B-001.000   D0006 N/A     D0006B   M. Gledhill
                       FC02001 — Post-test RELEASED FOR USE

 2021.05.24    000.801   D0006B-000.801   D0006 N/A     D0006B   M. Gledhill
                       FC02001 — Released for SMT

 2021.05.18    000.101   D0006B-000.101   D0006 N/A     D0006B   M. Gledhill
                       FC02001 Migration to VCS
 ———————————————————————————————————————————
  Where: nnn  =  Major revision
        a  =  Type (1-7 Development, 8 Proving, 9 Qualification, 0 Release)
      mm  =  Minor revision (must be 00 if a = 0)
        Block properties version number should be set to nn.a (only one decimal place)

▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="15" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="16" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Current revision and modification history</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="17" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="AI_RAW_DATA" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiRawData" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="AI_RAW_DATA" />
        <Component Name="AI_CODE" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="24">
      <Constant>
        <ConstantType>UInt</ConstantType>
        <ConstantValue>0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="USER_AI_RAW_DATA" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiRawData" />
      </Symbol>
    </Access>
    <Part Name="Move" UId="27" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Eq" UId="28">
      <TemplateValue Name="SrcType" Type="Type">UInt</TemplateValue>
    </Part>
    <Part Name="Move" UId="29" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="30">
      <Powerrail />
      <NameCon UId="27" Name="en" />
      <NameCon UId="28" Name="pre" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="21" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="32">
      <NameCon UId="27" Name="out1" />
      <IdentCon UId="22" />
    </Wire>
    <Wire UId="33">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="in1" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="24" />
      <NameCon UId="28" Name="in2" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="en" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="25" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="29" Name="out1" />
      <IdentCon UId="26" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="18" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="19" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Identifies the source of the AI configuration signals.

Under most circumstances, the AI configuration data is specified by the AI_RAW_DATA 
parameter. If, however, the AI_RAW_DATA is set to the user defined signal type AI_RAW_0000
(identified by the AI_RAW_DATA.AI_CODE value being set to zero), then the module will use
the data provided in the STATIC_DATA UDT variable STATIC_DATA.USER_AI_RAW_DATA.

User defined signal types are not normally used, all Simatic input types are accommodated in
DB00801_St_ConstAiRawData. However, if some non-Simatic card is being used (i.e. a 
third-party card that may have a Profinet or ProfiBus interface) it may be necessary to configure 
user defined signal type and this should be done by setting the AI_RAW_DATA parameter to the
AI_RAW_0000 dataset and then setting the analog input configuration in the STATIC_DATA
parameter variable USER_AI_RAW_DATA, this is of the UDT variable type:
UT00801_St_ConstAiRawData.

Under normal circumstances, the DYNAMIC_DATA variable actual_AiRawData is set to match the
AI configuration supplied in the parameter AI_RAW_DATA. If, however, AI_RAW_DATA is set to 
dataset AI_RAW_0000 (identified by the AI_RAW_DATA.AI_CODE value being set to zero), then the 
data supplied in thee STATIC_DATA UDT variable STATIC_DATA.USER_AI_RAW_DATA is copied into 
the DYNAMIC_DATA variable actual_AiRawData.

In either case, the DYNAMIC_DATA variable actual_AiRawData always contains the configuration 
that is in use.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="1A" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="1B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Determine RAW_DATA source</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="1C" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="AI_SCALE_DATA" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
      </Symbol>
    </Access>
    <Part Name="Move" UId="23" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="24">
      <Powerrail />
      <NameCon UId="23" Name="en" />
    </Wire>
    <Wire UId="25">
      <IdentCon UId="21" />
      <NameCon UId="23" Name="in" />
    </Wire>
    <Wire UId="26">
      <NameCon UId="23" Name="out1" />
      <IdentCon UId="22" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="1D" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="1E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The scaled data information (containing the SCALE_MAX and SCALE_MIN ranges applicable to
the instrument) is copied to the DYNAMIC_DATA variable actual_ScaleData.

This actual_ScaleData information is then used throughout all further calculations.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="1F" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="20" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Copy the SCALE_DATA to the actual data area</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="21" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiRawData" />
        <Component Name="RAW_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiRawData" />
        <Component Name="RAW_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_ConfigError" />
      </Symbol>
    </Access>
    <Part Name="Le" UId="26">
      <TemplateValue Name="SrcType" Type="Type">Int</TemplateValue>
    </Part>
    <Part Name="Le" UId="27">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="O" UId="28">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="29" />
  </Parts>
  <Wires>
    <Wire UId="30">
      <Powerrail />
      <NameCon UId="26" Name="pre" />
      <NameCon UId="27" Name="pre" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="in1" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="22" />
      <NameCon UId="26" Name="in2" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="28" Name="in1" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="23" />
      <NameCon UId="27" Name="in1" />
    </Wire>
    <Wire UId="35">
      <IdentCon UId="24" />
      <NameCon UId="27" Name="in2" />
    </Wire>
    <Wire UId="36">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in2" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="25" />
      <NameCon UId="29" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="22" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="23" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Determines if a configuration error has occurred, this is true if either the RAW range or SCALED 
range has not been specified correctly, either:

   •   RAW_MAX &lt;= RAW_MIN (raw range error) OR
   •   SCALE_MAX &lt;= SCALE_MIN (scaled range error)

If either, or both, conditions are true, the status_ConfigError signal is activated
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="24" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="25" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Configuration Error Check</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="26" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_SIM_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FP_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="24" />
    <Part Name="Contact" UId="25" />
    <Part Name="O" UId="26">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="27" />
  </Parts>
  <Wires>
    <Wire UId="28">
      <Powerrail />
      <NameCon UId="24" Name="in" />
      <NameCon UId="25" Name="in" />
    </Wire>
    <Wire UId="29">
      <IdentCon UId="21" />
      <NameCon UId="24" Name="operand" />
    </Wire>
    <Wire UId="30">
      <NameCon UId="24" Name="out" />
      <NameCon UId="26" Name="in1" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="22" />
      <NameCon UId="25" Name="operand" />
    </Wire>
    <Wire UId="32">
      <NameCon UId="25" Name="out" />
      <NameCon UId="26" Name="in2" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="23" />
      <NameCon UId="27" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="27" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="28" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If simulation mode is disabled (CONFIG_SIM_DIS = 1), or if the faceplate is disabled 
(CONFIG_FP_DIS = 1), reset any simulation mode activation signal.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="29" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="2A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Simulation mode disabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="2B" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_RL_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FP_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="25">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="26" />
    <Part Name="O" UId="27">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="28" />
    <Part Name="RCoil" UId="29" />
  </Parts>
  <Wires>
    <Wire UId="30">
      <Powerrail />
      <NameCon UId="25" Name="in" />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="21" />
      <NameCon UId="25" Name="operand" />
    </Wire>
    <Wire UId="32">
      <NameCon UId="25" Name="out" />
      <NameCon UId="27" Name="in1" />
    </Wire>
    <Wire UId="33">
      <IdentCon UId="22" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="34">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="in2" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="27" Name="out" />
      <NameCon UId="28" Name="in" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="23" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="24" />
      <NameCon UId="29" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="2C" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="2D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If remote/local mode is not enabled (CONFIG_RL_EN = 0), or if the faceplate is disabled 
(CONFIG_FP_DIS = 1), reset both mode_RemoteOn and mode_LocalOn.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="2E" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="2F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Remote/local modes disabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="30" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_RL_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_FP_DIS" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="35" />
    <Part Name="Contact" UId="36">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="37">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="38">
      <Negated Name="operand" />
    </Part>
    <Part Name="SCoil" UId="39" />
    <Part Name="Contact" UId="40" />
    <Part Name="Contact" UId="41">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="42" />
    <Part Name="Contact" UId="43" />
    <Part Name="Contact" UId="44">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="45" />
    <Part Name="Contact" UId="46" />
    <Part Name="Contact" UId="47" />
    <Part Name="RCoil" UId="48" />
  </Parts>
  <Wires>
    <Wire UId="49">
      <Powerrail />
      <NameCon UId="35" Name="in" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="21" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="51">
      <NameCon UId="35" Name="out" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="22" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
      <NameCon UId="40" Name="in" />
      <NameCon UId="43" Name="in" />
      <NameCon UId="46" Name="in" />
    </Wire>
    <Wire UId="54">
      <IdentCon UId="23" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="55">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="40" Name="out" />
      <NameCon UId="41" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="27" />
      <NameCon UId="41" Name="operand" />
    </Wire>
    <Wire UId="62">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="28" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="64">
      <IdentCon UId="29" />
      <NameCon UId="43" Name="operand" />
    </Wire>
    <Wire UId="65">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <IdentCon UId="30" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="67">
      <NameCon UId="44" Name="out" />
      <NameCon UId="45" Name="in" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="31" />
      <NameCon UId="45" Name="operand" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="32" />
      <NameCon UId="46" Name="operand" />
    </Wire>
    <Wire UId="70">
      <NameCon UId="46" Name="out" />
      <NameCon UId="47" Name="in" />
    </Wire>
    <Wire UId="71">
      <IdentCon UId="33" />
      <NameCon UId="47" Name="operand" />
    </Wire>
    <Wire UId="72">
      <NameCon UId="47" Name="out" />
      <NameCon UId="48" Name="in" />
    </Wire>
    <Wire UId="73">
      <IdentCon UId="34" />
      <NameCon UId="48" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="31" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="32" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If remote/local mode is enabled (CONFIG_RL_EN = 1), and the faceplate is not disabled 
(CONFIG_FP_DIS = 0), and:

   1.  Neither mode_RemoteOn or mode_LocalOn is active, default to remote mode
   2.  A rising edge is detected on mode_LocalOn, reset mode_RemoteOn (in local)
   3.  A rising edge is detected on mode_RemoteOn, reset mode_LocalOn (in remote)
   4.  Both mode_RemoteOn and mode_LocalOn is active, default to remote mode
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="33" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="34" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal Conditioning — Remote/Local selection if enabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="35" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_True" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ALM_H_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Alm_H_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ALM_L_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Alm_L_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_WRN_H_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Wrn_H_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_WRN_L_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Wrn_L_MaskOn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="30" />
    <Part Name="Contact" UId="31">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="32" />
    <Part Name="Contact" UId="33">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="34" />
    <Part Name="Contact" UId="35">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="36" />
    <Part Name="Contact" UId="37">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="38" />
  </Parts>
  <Wires>
    <Wire UId="39">
      <Powerrail />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="21" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="in" />
      <NameCon UId="33" Name="in" />
      <NameCon UId="35" Name="in" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="22" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="23" />
      <NameCon UId="32" Name="operand" />
    </Wire>
    <Wire UId="45">
      <IdentCon UId="24" />
      <NameCon UId="33" Name="operand" />
    </Wire>
    <Wire UId="46">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="25" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="26" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="35" Name="out" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="27" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="28" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="29" />
      <NameCon UId="38" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="36" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="37" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If an alarm or warning is not enabled (CONFIG_XXX_Y_EN = 0), reset any associated 
mask bit (mode_Xxx_Y_MaskOn).
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="38" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="39" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Check for permanently disabled alarm/warnings</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="3A" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_True" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ALM_H_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Alm_H_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkAlmHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ALM_L_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Alm_L_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkAlmLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_WRN_H_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Wrn_H_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="wrkWrnHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_WRN_L_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Wrn_L_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="wrkWrnLEn" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="34" />
    <Part Name="Contact" UId="35" />
    <Part Name="Contact" UId="36">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="37" />
    <Part Name="Contact" UId="38" />
    <Part Name="Contact" UId="39">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="40" />
    <Part Name="Contact" UId="41" />
    <Part Name="Contact" UId="42">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="43" />
    <Part Name="Contact" UId="44" />
    <Part Name="Contact" UId="45">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="46" />
  </Parts>
  <Wires>
    <Wire UId="47">
      <Powerrail />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="21" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="34" Name="out" />
      <NameCon UId="35" Name="in" />
      <NameCon UId="38" Name="in" />
      <NameCon UId="41" Name="in" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="22" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="51">
      <NameCon UId="35" Name="out" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="23" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="54">
      <IdentCon UId="24" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="25" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="56">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
    </Wire>
    <Wire UId="57">
      <IdentCon UId="26" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="58">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="in" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="28" />
      <NameCon UId="41" Name="operand" />
    </Wire>
    <Wire UId="61">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="29" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="in" />
    </Wire>
    <Wire UId="64">
      <IdentCon UId="30" />
      <NameCon UId="43" Name="operand" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="31" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out" />
      <NameCon UId="45" Name="in" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="32" />
      <NameCon UId="45" Name="operand" />
    </Wire>
    <Wire UId="68">
      <NameCon UId="45" Name="out" />
      <NameCon UId="46" Name="in" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="33" />
      <NameCon UId="46" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="3B" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="3C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If an alarm or warning is both ENABLED and NOT MASKED then the associated (local data) 
working bit wrkXxxYEn bit is set; this is used in the following networks to indicate that the 
alarm/warning is to be evaluated.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="3D" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="3E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Identify alarm/warnings that are to be evaluated </Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="3F" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_True" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkAlmHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_H" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="24">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="wrkAlmLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_L" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="28">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="wrkWrnHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_H" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="32">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="wrkWrnLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_L" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="36">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="38" />
    <Part Name="Contact" UId="39">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="40" />
    <Part Name="Move" UId="41" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Contact" UId="42">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="43" />
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Contact" UId="45">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="46" />
    <Part Name="Move" UId="47" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Contact" UId="48">
      <Negated Name="operand" />
    </Part>
    <Part Name="RCoil" UId="49" />
    <Part Name="Move" UId="50" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="51">
      <Powerrail />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="21" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="42" Name="in" />
      <NameCon UId="45" Name="in" />
      <NameCon UId="48" Name="in" />
    </Wire>
    <Wire UId="54">
      <IdentCon UId="22" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="55">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="in" />
      <NameCon UId="41" Name="en" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="23" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="57">
      <IdentCon UId="24" />
      <NameCon UId="41" Name="in" />
    </Wire>
    <Wire UId="58">
      <NameCon UId="41" Name="out1" />
      <IdentCon UId="25" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="26" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="in" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="27" />
      <NameCon UId="43" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="28" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="63">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="29" />
    </Wire>
    <Wire UId="64">
      <IdentCon UId="30" />
      <NameCon UId="45" Name="operand" />
    </Wire>
    <Wire UId="65">
      <NameCon UId="45" Name="out" />
      <NameCon UId="46" Name="in" />
      <NameCon UId="47" Name="en" />
    </Wire>
    <Wire UId="66">
      <IdentCon UId="31" />
      <NameCon UId="46" Name="operand" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="32" />
      <NameCon UId="47" Name="in" />
    </Wire>
    <Wire UId="68">
      <NameCon UId="47" Name="out1" />
      <IdentCon UId="33" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="34" />
      <NameCon UId="48" Name="operand" />
    </Wire>
    <Wire UId="70">
      <NameCon UId="48" Name="out" />
      <NameCon UId="49" Name="in" />
      <NameCon UId="50" Name="en" />
    </Wire>
    <Wire UId="71">
      <IdentCon UId="35" />
      <NameCon UId="49" Name="operand" />
    </Wire>
    <Wire UId="72">
      <IdentCon UId="36" />
      <NameCon UId="50" Name="in" />
    </Wire>
    <Wire UId="73">
      <NameCon UId="50" Name="out1" />
      <IdentCon UId="37" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="40" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="41" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If an alarm or warning is not enabled or is masked (indicated by wrkXxxYEn = 0), the associated 
message bit (msg_Xxx_Y) for the alarm or warning is permanently deactivated (reset).

Similarly, the associated actual timer for the alarm or warning (actual_Xxx_Y_Timer) is set to 
zero.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="42" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="43" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Reset the data for alarm/warnings that are not enabled</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="44" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_True" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="wrkAlmHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$pret_AlmHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ALM_H_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="wrkAlmLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$Pret_AlmLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ALM_L_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="wrkWrnHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$pret_WrnHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_WRN_H_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="wrkWrnLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="$pret_WrnLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_WRN_L_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="38" />
    <Part Name="PContact" UId="39" />
    <Part Name="Move" UId="40" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="PContact" UId="41" />
    <Part Name="Move" UId="42" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="PContact" UId="43" />
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="PContact" UId="45" />
    <Part Name="Move" UId="46" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="47">
      <Powerrail />
      <NameCon UId="38" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="21" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="pre" />
      <NameCon UId="41" Name="pre" />
      <NameCon UId="43" Name="pre" />
      <NameCon UId="45" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="39" Name="bit" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="22" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="24" />
      <NameCon UId="40" Name="in" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="40" Name="out1" />
      <IdentCon UId="25" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="27" />
      <NameCon UId="41" Name="bit" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="26" />
      <NameCon UId="41" Name="operand" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="en" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="28" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="59">
      <NameCon UId="42" Name="out1" />
      <IdentCon UId="29" />
    </Wire>
    <Wire UId="60">
      <IdentCon UId="31" />
      <NameCon UId="43" Name="bit" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="30" />
      <NameCon UId="43" Name="operand" />
    </Wire>
    <Wire UId="62">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="32" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="33" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="35" />
      <NameCon UId="45" Name="bit" />
    </Wire>
    <Wire UId="66">
      <IdentCon UId="34" />
      <NameCon UId="45" Name="operand" />
    </Wire>
    <Wire UId="67">
      <NameCon UId="45" Name="out" />
      <NameCon UId="46" Name="en" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="36" />
      <NameCon UId="46" Name="in" />
    </Wire>
    <Wire UId="69">
      <NameCon UId="46" Name="out1" />
      <IdentCon UId="37" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="45" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="46" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the working alarm or warning enable signal (wrkXxxYEn) changes to a high state
(i.e. the alarm is enabled during run-time), the alarm/warning timer (actual_Xxx_Y_Timer) is 
pre-loaded with the ON-DELAY time (TIME_XXX_Y_ON_DEL).

This prevents the alarm/warning from activating instantly, if the actual_Value is outside the
alarm/warning setpoint. This condition could arise because the timer is set to zero while ever
the alarm/warning is disabled.

Note:    Technically, the ENABLE bit should not be modified at run-time, it is stored in a static
     data block; however, the condition could arise if that static data block is being used
     as a recipe block. mask signals can of course be changed at run-time.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="47" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="48" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Detect recently enabled alarm/warnings</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="49" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_True" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="AI_SCALE_DATA" />
        <Component Name="LIMIT_UNDER" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="AI_SCALE_DATA" />
        <Component Name="SCALE_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="AI_SCALE_DATA" />
        <Component Name="SCALE_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="LIMIT_UNDER" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="AI_SCALE_DATA" />
        <Component Name="LIMIT_OVER" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="AI_SCALE_DATA" />
        <Component Name="SCALE_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="AI_SCALE_DATA" />
        <Component Name="SCALE_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="LIMIT_OVER" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="30" />
    <Part Name="Gt" UId="31">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="32" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="33">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="34" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="35">
      <Powerrail />
      <NameCon UId="30" Name="in" />
    </Wire>
    <Wire UId="36">
      <IdentCon UId="21" />
      <NameCon UId="30" Name="operand" />
    </Wire>
    <Wire UId="37">
      <NameCon UId="30" Name="out" />
      <NameCon UId="31" Name="pre" />
      <NameCon UId="33" Name="pre" />
    </Wire>
    <Wire UId="38">
      <IdentCon UId="22" />
      <NameCon UId="31" Name="in1" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="23" />
      <NameCon UId="31" Name="in2" />
    </Wire>
    <Wire UId="40">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="en" />
    </Wire>
    <Wire UId="41">
      <IdentCon UId="24" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="42">
      <NameCon UId="32" Name="out1" />
      <IdentCon UId="25" />
    </Wire>
    <Wire UId="43">
      <IdentCon UId="26" />
      <NameCon UId="33" Name="in1" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="27" />
      <NameCon UId="33" Name="in2" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="28" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="34" Name="out1" />
      <IdentCon UId="29" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="4A" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="4B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The out-of-range limits passed to the module (AI_SCALE_DATA) must meet the following 
conditions:

   •   LIMIT_UNDER ≤ SCALE_MIN
   •   LIMIT_OVER ≥ SCALE_MAX

I.e. the instrument cannot be considered either under range or over range if it is within the 
normal range of the instrument.

If the over-range limit (LIMIT_OVER) is less than SCALE_MAX, then it’s value will be replaced by 
SCALE_MAX in all calculations. Similarly, if the under-range limit (LIMIT_UNDER) is greater than 
SCALE_MIN, then it’s value will be replaced by SCALE_MIN in all calculations.

The LIMIT_OVER and LIMIT_UNDER signals in use are stored in actual_AiScaleData (DYNAMIC_DATA 
parameter).
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="4C" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="4D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Signal conditioning — Ensure Out of Range signals are valid</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="4E" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="AI_RAW_SIGNAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiRawData" />
        <Component Name="RAW_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="calPart1" />
      </Symbol>
    </Access>
    <Part Name="Sub" UId="24" DisabledENO="false">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="24" Name="en" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="24" Name="in1" />
    </Wire>
    <Wire UId="27">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="in2" />
    </Wire>
    <Wire UId="28">
      <NameCon UId="24" Name="out" />
      <IdentCon UId="23" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="4F" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="50" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The following formula is used to calculate the scaled (actual_Value) signal:
┌─────────────────────────────────────────┐
│                            (AI_RAW_SIGNAL ─ RAW_MIN) ╳ (SCALE_MAX ─ SCALE_MIN)          │
│actual_Value =  ――――――――――――――――――――――――――  ┼ SCALE_MIN    │
│                              (RAW_MAX ─ RAW_MIN)                    │
└─────────────────────────────────────────┘


Scale value calculation part 1 is (AI_RAW_SIGNAL − RAW_MIN)
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="51" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="52" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>IO evaluation — Instrument read and scale - Part 1</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="53" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="calPart2" />
      </Symbol>
    </Access>
    <Part Name="Sub" UId="24" DisabledENO="false">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="25">
      <Powerrail />
      <NameCon UId="24" Name="en" />
    </Wire>
    <Wire UId="26">
      <IdentCon UId="21" />
      <NameCon UId="24" Name="in1" />
    </Wire>
    <Wire UId="27">
      <IdentCon UId="22" />
      <NameCon UId="24" Name="in2" />
    </Wire>
    <Wire UId="28">
      <NameCon UId="24" Name="out" />
      <IdentCon UId="23" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="54" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="55" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Scale value calculation part 2 (SCALE_MAX − SCALE_MIN)
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="56" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="57" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>IO evaluation — Instrument read and scale - Part 2</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="58" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiRawData" />
        <Component Name="RAW_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiRawData" />
        <Component Name="RAW_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="calPart3" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_ConfigError" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>3.402823E+38</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="calPart3" />
      </Symbol>
    </Access>
    <Part Name="Sub" UId="27" DisabledENO="false">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="28" />
    <Part Name="Move" UId="29" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="30">
      <Powerrail />
      <NameCon UId="27" Name="en" />
    </Wire>
    <Wire UId="31">
      <IdentCon UId="21" />
      <NameCon UId="27" Name="in1" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="in2" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="27" Name="eno" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="34">
      <NameCon UId="27" Name="out" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="35">
      <IdentCon UId="24" />
      <NameCon UId="28" Name="operand" />
    </Wire>
    <Wire UId="36">
      <NameCon UId="28" Name="out" />
      <NameCon UId="29" Name="en" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="25" />
      <NameCon UId="29" Name="in" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="29" Name="out1" />
      <IdentCon UId="26" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="59" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="5A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Scale value calculation part 3 (RAW_MAX − RAW_MIN)

Note:    To prevent inconsistencies and divide by zero errors, if a configuration error is present
     (resulting from incorrect range data and indicated by status_ConfigError = TRUE), the
     denominator of the calculation (CalPart3) is set to 3.402823 × 1038 (i.e. a very large 
     number), the result of this is that the actual_Value will equal RANGE_SCALE_MIN for 
     all permitted values of AI_RAW_SIGNAL.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="5B" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="5C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>IO evaluation — Instrument read and scale - Part 3</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="5D" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="calPart1" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="calPart2" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="calPart3" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkReal" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_ConfigError" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="31">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Part Name="Mul" UId="33" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Div" UId="34" DisabledENO="false">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Add" UId="35" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="36" />
    <Part Name="Move" UId="37" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="38">
      <Powerrail />
      <NameCon UId="33" Name="en" />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="21" />
      <NameCon UId="33" Name="in1" />
    </Wire>
    <Wire UId="40">
      <IdentCon UId="22" />
      <NameCon UId="33" Name="in2" />
    </Wire>
    <Wire UId="41">
      <NameCon UId="33" Name="eno" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="42">
      <NameCon UId="33" Name="out" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="43">
      <IdentCon UId="24" />
      <NameCon UId="34" Name="in1" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="25" />
      <NameCon UId="34" Name="in2" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="34" Name="eno" />
      <NameCon UId="35" Name="en" />
    </Wire>
    <Wire UId="46">
      <NameCon UId="34" Name="out" />
      <IdentCon UId="26" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="27" />
      <NameCon UId="35" Name="in1" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="28" />
      <NameCon UId="35" Name="in2" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="35" Name="out" />
      <IdentCon UId="29" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="30" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="51">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="en" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="31" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="37" Name="out1" />
      <IdentCon UId="32" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="5E" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="5F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
                                                                             (calPart1 x CalPart2)
Complete the calculation SCALE_VALUE =  ————————— + SCALE_MIN
                                                                                        calPart3

If a configuration error exists, the actual value is set to zero for all conditions
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="60" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="61" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>IO evaluation — Instrument read and scale - Part 4</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="62" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_ConfigError" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="LIMIT_UNDER" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_ConfigError" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_UnderRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="LIMIT_OVER" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_ConfigError" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_OverRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_UnderRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_OverRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_OutOfRange" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="34">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="35" />
    <Part Name="O" UId="36">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Lt" UId="37">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="38" />
    <Part Name="O" UId="39">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="40" />
    <Part Name="Gt" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="42" />
    <Part Name="O" UId="43">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="44" />
    <Part Name="Contact" UId="45" />
    <Part Name="Contact" UId="46" />
    <Part Name="O" UId="47">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="48" />
  </Parts>
  <Wires>
    <Wire UId="49">
      <Powerrail />
      <NameCon UId="34" Name="in" />
      <NameCon UId="35" Name="in" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="21" />
      <NameCon UId="34" Name="operand" />
    </Wire>
    <Wire UId="51">
      <NameCon UId="34" Name="out" />
      <NameCon UId="36" Name="in1" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="22" />
      <NameCon UId="35" Name="operand" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="35" Name="out" />
      <NameCon UId="36" Name="in2" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="pre" />
      <NameCon UId="38" Name="in" />
      <NameCon UId="41" Name="pre" />
      <NameCon UId="42" Name="in" />
      <NameCon UId="45" Name="in" />
      <NameCon UId="46" Name="in" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="23" />
      <NameCon UId="37" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="24" />
      <NameCon UId="37" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="37" Name="out" />
      <NameCon UId="39" Name="in1" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="25" />
      <NameCon UId="38" Name="operand" />
    </Wire>
    <Wire UId="59">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="27" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="28" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="41" Name="out" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="29" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="67">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="30" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="69">
      <IdentCon UId="31" />
      <NameCon UId="45" Name="operand" />
    </Wire>
    <Wire UId="70">
      <NameCon UId="45" Name="out" />
      <NameCon UId="47" Name="in1" />
    </Wire>
    <Wire UId="71">
      <IdentCon UId="32" />
      <NameCon UId="46" Name="operand" />
    </Wire>
    <Wire UId="72">
      <NameCon UId="46" Name="out" />
      <NameCon UId="47" Name="in2" />
    </Wire>
    <Wire UId="73">
      <NameCon UId="47" Name="out" />
      <NameCon UId="48" Name="in" />
    </Wire>
    <Wire UId="74">
      <IdentCon UId="33" />
      <NameCon UId="48" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="63" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="64" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The instrument is over range if the actual_Value is greater than actual_AiScaleData.LIMIT_OVER

The instrument is under range if the actual_Value is less than actual_AiScaleData.LIMIT_UNDER

If either of these conditions is true, the common out of range signal is activated

Note:    The out of range signals are not generated if simulation mode is active

Note:    If the range information is incorrect (status_ConfigError = TRUE),
     Then all the out of range signals are activated msg_Flt_UnderRange, 
     msg_Flt_OverRange and msg_Flt_OutOfRange simultaneously, this is true even if
     simulation mode is active.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="65" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="66" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>IO evaluation — Out of range signals</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="67" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="EXT_FAULT" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_External" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="24" />
    <Part Name="Contact" UId="25">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="26" />
  </Parts>
  <Wires>
    <Wire UId="27">
      <Powerrail />
      <NameCon UId="24" Name="in" />
    </Wire>
    <Wire UId="28">
      <IdentCon UId="21" />
      <NameCon UId="24" Name="operand" />
    </Wire>
    <Wire UId="29">
      <NameCon UId="24" Name="out" />
      <NameCon UId="25" Name="in" />
    </Wire>
    <Wire UId="30">
      <IdentCon UId="22" />
      <NameCon UId="25" Name="operand" />
    </Wire>
    <Wire UId="31">
      <NameCon UId="25" Name="out" />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="23" />
      <NameCon UId="26" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="68" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="69" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the EXT_FAULT signal is active (EXT_FAULT = 1), activate the associated message signal

Note:    The signal is ignored if simulation mode is on
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="6A" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="6B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>IO evaluation — External fault detection</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="6C" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_ConfigError" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MIN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_AiScaleData" />
        <Component Name="SCALE_MAX" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimValue" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_OverRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_UnderRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_OutOfRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_External" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="37">
      <Negated Name="operand" />
    </Part>
    <Part Name="Lt" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="39" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Gt" UId="40">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="41" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Contact" UId="42" />
    <Part Name="Move" UId="43" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="44" />
    <Part Name="RCoil" UId="45" />
    <Part Name="RCoil" UId="46" />
    <Part Name="RCoil" UId="47" />
  </Parts>
  <Wires>
    <Wire UId="48">
      <Powerrail />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="49">
      <IdentCon UId="21" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="50">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="40" Name="pre" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="22" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="52">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="53">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="en" />
    </Wire>
    <Wire UId="54">
      <IdentCon UId="24" />
      <NameCon UId="39" Name="in" />
    </Wire>
    <Wire UId="55">
      <NameCon UId="39" Name="out1" />
      <IdentCon UId="25" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="57">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="58">
      <NameCon UId="40" Name="out" />
      <NameCon UId="41" Name="en" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="28" />
      <NameCon UId="41" Name="in" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out1" />
      <IdentCon UId="29" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="30" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <NameCon UId="42" Name="out" />
      <NameCon UId="43" Name="en" />
      <NameCon UId="44" Name="in" />
      <NameCon UId="45" Name="in" />
      <NameCon UId="46" Name="in" />
      <NameCon UId="47" Name="in" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="31" />
      <NameCon UId="43" Name="in" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out1" />
      <IdentCon UId="32" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="33" />
      <NameCon UId="44" Name="operand" />
    </Wire>
    <Wire UId="66">
      <IdentCon UId="34" />
      <NameCon UId="45" Name="operand" />
    </Wire>
    <Wire UId="67">
      <IdentCon UId="35" />
      <NameCon UId="46" Name="operand" />
    </Wire>
    <Wire UId="68">
      <IdentCon UId="36" />
      <NameCon UId="47" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="6D" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="6E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If simulation mode is enabled (mode_SimOn = 1) and a configuration error is not present,
(status_ConfigError = 0) overwrite the actual_Value with the mode_SimValue signal set by the 
operator.

Note:    Any fault signals will be suppressed (turned off) is simulation mode is active
     and a configuration error is not present

     The simulated value (mode_SimValue) is restricted to the range given in 
     actual_AiScaleData.SCALE_MIN and actual_AiScaleData.SCALE_MAX
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="6F" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="70" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Operating mode — Simulation mode</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="71" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkAlmHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_H_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_H_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="26">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_H_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="31" />
    <Part Name="Move" UId="32" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="33">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="34" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Sub" UId="35" DisabledENO="false">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="36">
      <Powerrail />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="21" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="en" />
      <NameCon UId="33" Name="pre" />
      <NameCon UId="35" Name="en" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="22" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="40">
      <NameCon UId="32" Name="out1" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="41">
      <IdentCon UId="24" />
      <NameCon UId="33" Name="in1" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="25" />
      <NameCon UId="33" Name="in2" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="26" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="34" Name="out1" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="28" />
      <NameCon UId="35" Name="in1" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="29" />
      <NameCon UId="35" Name="in2" />
    </Wire>
    <Wire UId="48">
      <NameCon UId="35" Name="out" />
      <IdentCon UId="30" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="72" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="73" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The hysteresis value must not be a negative number. If it is, it is a value of zero is used in
its place.

wrkHyst holds the value of the hysteresis signal being applied, this will either be 
SP_ALM_H_HYST_VAL or zero (if SP_ALM_H_HYST_VAL were set to a negative value)

calHystAbs holds the absolute value of the alarm reset threshold, for high alarms this is:
┌─────────────────────┐
│ calHystAbs = SP_ALM_H_VAL — wrkHyst      │
└─────────────────────┘

The two threshold values for the high alarm are thus:

     High alarm activation threshold = SP_ALM_H_VAL
     High alarm reset threshold          = calHystAbs

Note:    The hysteresis is only checked if alarm is being evaluated
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="74" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="75" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>High alarm — Ensure hysteresis is not negative (error check)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="76" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkAlmHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_H_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_H_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ALM_H_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37">
      <Negated Name="operand" />
    </Part>
    <Part Name="Ge" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="42" />
    <Part Name="Lt" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="77" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="78" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the high alarm has been enabled and is not masked and the actual_Value is greater than or 
equal to the alarm setpoint (SP_ALM_H_VAL), but the alarm has not yet been triggered 
(msg_Alm_H = 0) then the ON-DELAY phase is active (the alarm timer is counting down).

The timer will begin to count down from the value in TIME_ALM_H_ON_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the high alarm timer is less than or equal to 
zero, then the ON-DELAY has expired and the High Alarm message will become active.

If at any point during the ON-DELAY count down, the actual_Value drops below the activation
setpoint (SP_ALM_H_VAL), the timer will be reset to the TIME_ALM_H_ON_DEL value, forcing 
the ON-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="79" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="7A" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>High alarm — Check for activation level and ON-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="7B" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkAlmHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ALM_H_OFF_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_H_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37" />
    <Part Name="Lt" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="42" />
    <Part Name="Ge" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="7C" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="7D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the high alarm has been enabled and is not masked and the high alarm message is active 
(msg_Alm_H = 1), but the actual_Value has fallen below the reset threshold (held in calHystAbs) 
then the OFF-DELAY phase is active (the alarm timer is counting down).

The timer will begin to count down from the value in TIME_ALM_H_OFF_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the high alarm timer is less than or equal to 
zero, then the OFF-DELAY has expired and the high alarm message will be reset.

If at any point during the OFF-DELAY count down, the actual_Value returns above the reset
threshold (calHystAbs), the timer will be reset to the TIME_ALM_H_OFF_DEL value, forcing 
the OFF-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="7E" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="7F" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>High alarm — Check for reset level and OFF-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="80" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkAlmLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_L_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_L_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="26">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_L_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="31" />
    <Part Name="Move" UId="32" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="33">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="34" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Add" UId="35" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
      <AutomaticTyped Name="SrcType" />
    </Part>
  </Parts>
  <Wires>
    <Wire UId="36">
      <Powerrail />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="21" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="en" />
      <NameCon UId="33" Name="pre" />
      <NameCon UId="35" Name="en" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="22" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="40">
      <NameCon UId="32" Name="out1" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="41">
      <IdentCon UId="24" />
      <NameCon UId="33" Name="in1" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="25" />
      <NameCon UId="33" Name="in2" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="26" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="34" Name="out1" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="28" />
      <NameCon UId="35" Name="in1" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="29" />
      <NameCon UId="35" Name="in2" />
    </Wire>
    <Wire UId="48">
      <NameCon UId="35" Name="out" />
      <IdentCon UId="30" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="81" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="82" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The hysteresis value must not be a negative number. If it is, it is a value of zero is used in
its place.

wrkHyst holds the value of the hysteresis signal being applied, this will either be 
SP_ALM_L_HYST_VAL or zero (if SP_ALM_L_HYST_VAL were set to a negative value)

calHystAbs holds the absolute value of the alarm reset threshold, for low alarms this is:
┌─────────────────────┐
│ calHystAbs = SP_ALM_L_VAL ┼ wrkHyst       │
└─────────────────────┘

The two threshold values for the low alarm are thus:

     Low alarm activation threshold = SP_ALM_L_VAL
     Low alarm reset threshold          = calHystAbs

Note:    The hysteresis is only checked if alarm is being evaluated
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="83" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="84" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Low alarm — Ensure hysteresis is not negative (error check)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="85" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkAlmLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_L_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_ALM_L_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ALM_L_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37">
      <Negated Name="operand" />
    </Part>
    <Part Name="Le" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="42" />
    <Part Name="Gt" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="86" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="87" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the low alarm has been enabled and is not masked and the actual_Value is less than or 
equal to the alarm setpoint (SP_ALM_L_VAL), but the alarm has not yet been triggered 
(msg_Alm_L = 0) then the ON-DELAY phase is active (the alarm timer is counting down).

The timer will begin to count down from the value in TIME_ALM_L_ON_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the Low alarm timer is less than or equal to 
zero, then the ON-DELAY has expired and the Low Alarm message will become active.

If at any point during the ON-DELAY count down, the actual_Value rises above the activation
setpoint (SP_ALM_L_VAL), the timer will be reset to the TIME_ALM_L_ON_DEL value, forcing 
the ON-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="88" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="89" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Low alarm — Check for activation level and ON-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="8A" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkAlmLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_ALM_L_OFF_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Alm_L_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37" />
    <Part Name="Gt" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="42" />
    <Part Name="Le" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="8B" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="8C" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the low alarm has been enabled and is not masked and the Low alarm message is active 
(msg_Alm_L = 1), but the actual_Value has fallen below the reset threshold (held in calHystAbs) 
then the OFF-DELAY phase is active (the alarm timer is counting down).

The timer will begin to count down from the value in TIME_ALM_L_OFF_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the Low alarm timer is less than or equal to 
zero, then the OFF-DELAY has expired and the Low alarm message will be reset.

If at any point during the OFF-DELAY count down, the actual_Value returns above the reset
threshold (calHystAbs), the timer will be reset to the TIME_ALM_L_OFF_DEL value, forcing 
the OFF-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="8D" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="8E" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Low alarm — Check for reset level and OFF-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="8F" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkWrnHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_H_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_H_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="26">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_H_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="31" />
    <Part Name="Move" UId="32" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="33">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="34" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Sub" UId="35" DisabledENO="false">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="36">
      <Powerrail />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="21" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="en" />
      <NameCon UId="33" Name="pre" />
      <NameCon UId="35" Name="en" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="22" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="40">
      <NameCon UId="32" Name="out1" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="41">
      <IdentCon UId="24" />
      <NameCon UId="33" Name="in1" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="25" />
      <NameCon UId="33" Name="in2" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="26" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="34" Name="out1" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="28" />
      <NameCon UId="35" Name="in1" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="29" />
      <NameCon UId="35" Name="in2" />
    </Wire>
    <Wire UId="48">
      <NameCon UId="35" Name="out" />
      <IdentCon UId="30" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="90" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="91" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The hysteresis value must not be a negative number. If it is, it is a value of zero is used in
its place.

wrkHyst holds the value of the hysteresis signal being applied, this will either be 
SP_WRN_H_HYST_VAL or zero (if SP_WRN_H_HYST_VAL were set to a negative value)

calHystAbs holds the absolute value of the warning reset threshold, for high warnings this is:
┌─────────────────────┐
│ calHystAbs = SP_WRN_H_VAL — wrkHyst      │
└─────────────────────┘

The two threshold values for the high warning are thus:

     High warning activation threshold = SP_WRN_H_VAL
     High warning reset threshold          = calHystAbs

Note:    The hysteresis is only checked if warning is being evaluated
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="92" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="93" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>High warning — Ensure hysteresis is not negative (error check)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="94" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkWrnHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_H_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_H_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_WRN_H_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37">
      <Negated Name="operand" />
    </Part>
    <Part Name="Ge" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="42" />
    <Part Name="Lt" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="95" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="96" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the high warning has been enabled and is not masked and the actual_Value is greater than or 
equal to the warning setpoint (SP_WRN_H_VAL), but the warning has not yet been triggered 
(msg_Wrn_H = 0) then the ON-DELAY phase is active (the warning timer is counting down).

The timer will begin to count down from the value in TIME_WRN_H_ON_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the high warning timer is less than or equal to 
zero, then the ON-DELAY has expired and the High warning message will become active.

If at any point during the ON-DELAY count down, the actual_Value drops below the activation
setpoint (SP_WRN_H_VAL), the timer will be reset to the TIME_WRN_H_ON_DEL value, forcing 
the ON-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="97" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="98" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>High warning — Check for activation level and ON-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="99" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkWrnHEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_WRN_H_OFF_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_H_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37" />
    <Part Name="Lt" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="42" />
    <Part Name="Ge" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="9A" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="9B" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the high warning has been enabled and is not masked and the high warning message is active 
(msg_Wrn_H = 1), but the actual_Value has fallen below the reset threshold (held in calHystAbs) 
then the OFF-DELAY phase is active (the warning timer is counting down).

The timer will begin to count down from the value in TIME_WRN_H_OFF_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the high warning timer is less than or equal to 
zero, then the OFF-DELAY has expired and the high warning message will be reset.

If at any point during the OFF-DELAY count down, the actual_Value returns above the reset
threshold (calHystAbs), the timer will be reset to the TIME_WRN_H_OFF_DEL value, forcing 
the OFF-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="9C" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="9D" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>High warning — Check for reset level and OFF-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="9E" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkWrnLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_L_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_L_HYST_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="25">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LiteralConstant" UId="26">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_L_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="wrkHyst" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="31" />
    <Part Name="Move" UId="32" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Lt" UId="33">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="34" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
    <Part Name="Add" UId="35" DisabledENO="true">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
      <AutomaticTyped Name="SrcType" />
    </Part>
  </Parts>
  <Wires>
    <Wire UId="36">
      <Powerrail />
      <NameCon UId="31" Name="in" />
    </Wire>
    <Wire UId="37">
      <IdentCon UId="21" />
      <NameCon UId="31" Name="operand" />
    </Wire>
    <Wire UId="38">
      <NameCon UId="31" Name="out" />
      <NameCon UId="32" Name="en" />
      <NameCon UId="33" Name="pre" />
      <NameCon UId="35" Name="en" />
    </Wire>
    <Wire UId="39">
      <IdentCon UId="22" />
      <NameCon UId="32" Name="in" />
    </Wire>
    <Wire UId="40">
      <NameCon UId="32" Name="out1" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="41">
      <IdentCon UId="24" />
      <NameCon UId="33" Name="in1" />
    </Wire>
    <Wire UId="42">
      <IdentCon UId="25" />
      <NameCon UId="33" Name="in2" />
    </Wire>
    <Wire UId="43">
      <NameCon UId="33" Name="out" />
      <NameCon UId="34" Name="en" />
    </Wire>
    <Wire UId="44">
      <IdentCon UId="26" />
      <NameCon UId="34" Name="in" />
    </Wire>
    <Wire UId="45">
      <NameCon UId="34" Name="out1" />
      <IdentCon UId="27" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="28" />
      <NameCon UId="35" Name="in1" />
    </Wire>
    <Wire UId="47">
      <IdentCon UId="29" />
      <NameCon UId="35" Name="in2" />
    </Wire>
    <Wire UId="48">
      <NameCon UId="35" Name="out" />
      <IdentCon UId="30" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="9F" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="A0" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The hysteresis value must not be a negative number. If it is, it is a value of zero is used in
its place.

wrkHyst holds the value of the hysteresis signal being applied, this will either be 
SP_WRN_L_HYST_VAL or zero (if SP_WRN_L_HYST_VAL were set to a negative value)

calHystAbs holds the absolute value of the warning reset threshold, for low warnings this is:
┌─────────────────────┐
│ calHystAbs = SP_WRN_L_VAL ┼ wrkHyst      │
└─────────────────────┘

The two threshold values for the low warning are thus:

     Low warning activation threshold = SP_WRN_L_VAL
     Low warning reset threshold          = calHystAbs

Note:    The hysteresis is only checked if warning is being evaluated
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="A1" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="A2" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Low warning — Ensure hysteresis is not negative (error check)</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="A3" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkWrnLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_L_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="SP_WRN_L_VAL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_WRN_L_ON_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37">
      <Negated Name="operand" />
    </Part>
    <Part Name="Le" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="SCoil" UId="42" />
    <Part Name="Gt" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="A4" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="A5" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the low warning has been enabled and is not masked and the actual_Value is less than or 
equal to the warning setpoint (SP_WRN_L_VAL), but the warning has not yet been triggered 
(msg_Wrn_L = 0) then the ON-DELAY phase is active (the warning timer is counting down).

The timer will begin to count down from the value in TIME_WRN_L_ON_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the Low warning timer is less than or equal to 
zero, then the ON-DELAY has expired and the Low Warning message will become active.

If at any point during the ON-DELAY count down, the actual_Value rises above the activation
setpoint (SP_WRN_L_VAL), the timer will be reset to the TIME_WRN_L_ON_DEL value, forcing 
the ON-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="A6" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="A7" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Low warning — Check for activation level and ON-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="A8" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="wrkWrnLEn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_200ms" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="27">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.2</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="30">
      <Constant>
        <ConstantType>Real</ConstantType>
        <ConstantValue>0.0</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Value" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="calHystAbs" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="TIME_WRN_L_OFF_DEL" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="actual_Wrn_L_Timer" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="36" />
    <Part Name="Contact" UId="37" />
    <Part Name="Gt" UId="38">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Contact" UId="39" />
    <Part Name="Sub" UId="40" DisabledENO="true">
      <AutomaticTyped Name="SrcType" />
    </Part>
    <Part Name="Le" UId="41">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="RCoil" UId="42" />
    <Part Name="Le" UId="43">
      <TemplateValue Name="SrcType" Type="Type">Real</TemplateValue>
    </Part>
    <Part Name="Move" UId="44" DisabledENO="false">
      <TemplateValue Name="Card" Type="Cardinality">1</TemplateValue>
    </Part>
  </Parts>
  <Wires>
    <Wire UId="45">
      <Powerrail />
      <NameCon UId="36" Name="in" />
    </Wire>
    <Wire UId="46">
      <IdentCon UId="21" />
      <NameCon UId="36" Name="operand" />
    </Wire>
    <Wire UId="47">
      <NameCon UId="36" Name="out" />
      <NameCon UId="37" Name="in" />
    </Wire>
    <Wire UId="48">
      <IdentCon UId="22" />
      <NameCon UId="37" Name="operand" />
    </Wire>
    <Wire UId="49">
      <NameCon UId="37" Name="out" />
      <NameCon UId="38" Name="pre" />
      <NameCon UId="43" Name="pre" />
    </Wire>
    <Wire UId="50">
      <IdentCon UId="23" />
      <NameCon UId="38" Name="in1" />
    </Wire>
    <Wire UId="51">
      <IdentCon UId="24" />
      <NameCon UId="38" Name="in2" />
    </Wire>
    <Wire UId="52">
      <NameCon UId="38" Name="out" />
      <NameCon UId="39" Name="in" />
      <NameCon UId="41" Name="pre" />
    </Wire>
    <Wire UId="53">
      <IdentCon UId="25" />
      <NameCon UId="39" Name="operand" />
    </Wire>
    <Wire UId="54">
      <NameCon UId="39" Name="out" />
      <NameCon UId="40" Name="en" />
    </Wire>
    <Wire UId="55">
      <IdentCon UId="26" />
      <NameCon UId="40" Name="in1" />
    </Wire>
    <Wire UId="56">
      <IdentCon UId="27" />
      <NameCon UId="40" Name="in2" />
    </Wire>
    <Wire UId="57">
      <NameCon UId="40" Name="out" />
      <IdentCon UId="28" />
    </Wire>
    <Wire UId="58">
      <IdentCon UId="29" />
      <NameCon UId="41" Name="in1" />
    </Wire>
    <Wire UId="59">
      <IdentCon UId="30" />
      <NameCon UId="41" Name="in2" />
    </Wire>
    <Wire UId="60">
      <NameCon UId="41" Name="out" />
      <NameCon UId="42" Name="in" />
    </Wire>
    <Wire UId="61">
      <IdentCon UId="31" />
      <NameCon UId="42" Name="operand" />
    </Wire>
    <Wire UId="62">
      <IdentCon UId="32" />
      <NameCon UId="43" Name="in1" />
    </Wire>
    <Wire UId="63">
      <IdentCon UId="33" />
      <NameCon UId="43" Name="in2" />
    </Wire>
    <Wire UId="64">
      <NameCon UId="43" Name="out" />
      <NameCon UId="44" Name="en" />
    </Wire>
    <Wire UId="65">
      <IdentCon UId="34" />
      <NameCon UId="44" Name="in" />
    </Wire>
    <Wire UId="66">
      <NameCon UId="44" Name="out1" />
      <IdentCon UId="35" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="A9" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="AA" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
If the low warning has been enabled and is not masked and the Low warning message is active 
(msg_Wrn_L = 1), but the actual_Value has fallen below the reset threshold (held in calHystAbs) 
then the OFF-DELAY phase is active (the warning timer is counting down).

The timer will begin to count down from the value in TIME_WRN_L_OFF_DEL using the 200ms 
pulse (it will count down in increments of 0.2s). If the Low warning timer is less than or equal to 
zero, then the OFF-DELAY has expired and the Low warning message will be reset.

If at any point during the OFF-DELAY count down, the actual_Value returns above the reset
threshold (calHystAbs), the timer will be reset to the TIME_WRN_L_OFF_DEL value, forcing 
the OFF-DELAY to start again.
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="AB" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="AC" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Low warning — Check for reset level and OFF-DELAY timer</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="AD" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_True" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="22">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Alm_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="24">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Alm_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Alm_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="26">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="27">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Wrn_H" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="28">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Wrn_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="29">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Wrn_L" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="30">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Alm_H_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="31">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Alm_H_Mask" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="32">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Alm_L_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="33">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Alm_L_Mask" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="34">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Wrn_H_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="35">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Wrn_H_Mask" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="36">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_Wrn_L_MaskOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="37">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Wrn_L_Mask" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="38">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ALM_H_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="39">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Alm_H_Dis" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="40">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_ALM_L_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="41">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Alm_L_Dis" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="42">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_WRN_H_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="43">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Wrn_H_Dis" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="44">
      <Symbol>
        <Component Name="STATIC_DATA" />
        <Component Name="CONFIG_WRN_L_EN" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="45">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Wrn_L_Dis" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="46">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_OutOfRange" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="47">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="msg_Flt_External" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="48">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_Fault" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="49">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="50">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_SimOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="51">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="52">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="53">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="54">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="55">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_LocalOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="56">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="mode_RemoteOn" />
      </Symbol>
    </Access>
    <Access Scope="LocalVariable" UId="57">
      <Symbol>
        <Component Name="DYNAMIC_DATA" />
        <Component Name="status_RLOff" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="58" />
    <Part Name="Contact" UId="59" />
    <Part Name="Coil" UId="60" />
    <Part Name="Contact" UId="61" />
    <Part Name="Coil" UId="62" />
    <Part Name="Contact" UId="63" />
    <Part Name="Coil" UId="64" />
    <Part Name="Contact" UId="65" />
    <Part Name="Coil" UId="66" />
    <Part Name="Contact" UId="67" />
    <Part Name="Coil" UId="68" />
    <Part Name="Contact" UId="69" />
    <Part Name="Coil" UId="70" />
    <Part Name="Contact" UId="71" />
    <Part Name="Coil" UId="72" />
    <Part Name="Contact" UId="73" />
    <Part Name="Coil" UId="74" />
    <Part Name="Contact" UId="75">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="76" />
    <Part Name="Contact" UId="77">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="78" />
    <Part Name="Contact" UId="79">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="80" />
    <Part Name="Contact" UId="81">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="82" />
    <Part Name="Contact" UId="83" />
    <Part Name="Contact" UId="84" />
    <Part Name="O" UId="85">
      <TemplateValue Name="Card" Type="Cardinality">2</TemplateValue>
    </Part>
    <Part Name="Coil" UId="86" />
    <Part Name="Contact" UId="87" />
    <Part Name="Coil" UId="88" />
    <Part Name="Contact" UId="89" />
    <Part Name="Coil" UId="90" />
    <Part Name="Contact" UId="91" />
    <Part Name="Coil" UId="92" />
    <Part Name="Contact" UId="93">
      <Negated Name="operand" />
    </Part>
    <Part Name="Contact" UId="94">
      <Negated Name="operand" />
    </Part>
    <Part Name="Coil" UId="95" />
  </Parts>
  <Wires>
    <Wire UId="96">
      <Powerrail />
      <NameCon UId="58" Name="in" />
    </Wire>
    <Wire UId="97">
      <IdentCon UId="21" />
      <NameCon UId="58" Name="operand" />
    </Wire>
    <Wire UId="98">
      <NameCon UId="58" Name="out" />
      <NameCon UId="59" Name="in" />
      <NameCon UId="61" Name="in" />
      <NameCon UId="63" Name="in" />
      <NameCon UId="65" Name="in" />
      <NameCon UId="67" Name="in" />
      <NameCon UId="69" Name="in" />
      <NameCon UId="71" Name="in" />
      <NameCon UId="73" Name="in" />
      <NameCon UId="75" Name="in" />
      <NameCon UId="77" Name="in" />
      <NameCon UId="79" Name="in" />
      <NameCon UId="81" Name="in" />
      <NameCon UId="83" Name="in" />
      <NameCon UId="84" Name="in" />
      <NameCon UId="87" Name="in" />
      <NameCon UId="89" Name="in" />
      <NameCon UId="91" Name="in" />
      <NameCon UId="93" Name="in" />
    </Wire>
    <Wire UId="99">
      <IdentCon UId="22" />
      <NameCon UId="59" Name="operand" />
    </Wire>
    <Wire UId="100">
      <NameCon UId="59" Name="out" />
      <NameCon UId="60" Name="in" />
    </Wire>
    <Wire UId="101">
      <IdentCon UId="23" />
      <NameCon UId="60" Name="operand" />
    </Wire>
    <Wire UId="102">
      <IdentCon UId="24" />
      <NameCon UId="61" Name="operand" />
    </Wire>
    <Wire UId="103">
      <NameCon UId="61" Name="out" />
      <NameCon UId="62" Name="in" />
    </Wire>
    <Wire UId="104">
      <IdentCon UId="25" />
      <NameCon UId="62" Name="operand" />
    </Wire>
    <Wire UId="105">
      <IdentCon UId="26" />
      <NameCon UId="63" Name="operand" />
    </Wire>
    <Wire UId="106">
      <NameCon UId="63" Name="out" />
      <NameCon UId="64" Name="in" />
    </Wire>
    <Wire UId="107">
      <IdentCon UId="27" />
      <NameCon UId="64" Name="operand" />
    </Wire>
    <Wire UId="108">
      <IdentCon UId="28" />
      <NameCon UId="65" Name="operand" />
    </Wire>
    <Wire UId="109">
      <NameCon UId="65" Name="out" />
      <NameCon UId="66" Name="in" />
    </Wire>
    <Wire UId="110">
      <IdentCon UId="29" />
      <NameCon UId="66" Name="operand" />
    </Wire>
    <Wire UId="111">
      <IdentCon UId="30" />
      <NameCon UId="67" Name="operand" />
    </Wire>
    <Wire UId="112">
      <NameCon UId="67" Name="out" />
      <NameCon UId="68" Name="in" />
    </Wire>
    <Wire UId="113">
      <IdentCon UId="31" />
      <NameCon UId="68" Name="operand" />
    </Wire>
    <Wire UId="114">
      <IdentCon UId="32" />
      <NameCon UId="69" Name="operand" />
    </Wire>
    <Wire UId="115">
      <NameCon UId="69" Name="out" />
      <NameCon UId="70" Name="in" />
    </Wire>
    <Wire UId="116">
      <IdentCon UId="33" />
      <NameCon UId="70" Name="operand" />
    </Wire>
    <Wire UId="117">
      <IdentCon UId="34" />
      <NameCon UId="71" Name="operand" />
    </Wire>
    <Wire UId="118">
      <NameCon UId="71" Name="out" />
      <NameCon UId="72" Name="in" />
    </Wire>
    <Wire UId="119">
      <IdentCon UId="35" />
      <NameCon UId="72" Name="operand" />
    </Wire>
    <Wire UId="120">
      <IdentCon UId="36" />
      <NameCon UId="73" Name="operand" />
    </Wire>
    <Wire UId="121">
      <NameCon UId="73" Name="out" />
      <NameCon UId="74" Name="in" />
    </Wire>
    <Wire UId="122">
      <IdentCon UId="37" />
      <NameCon UId="74" Name="operand" />
    </Wire>
    <Wire UId="123">
      <IdentCon UId="38" />
      <NameCon UId="75" Name="operand" />
    </Wire>
    <Wire UId="124">
      <NameCon UId="75" Name="out" />
      <NameCon UId="76" Name="in" />
    </Wire>
    <Wire UId="125">
      <IdentCon UId="39" />
      <NameCon UId="76" Name="operand" />
    </Wire>
    <Wire UId="126">
      <IdentCon UId="40" />
      <NameCon UId="77" Name="operand" />
    </Wire>
    <Wire UId="127">
      <NameCon UId="77" Name="out" />
      <NameCon UId="78" Name="in" />
    </Wire>
    <Wire UId="128">
      <IdentCon UId="41" />
      <NameCon UId="78" Name="operand" />
    </Wire>
    <Wire UId="129">
      <IdentCon UId="42" />
      <NameCon UId="79" Name="operand" />
    </Wire>
    <Wire UId="130">
      <NameCon UId="79" Name="out" />
      <NameCon UId="80" Name="in" />
    </Wire>
    <Wire UId="131">
      <IdentCon UId="43" />
      <NameCon UId="80" Name="operand" />
    </Wire>
    <Wire UId="132">
      <IdentCon UId="44" />
      <NameCon UId="81" Name="operand" />
    </Wire>
    <Wire UId="133">
      <NameCon UId="81" Name="out" />
      <NameCon UId="82" Name="in" />
    </Wire>
    <Wire UId="134">
      <IdentCon UId="45" />
      <NameCon UId="82" Name="operand" />
    </Wire>
    <Wire UId="135">
      <IdentCon UId="46" />
      <NameCon UId="83" Name="operand" />
    </Wire>
    <Wire UId="136">
      <NameCon UId="83" Name="out" />
      <NameCon UId="85" Name="in1" />
    </Wire>
    <Wire UId="137">
      <IdentCon UId="47" />
      <NameCon UId="84" Name="operand" />
    </Wire>
    <Wire UId="138">
      <NameCon UId="84" Name="out" />
      <NameCon UId="85" Name="in2" />
    </Wire>
    <Wire UId="139">
      <NameCon UId="85" Name="out" />
      <NameCon UId="86" Name="in" />
    </Wire>
    <Wire UId="140">
      <IdentCon UId="48" />
      <NameCon UId="86" Name="operand" />
    </Wire>
    <Wire UId="141">
      <IdentCon UId="49" />
      <NameCon UId="87" Name="operand" />
    </Wire>
    <Wire UId="142">
      <NameCon UId="87" Name="out" />
      <NameCon UId="88" Name="in" />
    </Wire>
    <Wire UId="143">
      <IdentCon UId="50" />
      <NameCon UId="88" Name="operand" />
    </Wire>
    <Wire UId="144">
      <IdentCon UId="51" />
      <NameCon UId="89" Name="operand" />
    </Wire>
    <Wire UId="145">
      <NameCon UId="89" Name="out" />
      <NameCon UId="90" Name="in" />
    </Wire>
    <Wire UId="146">
      <IdentCon UId="52" />
      <NameCon UId="90" Name="operand" />
    </Wire>
    <Wire UId="147">
      <IdentCon UId="53" />
      <NameCon UId="91" Name="operand" />
    </Wire>
    <Wire UId="148">
      <NameCon UId="91" Name="out" />
      <NameCon UId="92" Name="in" />
    </Wire>
    <Wire UId="149">
      <IdentCon UId="54" />
      <NameCon UId="92" Name="operand" />
    </Wire>
    <Wire UId="150">
      <IdentCon UId="55" />
      <NameCon UId="93" Name="operand" />
    </Wire>
    <Wire UId="151">
      <NameCon UId="93" Name="out" />
      <NameCon UId="94" Name="in" />
    </Wire>
    <Wire UId="152">
      <IdentCon UId="56" />
      <NameCon UId="94" Name="operand" />
    </Wire>
    <Wire UId="153">
      <NameCon UId="94" Name="out" />
      <NameCon UId="95" Name="in" />
    </Wire>
    <Wire UId="154">
      <IdentCon UId="57" />
      <NameCon UId="95" Name="operand" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="AE" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="AF" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
The status signals for faults, alarms and warnings are either duplicates of the message signals 
(signals beginning with msg_) or logical combinations of them.

The following is a full list of the status signals:

 ――――――――――――――――――――――――――――――――――――――――――
 SIGNAL          FUNCTION            TYPE   DETAILS
 ――――――――――――――――――――――――――――――――――――――――――
 status_Alm_H       Identical to: msg_Alm_H    Bool    1 = high alm active, 0 = no alm

 status_Alm_L        Identical to: msg_Alm_L       Bool    1 = low alm active, 0 = no alm

 status_Wrn_H       Identical to: msg_Wrn_H    Bool    1 = high wrn active, 0 = no wrn

 status_Wrn_L        Identical to: msg_Wrn_L     Bool    1 = low wrn active, 0 = no wrn

 status_Alm_H_Mask     High alarm is masked        Bool    1 = alm masked, 0 = normal

 status_Alm_L_Mask      Low alarm is masked         Bool    1 = alm masked, 0 = normal

 status_Wrn_H_Mask     High warning is masked       Bool    1 = wrn masked, 0 = normal

 status_Wrn_L_Mask      Low warning is masked        Bool    1 = wrn masked, 0 = normal

 status_Alm_H_Dis         High alarm is disabled       Bool    1 = alm disabled, 0 = normal

 status_Alm_L_Dis          Low alarm is disabled        Bool    1 = alm disabled, 0 = normal

 status_Wrn_H_Dis         High warning is disabled   Bool    1 = wrn disabled, 0 = normal

 status_Wrn_L_Dis          Low warning is disabled       Bool    1 = wrn disabled, 0 = normal

 status_Fault      Indicates any of the msg_Flt    Bool    1 = fault active, 0 = healthy
               signals are active:
                 msg_Flt_UnderRange
                 msg_Flt_OverRange
                 msg_Flt_OutOfRange
                 msg_Flt_External 

               Note: msg_Flt_OutOfRange is already a combination of
                          msg_Flt_UnderRange and msg_Flt_OverRange

 status_SimOn      Status simulation mode on     Bool    1 = sim on, 0 = sim off

 status_RemoteOn     Status remote mode on     Bool    1 = rem on, 0 = rem off


 status_LocalOn      Status local mode on      Bool    1 = loc on, 0 = loc off 

 status_RLOff      Status ALL mode is on           Bool    1 = ALL mode on, 
                              0 = ALL mode off
 ――――――――――――――――――――――――――――――――――――――――――
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="B0" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="B1" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>Status signals</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="B2" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><FlgNet xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4">
  <Parts>
    <Access Scope="LocalVariable" UId="21">
      <Symbol>
        <Component Name="SYS_SIGNALS" />
        <Component Name="_False" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="22">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'MIT LICENSE'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="23">
      <Symbol>
        <Component Name="licInfo" />
        <Component Name="LICENCE_TYPE" />
      </Symbol>
    </Access>
    <Access Scope="LiteralConstant" UId="24">
      <Constant>
        <ConstantType>String</ConstantType>
        <ConstantValue>'2020 Michael Gledhill'</ConstantValue>
      </Constant>
    </Access>
    <Access Scope="LocalVariable" UId="25">
      <Symbol>
        <Component Name="licInfo" />
        <Component Name="COPYRIGHT" />
      </Symbol>
    </Access>
    <Part Name="Contact" UId="26">
      <Negated Name="operand" />
    </Part>
    <Part Name="S_Move" UId="27" DisabledENO="true" />
    <Part Name="S_Move" UId="28" DisabledENO="true" />
  </Parts>
  <Wires>
    <Wire UId="29">
      <Powerrail />
      <NameCon UId="26" Name="in" />
    </Wire>
    <Wire UId="30">
      <IdentCon UId="21" />
      <NameCon UId="26" Name="operand" />
    </Wire>
    <Wire UId="31">
      <NameCon UId="26" Name="out" />
      <NameCon UId="27" Name="en" />
      <NameCon UId="28" Name="en" />
    </Wire>
    <Wire UId="32">
      <IdentCon UId="22" />
      <NameCon UId="27" Name="in" />
    </Wire>
    <Wire UId="33">
      <NameCon UId="27" Name="out" />
      <IdentCon UId="23" />
    </Wire>
    <Wire UId="34">
      <IdentCon UId="24" />
      <NameCon UId="28" Name="in" />
    </Wire>
    <Wire UId="35">
      <NameCon UId="28" Name="out" />
      <IdentCon UId="25" />
    </Wire>
  </Wires>
</FlgNet></NetworkSource>
          <ProgrammingLanguage>LAD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="B3" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="B4" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
LICENCE AND CONTACT INFORMATION

This software and its associated documentation is made available under the MIT Licence:

════════════════════════════════════════════

The MIT License (MIT)

Copyright © 2020 Michael Gledhill

Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
and associated documentation files (the “Software”), to deal in the Software without restriction, 
including without limitation the rights to use, copy, modify, merge, publish, distribute, 
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
furnished to do so, subject to the following conditions: 

The above copyright notice and this permission notice shall be included in all copies or 
substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

════════════════════════════════════════════
                   ┌────────────┐
You can reach the author by email here:   │  mg@practicalseries.com  │
                   └────────────┘
Questions, corrections, constructive criticism and complaints (polite ones) are invited.

</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="B5" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="B6" CompositionName="Items">
                <AttributeList>
                  <Culture>en-US</Culture>
                  <Text>LICENCE AND CONTACT INFORMATION</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <MultilingualText ID="B7" CompositionName="Title">
        <ObjectList>
          <MultilingualTextItem ID="B8" CompositionName="Items">
            <AttributeList>
              <Culture>en-US</Culture>
              <Text>Standard Module [INSTRUMENTATION] — Analog Instrument Read, Scale and Monitor</Text>
            </AttributeList>
          </MultilingualTextItem>
        </ObjectList>
      </MultilingualText>
    </ObjectList>
  </SW.Blocks.FC>
</Document>